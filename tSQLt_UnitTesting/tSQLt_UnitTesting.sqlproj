<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <Name>tSQLt_UnitTesting</Name>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectVersion>4.1</ProjectVersion>
    <ProjectGuid>{ec6666e5-b9e5-4a93-a016-5d8d65d2ee28}</ProjectGuid>
    <DSP>Microsoft.Data.Tools.Schema.Sql.Sql100DatabaseSchemaProvider</DSP>
    <OutputType>Database</OutputType>
    <RootPath>
    </RootPath>
    <RootNamespace>tSQLt_UnitTesting</RootNamespace>
    <AssemblyName>tSQLt_UnitTesting</AssemblyName>
    <ModelCollation>1033,CS</ModelCollation>
    <DefaultFileStructure>BySchemaAndSchemaType</DefaultFileStructure>
    <DeployToDatabase>True</DeployToDatabase>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetLanguage>CS</TargetLanguage>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <SqlServerVerification>False</SqlServerVerification>
    <IncludeCompositeObjects>True</IncludeCompositeObjects>
    <TargetDatabaseSet>True</TargetDatabaseSet>
    <DefaultCollation>SQL_Latin1_General_CP1_CS_AS</DefaultCollation>
    <DefaultFilegroup>PRIMARY</DefaultFilegroup>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <OutputPath>bin\Release\</OutputPath>
    <BuildScriptName>$(MSBuildProjectName).sql</BuildScriptName>
    <TreatWarningsAsErrors>False</TreatWarningsAsErrors>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <OutputPath>bin\Debug\</OutputPath>
    <BuildScriptName>$(MSBuildProjectName).sql</BuildScriptName>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- VS10 without SP1 will not have VisualStudioVersion set, so do that here -->
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <!-- Default to the v10.0 targets path if the targets file for the current VS version is not found -->
    <SSDTExists Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\SSDT\Microsoft.Data.Tools.Schema.SqlTasks.targets')">True</SSDTExists>
    <VisualStudioVersion Condition="'$(SSDTExists)' == ''">10.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\SSDT\Microsoft.Data.Tools.Schema.SqlTasks.targets" />
  <ItemGroup>
    <Folder Include="Properties" />
    <Folder Include="tSQLt\" />
    <Folder Include="tSQLt\Tables\" />
    <Folder Include="tSQLt\Views\" />
    <Folder Include="tSQLt\Functions\" />
    <Folder Include="tSQLt\Stored Procedures\" />
    <Folder Include="testi21Database\" />
    <Folder Include="testi21Database\Stored Procedures\" />
    <Folder Include="tSQLt\User Defined Types\" />
    <Folder Include="Assemblies\" />
    <Folder Include="Scripts" />
    <Folder Include="Schema" />
    <Folder Include="testi21Database\Functions" />
    <Folder Include="testi21Database\Scripts" />
  </ItemGroup>
  <ItemGroup>
    <Build Include="tSQLt\Tables\TestResult.sql" />
    <Build Include="tSQLt\Tables\TestMessage.sql" />
    <Build Include="tSQLt\Tables\Run_LastExecution.sql" />
    <Build Include="tSQLt\Tables\Private_ExpectException.sql" />
    <Build Include="tSQLt\Tables\CaptureOutputLog.sql" />
    <Build Include="tSQLt\Tables\Private_RenamedObjectLog.sql" />
    <Build Include="tSQLt\Tables\Private_NullCellTable.sql" />
    <Build Include="tSQLt\Views\TestClasses.sql" />
    <Build Include="tSQLt\Views\Tests.sql" />
    <Build Include="tSQLt\Functions\Private_QuoteClassNameForNewTestClass.sql" />
    <Build Include="tSQLt\Functions\GetTestResultFormatter.sql" />
    <Build Include="tSQLt\Functions\Private_GetLastTestNameIfNotProvided.sql" />
    <Build Include="tSQLt\Functions\Private_GetCleanSchemaName.sql" />
    <Build Include="tSQLt\Functions\Private_GetCleanObjectName.sql" />
    <Build Include="tSQLt\Functions\Private_GetOriginalTableName.sql" />
    <Build Include="tSQLt\Functions\Private_GetQuotedFullName.sql" />
    <Build Include="tSQLt\Functions\Private_GetSchemaId.sql" />
    <Build Include="tSQLt\Functions\Private_IsTestClass.sql" />
    <Build Include="tSQLt\Functions\Private_GetCommaSeparatedColumnList.sql" />
    <Build Include="tSQLt\Functions\Private_SqlVariantFormatter.sql" />
    <Build Include="tSQLt\Functions\Private_GetFullTypeName.sql" />
    <Build Include="tSQLt\Functions\TestCaseSummary.sql" />
    <Build Include="tSQLt\Functions\Private_ResolveFakeTableNamesForBackwardCompatibility.sql" />
    <Build Include="tSQLt\Functions\Private_GetOriginalTableInfo.sql" />
    <Build Include="tSQLt\Functions\F_Num.sql" />
    <Build Include="tSQLt\Functions\Private_ResolveSchemaName.sql" />
    <Build Include="tSQLt\Functions\Private_ResolveObjectName.sql" />
    <Build Include="tSQLt\Functions\Private_ResolveName.sql" />
    <Build Include="tSQLt\Functions\Info.sql" />
    <Build Include="tSQLt\Functions\Private_GetForeignKeyParColumns.sql" />
    <Build Include="tSQLt\Functions\Private_GetForeignKeyRefColumns.sql" />
    <Build Include="tSQLt\Functions\Private_GetForeignKeyDefinition.sql" />
    <Build Include="tSQLt\Functions\Private_GetQuotedTableNameForConstraint.sql" />
    <Build Include="tSQLt\Functions\Private_FindConstraint.sql" />
    <Build Include="tSQLt\Functions\Private_ResolveApplyConstraintParameters.sql" />
    <Build Include="tSQLt\Functions\Private_GetConstraintType.sql" />
    <Build Include="tSQLt\Functions\Private_GetDataTypeOrComputedColumnDefinition.sql" />
    <Build Include="tSQLt\Functions\Private_GetIdentityDefinition.sql" />
    <Build Include="tSQLt\Functions\Private_GetDefaultConstraintDefinition.sql" />
    <Build Include="tSQLt\Functions\Private_GetUniqueConstraintDefinition.sql" />
    <Build Include="tSQLt\Stored Procedures\DropClass.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_DisallowOverwritingNonTestSchema.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_MarkSchemaAsTestClass.sql" />
    <Build Include="tSQLt\Stored Procedures\NewTestClass.sql" />
    <Build Include="tSQLt\Stored Procedures\Fail.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_Print.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_PrintXML.sql" />
    <Build Include="tSQLt\Stored Procedures\GetNewTranName.sql" />
    <Build Include="tSQLt\Stored Procedures\SetTestResultFormatter.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="tSQLt\Stored Procedures\Private_OutputTestResults.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_SaveTestNameForSession.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_ValidateProcedureCanBeUsedWithSpyProcedure.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertEquals.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertEqualsString.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_SetFakeViewOn_SingleView.sql" />
    <Build Include="tSQLt\Stored Procedures\SetFakeViewOn.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_SetFakeViewOff_SingleView.sql" />
    <Build Include="tSQLt\Stored Procedures\SetFakeViewOff.sql" />
    <Build Include="tSQLt\Stored Procedures\Uninstall.sql" />
    <Build Include="tSQLt\Stored Procedures\LogCapturedOutput.sql" />
    <Build Include="tSQLt\Stored Procedures\TableToText.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_MarkObjectBeforeRename.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_RenameObjectToUniqueName.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_RenameObjectToUniqueNameUsingObjectId.sql" />
    <Build Include="tSQLt\Stored Procedures\RemoveObject.sql" />
    <Build Include="tSQLt\Stored Procedures\RemoveObjectIfExists.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_GetSetupProcedureName.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_CleanTestResult.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_RunTest.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_RunTestClass.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_Run.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_RunAll.sql" />
    <Build Include="tSQLt\Stored Procedures\RunAll.sql" />
    <Build Include="tSQLt\Stored Procedures\RunTest.sql" />
    <Build Include="tSQLt\Stored Procedures\Run.sql" />
    <Build Include="tSQLt\Stored Procedures\RunWithXmlResults.sql" />
    <Build Include="tSQLt\Stored Procedures\RunWithNullResults.sql" />
    <Build Include="tSQLt\Stored Procedures\DefaultResultFormatter.sql" />
    <Build Include="tSQLt\Stored Procedures\XmlResultFormatter.sql" />
    <Build Include="tSQLt\Stored Procedures\NullTestResultFormatter.sql" />
    <Build Include="tSQLt\Stored Procedures\RunTestClass.sql" />
    <Build Include="tSQLt\Stored Procedures\ExpectException.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="tSQLt\Stored Procedures\ExpectNoException.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="tSQLt\Stored Procedures\Private_ApplyCheckConstraint.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_ApplyForeignKeyConstraint.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_ApplyUniqueConstraint.sql" />
    <Build Include="tSQLt\Stored Procedures\ApplyConstraint.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_ValidateFakeTableParameters.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_CreateFakeOfTable.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_MarkFakeTable.sql" />
    <Build Include="tSQLt\Stored Procedures\FakeTable.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_CreateProcedureSpy.sql" />
    <Build Include="tSQLt\Stored Procedures\SpyProcedure.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_CreateResultTableForCompareTables.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_ValidateThatAllDataTypesInTableAreSupported.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_CompareTablesFailIfUnequalRowsExists.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_CompareTables.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertObjectExists.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertObjectDoesNotExist.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertEqualsTable.sql" />
    <Build Include="tSQLt\Stored Procedures\StubRecord.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertLike.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertNotEquals.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertEmptyTable.sql" />
    <Build Include="tSQLt\Stored Procedures\ApplyTrigger.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_ValidateObjectsCompatibleWithFakeFunction.sql" />
    <Build Include="tSQLt\Stored Procedures\Private_CreateFakeFunction.sql" />
    <Build Include="tSQLt\Stored Procedures\FakeFunction.sql" />
    <Build Include="tSQLt\Stored Procedures\RenameClass.sql" />
    <Build Include="tSQLt\Stored Procedures\ResultSetFilter.sql" />
    <Build Include="tSQLt\Stored Procedures\AssertResultSetsHaveSameMetaData.sql" />
    <Build Include="tSQLt\Stored Procedures\NewConnection.sql" />
    <Build Include="tSQLt\Stored Procedures\CaptureOutput.sql" />
    <Build Include="tSQLt\Stored Procedures\SuppressOutput.sql" />
    <Build Include="tSQLt\User Defined Types\Private.sql" />
    <None Include="Scripts\ChangeDbOwner.sql" />
    <None Include="Scripts\SetClrEnabled.sql" />
    <Build Include="Schema\testi21Database.sql" />
    <Build Include="Schema\tSQLt.sql" />
    <Build Include="testi21Database\Functions\test the fnAddZeroPrefixes function.sql" />
    <Build Include="testi21Database\Stored Procedures\test the uspCMAddDeposit stored procedure.sql" />
    <Build Include="testi21Database\Functions\test the fnGetCostingMethod function.sql" />
    <Build Include="testi21Database\Functions\test fnGetItemGLAccount function for purchase account.sql" />
    <Build Include="testi21Database\Scripts\test the constraints of tblAPBill.sql" />
    <Build Include="testi21Database\Scripts\test the constraints of tblAPBillBatch.sql" />
    <Build Include="testi21Database\Scripts\test the constraints of tblAPPayment.sql" />
    <Build Include="testi21Database\Scripts\test the constraints of tblAPVendor.sql" />
    <Build Include="testi21Database\Functions\test the fnGetGLAccountIdFromProfitCenter function on 8x8 account structure.sql" />
    <Build Include="testi21Database\Functions\test the fnGetGLAccountIdFromProfitCenter function on multiple account segments.sql" />
    <Build Include="testi21Database\Stored Procedures\Fake data for simple COA.sql" />
    <Build Include="testi21Database\Stored Procedures\Fake data for multiple segments COA.sql" />
    <Build Include="testi21Database\Stored Procedures\Fake data for simple Items.sql" />
    <Build Include="testi21Database\Functions\test the fnGetNegativeInventoryOptions function.sql" />
    <Build Include="testi21Database\Stored Procedures\test the basics of uspICProcessCosting stored procedure.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICProcessCosting for errors thrown by uspICValidateCostingOnPost.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessCosting for errors thrown by uspICPostCosting.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessCosting for errors thrown by uspICValidateCostingOnUnpost.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessCosting for errors thrown by uspICUnpostCosting.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICValidateCostingOnPost as it checks for an invalid item.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICValidateCostingOnPost as it checks for an invalid item location.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICValidateCostingOnPost as it checks for a valid item and location.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICValidateCostingOnPost if negative stock qty is not allowed.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICValidateCostingOnPost if negative stock qty is allowed.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICValidateCostingOnUnpost if negative stock qty is allowed.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICValidateCostingOnUnpost if negative stock qty is not allowed.sql">
      <SuppressTSqlWarnings>
      </SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Functions\test the fnGetItemCostingOnPostErrors function.sql" />
    <Build Include="testi21Database\Stored Procedures\Fake data for items in a transaction to unpost.sql" />
    <Build Include="testi21Database\Functions\test the fnGetItemsToUnpost function.sql" />
    <Build Include="testi21Database\Functions\test the fnGetItemCostingOnUnpostErrors function.sql" />
    <Build Include="testi21Database\Functions\test fnGetItemGLAccount function for bad inputs.sql" />
    <Build Include="testi21Database\Functions\test fnGetItemGLAccount function for cost of goods.sql" />
    <Build Include="testi21Database\Functions\test fnGetItemBaseGLAccount function for bad inputs.sql" />
    <Build Include="testi21Database\Functions\test fnGetItemBaseGLAccount function for item-level.sql" />
    <Build Include="testi21Database\Functions\test fnGetItemBaseGLAccount function for category level.sql" />
    <Build Include="testi21Database\Functions\test fnGetItemBaseGLAccount function for location level.sql" />
    <Build Include="testi21Database\Functions\test fnGetItemBaseGLAccount function for another location.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost for the basics.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost, Jan 1. Purchase 20 stocks @ 20 dollars each.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\Fake data for item stock.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost, Feb 10. Purchase 20 stocks at 21 dollars each.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost, Feb 15. Purchase 20 stocks at 21.75 dollars each.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost, Mar 1. Sold 40 stocks.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost, Mar 15. Sold 50 stocks.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost, Apr 7. Sold 60 stocks.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost, Apr 12. Purchase 75 stocks at 19 dollars each.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICProcessMovingAverageCost, May 15. Purchase 15 stocks at 27 dollars each.sql">
      <SuppressTSqlWarnings>71502</SuppressTSqlWarnings>
    </Build>
    <Build Include="testi21Database\Stored Procedures\test uspICReduceStockInFIFO for the basics.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICReduceStockInFIFO from zero to negative stock.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICReduceStockInFIFO from positive stock to zero stock.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICReduceStockInFIFO from positive stock to negative stock.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICReduceStockInFIFO from positive stock to positive stock.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICReduceStockInFIFO from negative to negative stock.sql" />
    <Build Include="testi21Database\Functions\test fnDateEquals for the basics.sql" />
    <Build Include="testi21Database\Functions\test fnDateEquals date 1 is valid and date 2 is invalid.sql" />
    <Build Include="testi21Database\Functions\test fnDateEquals date 1 is invalid and date 1 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateEquals date 1 is valid and date 2 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateEquals date 1 higher than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateEquals date 1 is less than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThan date 1 higher than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThan date 1 is valid and date 2 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThan date 1 is invalid and date 2 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThan date 1 is less than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThan date 1 is valid and date 2 is invalid.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThan for the basics.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThanEquals date 1 higher than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThanEquals date 1 is valid and date 2 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThanEquals date 1 is invalid and date 2 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThanEquals date 1 is less than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThanEquals date 1 is valid and date 2 is invalid.sql" />
    <Build Include="testi21Database\Functions\test fnDateGreaterThanEquals for the basics.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThan for the basics.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThan date 1 higher than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThan date 1 is invalid and date 1 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThan date 1 is less than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThan date 1 is valid and date 2 is invalid.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThan date 1 is valid and date 2 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThanEquals date 1 higher than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThanEquals date 1 is invalid and date 1 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThanEquals date 1 is less than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThanEquals date 1 is valid and date 2 is invalid.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThanEquals date 1 is valid and date 2 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateLessThanEquals for the basics.sql" />
    <Build Include="testi21Database\Functions\test fnDateNotEquals date 1 higher than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateNotEquals date 1 is invalid and date 1 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateNotEquals date 1 is less than date 2.sql" />
    <Build Include="testi21Database\Functions\test fnDateNotEquals date 1 is valid and date 2 is invalid.sql" />
    <Build Include="testi21Database\Functions\test fnDateNotEquals date 1 is valid and date 2 is valid.sql" />
    <Build Include="testi21Database\Functions\test fnDateNotEquals for the basics.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICIncreaseStockInFIFO for the basics.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICIncreaseStockInFIFO from negative to positive.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICIncreaseStockInFIFO from positive to positive.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICIncreaseStockInFIFO from zero to positive.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICIncreaseStockInFIFO from negative to negative.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICIncreaseStockInFIFO from negative to zero.sql" />
    <Build Include="testi21Database\Stored Procedures\test uspICIncreaseStockInFIFO from negative to positive _with partial in_.sql" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Assemblies\tSQLtCLR.dll" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="tSQLtCLR">
      <HintPath>Assemblies\tSQLtCLR.dll</HintPath>
      <SqlAssemblyName>tSQLtCLR</SqlAssemblyName>
      <IsModelAware>True</IsModelAware>
      <GenerateSqlClrDdl>False</GenerateSqlClrDdl>
      <SqlOwnerName>dbo</SqlOwnerName>
      <SqlPermissionSet>EXTERNAL_ACCESS</SqlPermissionSet>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\i21Database\i21Database.sqlproj">
      <Name>i21Database</Name>
      <Project>{2e49b212-114b-4cfd-a343-2a2061e987bc}</Project>
      <Private>True</Private>
      <SuppressMissingDependenciesErrors>False</SuppressMissingDependenciesErrors>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <PreDeploy Include="Scripts\PreDeployment.sql" />
  </ItemGroup>
  <ItemGroup>
    <PostDeploy Include="Scripts\PostDeployment.sql" />
  </ItemGroup>
  <ItemGroup>
    <ArtifactReference Include="$(DacPacRootPath)\Extensions\Microsoft\SQLDB\Extensions\SqlServer\100\SqlSchemas\msdb.dacpac">
      <HintPath>$(DacPacRootPath)\Extensions\Microsoft\SQLDB\Extensions\SqlServer\100\SqlSchemas\msdb.dacpac</HintPath>
      <SuppressMissingDependenciesErrors>False</SuppressMissingDependenciesErrors>
      <DatabaseVariableLiteralValue>master</DatabaseVariableLiteralValue>
    </ArtifactReference>
    <ArtifactReference Include="$(DacPacRootPath)\Extensions\Microsoft\SQLDB\Extensions\SqlServer\100\SqlSchemas\master.dacpac">
      <HintPath>$(DacPacRootPath)\Extensions\Microsoft\SQLDB\Extensions\SqlServer\100\SqlSchemas\master.dacpac</HintPath>
      <SuppressMissingDependenciesErrors>False</SuppressMissingDependenciesErrors>
      <DatabaseVariableLiteralValue>msdb</DatabaseVariableLiteralValue>
    </ArtifactReference>
  </ItemGroup>
</Project>