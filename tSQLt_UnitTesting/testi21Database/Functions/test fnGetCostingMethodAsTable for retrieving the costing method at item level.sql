CREATE PROCEDURE testi21Database.[test fnGetCostingMethodAsTable for retrieving the costing method at item level]
AS 
BEGIN
	-- Arrange
	BEGIN
		-- Declare the variables for grains (item)
		DECLARE @WetGrains AS INT = 1
				,@StickyGrains AS INT = 2
				,@PremiumGrains AS INT = 3
				,@ColdGrains AS INT = 4
				,@HotGrains AS INT = 5

		-- Declare the variables for location
		DECLARE @Default_Location AS INT = 1
				,@NewHaven AS INT = 2
				,@BetterHaven AS INT = 3

		-- Declare the costing methods
		DECLARE @AverageCost AS INT = 1
				,@FIFO AS INT = 2
				,@LIFO AS INT = 3


		CREATE TABLE expected(
			CostingMethod INT NULL
		)

		CREATE TABLE actual(
			CostingMethod INT NULL
		)

		INSERT INTO expected 
		SELECT @AverageCost

		DECLARE @intItemId AS INT
		DECLARE @intLocationId AS INT

		EXEC testi21Database.[Fake data for the Costing Method];
	END

	-- Act
	BEGIN 
		/***************************************************************************************************************************************************************************************************************
			Below is the matrix that shows that data generated by [Fake data for the Costing Method]
			-------------------------------------------------------------------------------------------
			Item			Location			Category	Expected Costing Method		Level Type
			--------------	------------------	-----------	--------------------------	---------------
			WetGrains		Default_Location	NULL		Average Cost				Item level
			WetGrains		NewHaven			NULL		Average Cost				Item level
			WetGrains		BetterHaven			NULL		NULL						None
			StickyGrains	Default_Location	NULL		Average Cost				Item level
			StickyGrains	NewHaven			NULL		Average Cost				Item level
			StickyGrains	BetterHaven			NULL		NULL						None
			PremiumGrains	Default_Location	NULL		Average Cost				Item level
			PremiumGrains	NewHaven			NULL		Average Cost				Item level
			PremiumGrains	BetterHaven			NULL		NULL						None
			ColdGrains		Default_Location	ColdItems	Average Cost				Item level
			ColdGrains		NewHaven			ColdItems	LIFO						Category level
			ColdGrains		BetterHaven			ColdItems	LIFO						Category level
			HotGrains		Default_Location	HotItems	Average Cost				Item level
			HotGrains		NewHaven			HotItems	FIFO						Category level
			HotGrains		BetterHaven			HotItems	FIFO						Category level
		***************************************************************************************************************************************************************************************************************/
		INSERT INTO actual
		SELECT CostingMethod 
		FROM dbo.fnGetCostingMethodAsTable(@WetGrains, @Default_Location)
	END 

	-- Assert 
	BEGIN 			
		EXEC tSQLt.AssertEqualsTable 'expected', 'actual';
	END 

	-- Clean-up: remove the tables used in the unit test
	BEGIN
		IF OBJECT_ID('actual') IS NOT NULL 
			DROP TABLE actual

		IF OBJECT_ID('expected') IS NOT NULL 
			DROP TABLE dbo.expected
	END 
END 