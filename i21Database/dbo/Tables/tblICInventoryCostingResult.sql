/*
	This table will hold the validation result of post or unpost process. 
	Data on this table will be shown in a grid so that the user will know why the post or unpost failed. 
*/
CREATE TABLE [dbo].[tblICInventoryCostingResult]
(
	[intResultId] INT NOT NULL IDENTITY, -- Primary key 
    [strBatchId] NVARCHAR(20) COLLATE Latin1_General_CI_AS NOT NULL, -- Batch id generated by uspSMGetStartingNumber. 
    [intTransactionId] INT NOT NULL, -- The number id of the transaction. 
	[strTransactionId] NVARCHAR(40) COLLATE Latin1_General_CI_AS NOT NULL, -- The string id of the transaction.  
    [intTransactionTypeId] INT NOT NULL, -- The transaction type id of the transaction. 
	[intItemId] INT NOT NULL, -- The item id being posted/unposted. 
	[intItemLocationStoreId] INT NOT NULL, -- The location-store id of the item being posted/unposted. 
	[dblUnitQty] NUMERIC(18,6) NOT NULL DEFAULT 0, -- The unit qty of the item being posted/unposted. 
	[dblUOMQty] NUMERIC(18,6) NOT NULL DEFAULT 1, -- The UOM qty of the item being posted/unposted. 
	[dblCost] NUMERIC(18,6) NOT NULL DEFAULT 0, -- The cost of the item. 
	[dblSalesPrice] NUMERIC(18,6) NOT NULL DEFAULT 0, -- The sales price of the item. 
	[intCurrencyId] INT NULL, -- The FK key to the currency table. 
	[dblExchangeRate] NUMERIC(18,6) NOT NULL DEFAULT 1, -- The exchange rate used in thet transaction
    [dtmDate] DATETIME NOT NULL, -- The date of the transaction. 
	[intLotId] INT NULL, -- The lot number linked to the item. 
    [intMessageId] INT NOT NULL, -- Corresponds to the msg_is used in sp_addmessage (see uspCMPostMesages). 
    [intUserId] INT NULL, -- The user who is doing the post/unpost. 
    [intEntityId] INT NULL, -- The entity id related to the transaction. 
    [dtmCreated] DATETIME NOT NULL, -- The system date when the record is being posted/unposted. 
    CONSTRAINT [PK_tblICInventoryCostingResult] PRIMARY KEY NONCLUSTERED ([intResultId])
)
GO

CREATE CLUSTERED INDEX [IDX_tblICInventoryCostingResult]
    ON [dbo].[tblICInventoryCostingResult]([dtmCreated] ASC, [intResultId] ASC); -- Physically arrange the records by dtmDateCreated and intResultId. It will help speed the lookup and deleting of old records. 
GO

CREATE NONCLUSTERED INDEX [IX_tblICInventoryCostingResult_intResultId]
    ON [dbo].[tblICInventoryCostingResult]([intResultId] ASC); -- Index the intResultId so that we can find the record much faster. 

GO

CREATE NONCLUSTERED INDEX [IX_tblICInventoryCostingResult_strBatchId]
    ON [dbo].[tblICInventoryCostingResult]([strBatchId] ASC); -- Index the batch id so that we can find the record much faster. 

GO

CREATE NONCLUSTERED INDEX [IX_tblICInventoryCostingResult_strTransactionId]
    ON [dbo].[tblICInventoryCostingResult]([strTransactionId] ASC); -- Index transaction id so that we can find the record much faster. 

GO

CREATE NONCLUSTERED INDEX [IX_tblICInventoryCostingResult_intTransactionId]
    ON [dbo].[tblICInventoryCostingResult]([intTransactionId] ASC); -- Index transaction id so that we can find the record much faster. 

GO