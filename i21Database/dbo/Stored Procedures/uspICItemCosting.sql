/*
	This is the main stored procedure used for handling the inventory costing. 
*/

CREATE PROCEDURE [dbo].[uspICItemCosting]
	@ItemCosting AS ItemCostingTableType READONLY,
	@strBatchId AS NVARCHAR(20),
	@ysnPost AS BIT
AS

SET QUOTED_IDENTIFIER OFF
SET ANSI_NULLS ON
SET NOCOUNT ON
SET XACT_ABORT ON
SET ANSI_WARNINGS OFF

/* Check if we are doing a post */
IF @ysnPost = 1 
BEGIN 
	BEGIN TRY
		-- Do the Validation
		EXEC dbo.uspICItemCostingPostValidation @ItemCosting

		-- TODO: Group the items. 
		DECLARE @IncomingStocks AS ItemCostingTableType
		DECLARE @OutgoingStocks AS ItemCostingTableType

		-- Process all incoming stocks first
		EXEC dbo.uspICItemCostingIns @IncomingStocks

		-- Process all outgoing stocks
		EXEC dbo.uspICItemCostingOuts @OutgoingStocks 

		-- Generate the GL entries
		--SELECT	[strTransactionId]		= A.strTransactionId
		--		,[intTransactionId]		= A.intTransactionId
		--		,[dtmDate]				= A.dtmDate
		--		,[strBatchId]			= @strBatchId
		--		,[intAccountId]			= 
		--		,[dblDebit]				= 
		--		,[dblCredit]			= 
		--		,[dblDebitUnit]			= 
		--		,[dblCreditUnit]		= 
		--		,[strDescription]		= 
		--		,[strCode]				= 
		--		,[strReference]			= 
		--		,[intCurrencyId]		= 
		--		,[dblExchangeRate]		= 
		--		,[dtmDateEntered]		= GETDATE()
		--		,[dtmTransactionDate]	= A.dtmDate
		--		,[strJournalLineDescription] = NULL 
		--		,[ysnIsUnposted]		= 0 
		--		,[intConcurrencyId]		= 1
		--		,[intUserId]			= 
		--		,[strTransactionForm]	= @TRANSACTION_FORM
		--		,[strModuleName]		= @MODULE_NAME
		--		,[intEntityId]			= A.intEntityId
		--FROM	tblICInventoryTransaction A INNER JOIN @ItemCosting B
		--			ON A.intTransactionId = B.intTransactionId

	END TRY
	BEGIN CATCH
		-- Call the item costing error handler
		EXEC dbo.uspICItemCostingErrorHandler
		RETURN;
	END CATCH 

END

/* Check if we are doing an unpost*/
ELSE IF @ysnPost = 0
BEGIN 
	BEGIN TRY
		-- Validate if the transaction can be reversed. 
		EXEC dbo.uspICItemCostingUnPostValidation

		-- Reverse the stocks
		EXEC dbo.uspICItemCostingReversal

		-- The G/L Reversals are generated by the calling stored procedure. 
	END TRY
	BEGIN CATCH
		-- Call the item costing error handler
		EXEC dbo.uspICItemCostingErrorHandler
		RETURN;
	END CATCH 

END 

