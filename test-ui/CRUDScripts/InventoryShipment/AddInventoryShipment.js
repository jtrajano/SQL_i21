StartTest (function (t) {
    new iRely.FunctionalTest().start(t)

        //region Scenario 1. Create Direct Inventory Shipment for Non Lotted Item
        .displayText('=====  Scenario 1. Creeate Direct IS for Non Lotted Item  =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Shipments','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowNumber('OrderType',4,0)
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .selectComboBoxRowValue('FreightTerms', 'Truck', 'FreightTerms',1)
        .selectComboBoxRowValue('Currency', 'USD', 'Currency',1)
        .selectComboBoxRowValue('ShipFromAddress', '0001 - Fort Wayne', 'ShipFromAddress',1)
        .selectComboBoxRowNumber('ShipToAddress',1,0)

        .selectGridComboBoxRowValue('InventoryShipment',1,'strItemNo','ISNLTI - 01','strItemNo')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strUnitMeasure','LB','strUnitMeasure')
        .enterGridData('InventoryShipment', 1, 'colQuantity', '100')


        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colSubLocation', 'Raw Station')
        .verifyGridData('InventoryShipment', 1, 'colStorageLocation', 'RM Storage')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '1400')


        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .displayText('===== Create Direct Inventory Shipment for Non Lotted Item Done=====')
        //endregion

        //region Scenario 2. Create Direct Inventory Shipment for Lotted Item
        .displayText('=====  Scenario 2. Creeate Direct IS for Lotted Item  =====')
        .clickButton('New')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowNumber('OrderType',4,0)
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .selectComboBoxRowValue('FreightTerms', 'Truck', 'FreightTerms',1)
        .selectComboBoxRowValue('Currency', 'USD', 'FreightTerms',1)
        .selectComboBoxRowValue('ShipFromAddress', '0001 - Fort Wayne', 'ShipFromAddress',1)
        .selectComboBoxRowNumber('ShipToAddress',1,0)

        .selectGridComboBoxRowValue('InventoryShipment',1,'strItemNo','ISLTI - 01','strItemNo')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strUnitMeasure','LB','strUnitMeasure')
        .enterGridData('InventoryShipment', 1, 'colQuantity', '100')
        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colSubLocation', 'Raw Station')
        .verifyGridData('InventoryShipment', 1, 'colStorageLocation', 'RM Storage')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '1400')

        .selectGridComboBoxRowValue('LotTracking',1,'strLotId','LOT-01','strLotId')
        .enterGridData('LotTracking', 1, 'colShipQty', '100')
        .verifyGridData('LotTracking', 1, 'colLotUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colGrossWeight', '100')
        .verifyGridData('LotTracking', 1, 'colTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colNetWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Create Direct Inventory Shipment for Non Lotted Item Done=====')
        //endregion


        //region Scenario 3. Create Sales Order Inventory Shipment for Non Lotted Item Ship Button
        .displayText('=====  Scenario 3. Ship Button SO to IS for Non Lotted =====')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')
        .clickMenuScreen('Sales Orders','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('arsalesorder')
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .enterData('Text Field','BOLNo','Test BOL - 01')
        .selectComboBoxRowValue('FreightTerm', 'Truck', 'FreightTerm',1)
        .selectGridComboBoxRowValue('SalesOrder',1,'strItemNo','ISNLTI - 01','strItemNo')
        .addResult('Item Selected',1500)
        .enterGridData('SalesOrder', 1, 'colOrdered', '100')
        .verifyGridData('SalesOrder', 1, 'colPrice', '14')
//        .verifyGridData('SalesOrder', 1, 'colTotal', '1400')
        .clickButton('Save')
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','WARNING: Customer may exceed credit limit!','ok','information')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .clickButton('Ship')
        .waitUntilLoaded('')
        .addResult('Clicked Ship Button',3000)
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','WARNING: Customer may exceed credit limit!','ok','information')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .addResult('Open Inventory Shipment Screen',3000)
        .waitUntilLoaded('')
        .waitUntilLoaded('')

        .selectComboBoxRowValue('Currency', 'USD', 'Currency',1)
        .verifyData('Combo Box','OrderType','Sales Order')
        .verifyData('Combo Box','Customer','ABC Trucking')
        .verifyData('Combo Box','FreightTerms','Truck')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strSubLocationName','Raw Station','strSubLocationName')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strStorageLocationName','RM Storage','strStorageLocationName')
        .verifyGridData('InventoryShipment', 1, 'colItemNumber', 'ISNLTI - 01')
        .verifyGridData('InventoryShipment', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '1400')


        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .displayText('===== Ship Button SO to IS for Non Lotted Done=====')
        //endregion


        //region Scenario 4. Create Sales Order Inventory Shipment for Lotted Item Ship Button
        .displayText('=====  Scenario 4. Ship Button SO to IS for Lotted =====')
        .clickButton('New')
        .waitUntilLoaded('arsalesorder')
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .enterData('Text Field','BOLNo','Test BOL - 01')
        .selectComboBoxRowValue('FreightTerm', 'Truck', 'FreightTerm',1)
        .selectGridComboBoxRowValue('SalesOrder',1,'strItemNo','ISLTI - 01','strItemNo')
        .addResult('Item Selected',1500)
        .enterGridData('SalesOrder', 1, 'colOrdered', '100')
        .verifyGridData('SalesOrder', 1, 'colPrice', '14')
        //.verifyGridData('SalesOrder', 1, 'colTotal', '1400')
        .clickButton('Save')
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','WARNING: Customer may exceed credit limit!','ok','information')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .clickButton('Ship')
        .addResult('Clicked Ship Button',3000)
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','WARNING: Customer may exceed credit limit!','ok','information')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .addResult('Open Inventory Shipment Screen',3000)
        .waitUntilLoaded('')
        .waitUntilLoaded('')

        .verifyData('Combo Box','OrderType','Sales Order')
        .verifyData('Combo Box','Customer','ABC Trucking')
        .verifyData('Combo Box','FreightTerms','Truck')
        .selectComboBoxRowValue('Currency', 'USD', 'Currency',1)
        .verifyGridData('InventoryShipment', 1, 'colItemNumber', 'ISLTI - 01')
        .verifyGridData('InventoryShipment', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '1400')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strSubLocationName','Raw Station','strSubLocationName')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strStorageLocationName','RM Storage','strStorageLocationName')

        .selectGridComboBoxRowValue('LotTracking',1,'strLotId','LOT-01','strLotId')
        .enterGridData('LotTracking', 1, 'colShipQty', '100')
        .verifyGridData('LotTracking', 1, 'colLotUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colGrossWeight', '100')
        .verifyGridData('LotTracking', 1, 'colTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colNetWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')
        .displayText('===== Ship Button SO to IS for Lotted Done=====')
        //endregion

        //region Scenario 5. Create Sales Order Inventory Shipment for Non Lotted Item Add Orders Screen
        .displayText('=====  Scenario 5. Add Orders Screen SO to IS for Non Lotted =====')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')
        .clickMenuScreen('Sales Orders','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('arsalesorder')
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .enterData('Text Field','BOLNo','Test BOL - 01')
        .selectComboBoxRowValue('FreightTerm', 'Truck', 'FreightTerm',1)
        .selectGridComboBoxRowValue('SalesOrder',1,'strItemNo','ISNLTI - 01','strItemNo')
        .addResult('Item Selected',1500)
        .enterGridData('SalesOrder', 1, 'colOrdered', '100')
        .verifyGridData('SalesOrder', 1, 'colPrice', '14')
       // .verifyGridData('SalesOrder', 1, 'colTotal', '1400')
        .clickButton('Save')
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','WARNING: Customer may exceed credit limit!','ok','information')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')

        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Shipments','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowNumber('OrderType',2,0)
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .waitUntilLoaded()
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowValue('FreightTerms', 'Truck', 'FreightTerms',1)
        .selectComboBoxRowValue('Currency', 'USD', 'Currency',1)
        .selectComboBoxRowValue('ShipFromAddress', '0001 - Fort Wayne', 'ShipFromAddress',1)
        .selectComboBoxRowNumber('ShipToAddress',1,0)

        .verifyGridData('InventoryShipment', 1, 'colItemNumber', 'ISLTI - 01')
        .verifyGridData('InventoryShipment', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '1400')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strSubLocationName','Raw Station','strSubLocationName')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strStorageLocationName','RM Storage','strStorageLocationName')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Ship Button SO to IS for Non Lotted Done=====')
        //endregion

        //region Scenario 6. Create Sales Order Inventory Shipment for Lotted Item Add Orders Screen
        .displayText('=====  Scenario 6. Add Orders Screen SO to IS for Lotted =====')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')
        .clickMenuScreen('Sales Orders','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('arsalesorder')
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .enterData('Text Field','BOLNo','Test BOL - 01')
        .selectComboBoxRowValue('FreightTerm', 'Truck', 'FreightTerm',1)
        .selectGridComboBoxRowValue('SalesOrder',1,'strItemNo','ISLTI - 01','strItemNo')
        .addResult('Item Selected',1500)
        .enterGridData('SalesOrder', 1, 'colOrdered', '100')
        .verifyGridData('SalesOrder', 1, 'colPrice', '14')
        //.verifyGridData('SalesOrder', 1, 'colTotal', '1400')
        .clickButton('Save')
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','WARNING: Customer may exceed credit limit!','ok','information')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')

        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Shipments','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowNumber('OrderType',2,0)
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .waitUntilLoaded()
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowValue('FreightTerms', 'Truck', 'FreightTerms',1)
        .selectComboBoxRowValue('Currency', 'USD', 'Currency',1)
        .selectComboBoxRowValue('ShipFromAddress', '0001 - Fort Wayne', 'ShipFromAddress',1)
        .selectComboBoxRowNumber('ShipToAddress',1,0)

        .verifyGridData('InventoryShipment', 1, 'colItemNumber', 'ISLTI - 01')
        .verifyGridData('InventoryShipment', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '1400')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strSubLocationName','Raw Station','strSubLocationName')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strStorageLocationName','RM Storage','strStorageLocationName')

        .selectGridComboBoxRowValue('LotTracking',1,'strLotId','LOT-01','strLotId')
        .enterGridData('LotTracking', 1, 'colShipQty', '100')
        .verifyGridData('LotTracking', 1, 'colLotUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colGrossWeight', '100')
        .verifyGridData('LotTracking', 1, 'colTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colNetWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Ship Button SO to IS for Lotted Done=====')
        //endregion

        //region Scenario 7. Create Sales Contract Inventory Shipment for Non Lotted Item Add Orders Screen
        .displayText('=====  Scenario 7. Add Orders Screen SC to IS for Non Lotted =====')
        .clickMenuFolder('Contract Management','Folder')
        .clickMenuScreen('Contracts','Screen')
        .clickButton('New')
        .waitUntilLoaded('ctcontract')
        .selectComboBoxRowValue('Type', 'Sale', 'Type',1)
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .selectComboBoxRowValue('Commodity', 'TestCorn2', 'Commodity',1)
        .enterData('Text Field','Quantity','100')
        .selectComboBoxRowValue('CommodityUOM', 'LB', 'CommodityUOM',1)
        .selectComboBoxRowValue('Position', 'Arrival', 'Position',1)
        .selectComboBoxRowValue('PricingType', 'Cash', 'PricingType',1)
        .selectComboBoxRowValue('Salesperson', 'Bob Smith', 'Salesperson',1)
        .clickButton('AddDetail')
        .waitUntilLoaded('ctcontractsequence')
        .addFunction (function (next){
        var date = new Date().toLocaleDateString();
        new iRely.FunctionalTest().start(t, next)
            .enterData('Date Field','EndDate', date, 0, 10)
            .done();
        })
        .selectComboBoxRowValue('Location', '0001 - Fort Wayne', 'Location',1)
        .selectComboBoxRowValue('Item', 'ISNLTI - 01', 'Item',1)
        .selectComboBoxRowValue('NetWeightUOM', 'LB', 'NetWeightUOM',1)
        .verifyData('Text Field','NetWeight','100.0000')
        .verifyData('Combo Box','PricingType','Cash')
        .verifyData('Combo Box','PriceCurrency','USD')
        .verifyData('Combo Box','CashPriceUOM','LB')
        .enterData('Text Field','CashPrice','14')
        .clickButton('Save')
        .waitUntilLoaded('ctcontract')
        .clickButton('Save')
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Contract Management','Folder')


        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Shipments','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowNumber('OrderType',1,0)
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .waitUntilLoaded()
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowValue('FreightTerms', 'Truck', 'FreightTerms',1)
        .selectComboBoxRowValue('Currency', 'USD', 'Currency',1)
        .selectComboBoxRowValue('ShipFromAddress', '0001 - Fort Wayne', 'ShipFromAddress',1)
        .selectComboBoxRowNumber('ShipToAddress',1,0)

        .verifyGridData('InventoryShipment', 1, 'colItemNumber', 'ISNLTI - 01')
        .verifyGridData('InventoryShipment', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '1400')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strSubLocationName','Raw Station','strSubLocationName')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strStorageLocationName','RM Storage','strStorageLocationName')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Ship Button SO to IS for Non Lotted Done=====')
        //endregion

        //region Scenario 8. Create Sales Contract Inventory Shipment for Lotted Item Add Orders Screen
        .displayText('=====  Scenario 8. Add Orders Screen SC to IS for Lotted =====')
        .clickMenuFolder('Contract Management','Folder')
        .clickMenuScreen('Contracts','Screen')
        .clickButton('New')
        .waitUntilLoaded('ctcontract')
        .selectComboBoxRowValue('Type', 'Sale', 'Type',1)
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .selectComboBoxRowValue('Commodity', 'TestCorn2', 'Commodity',1)
        .enterData('Text Field','Quantity','100')
        .selectComboBoxRowValue('CommodityUOM', 'LB', 'CommodityUOM',1)
        .selectComboBoxRowValue('Position', 'Arrival', 'Position',1)
        .selectComboBoxRowValue('PricingType', 'Cash', 'PricingType',1)
        .selectComboBoxRowValue('Salesperson', 'Bob Smith', 'Salesperson',1)
        .clickButton('AddDetail')
        .waitUntilLoaded('ctcontractsequence')
        .addFunction (function (next){
        var date = new Date().toLocaleDateString();
        new iRely.FunctionalTest().start(t, next)
            .enterData('Date Field','EndDate', date, 0, 10)
            .done();
         })
        .selectComboBoxRowValue('Location', '0001 - Fort Wayne', 'Location',1)
        .selectComboBoxRowValue('Item', 'ISLTI - 01', 'Item',1)
        .selectComboBoxRowValue('NetWeightUOM', 'LB', 'NetWeightUOM',1)
        .verifyData('Text Field','NetWeight','100.0000')
        .verifyData('Combo Box','PricingType','Cash')
        .verifyData('Combo Box','PriceCurrency','USD')
        .verifyData('Combo Box','CashPriceUOM','LB')
        .enterData('Text Field','CashPrice','14')
        .clickButton('Save')
        .waitUntilLoaded('ctcontract')
        .clickButton('Save')
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Contract Management','Folder')


        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Shipments','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowNumber('OrderType',1,0)
        .selectComboBoxRowValue('Customer', 'ABC Trucking', 'Customer',1)
        .waitUntilLoaded()
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .waitUntilLoaded('icinventoryshipment')
        .selectComboBoxRowValue('FreightTerms', 'Truck', 'FreightTerms',1)
        .selectComboBoxRowValue('Currency', 'USD', 'Currency',1)
        .selectComboBoxRowValue('ShipFromAddress', '0001 - Fort Wayne', 'ShipFromAddress',1)
        .selectComboBoxRowNumber('ShipToAddress',1,0)

        .verifyGridData('InventoryShipment', 1, 'colItemNumber', 'ISLTI - 01')
        .verifyGridData('InventoryShipment', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '1400')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strSubLocationName','Raw Station','strSubLocationName')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strStorageLocationName','RM Storage','strStorageLocationName')

        .selectGridComboBoxRowValue('LotTracking',1,'strLotId','LOT-01','strLotId')
        .enterGridData('LotTracking', 1, 'colShipQty', '100')
        .verifyGridData('LotTracking', 1, 'colLotUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colGrossWeight', '100')
        .verifyGridData('LotTracking', 1, 'colTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colNetWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Ship Button SO to IS for Non Lotted Done=====')
        //endregion

        .done();

})