StartTest (function (t) {
    var commonIC = Ext.create('Inventory.CommonIC');
    new iRely.FunctionalTest().start(t)

        //region Scenario 1. Create Inventory Transfer for Non Lotted Item Shipment Not Required Location to Location then Delete IT
        //Receive Items for Stock
        .displayText('=====  Scenario 1. Create Inventory Transfer for Non Lotted Item Shipment Not Required Location to Location then Delete IT =====')
        //Create NON Lotted Item.
        .displayText('===== Pre setup: Items for Delete Inventory Shipment Script =====')
        //Add Non Lotted Item
        .addFunction(function(next){
            commonIC.addInventoryItem
            (t,next,
                'DTNLTI - 02'
                , 'Test Non Lotted Item Description'
                , 'TestGrains3'
                , 'TestCorn3'
                , 4
                , 'LB'
                , 'LB'
                , 10
                , 10
                , 40
            )
        })

        //Create inventory Receipt for Stock
        .displayText('=====  Creating Direct Inventory Receipt for SNLTI - 14 for Stock=====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryreceipt')
        .selectComboBoxRowNumber('ReceiptType',4,0)
        .selectComboBoxRowValue('Vendor', 'ABC Trucking', 'Vendor',1)
        .selectComboBoxRowValue('Location', '0001 - Fort Wayne', 'Location',0)
        .selectGridComboBoxRowValue('InventoryReceipt',1,'strItemNo','DTNLTI - 02','strItemNo')
        .enterUOMGridData('InventoryReceipt', 1, 'colUOMQtyToReceive', 'strUnitMeasure', 1000, 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colItemSubCurrency', 'USD')
        .enterGridData('InventoryReceipt', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colWeightUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colGross', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colNet', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '10000')

        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .waitUntilLoaded('')
        .clickTab('Details')
        .waitUntilLoaded('')
        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colDebit', '10000')
        .verifyGridData('RecapTransaction', 2, 'colAccountId', '21000-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colCredit', '10000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',2000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .displayText('=====  Creating Direct Inventory Receipt for SNLTI - 14 Done=====')

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '1000')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Create Inventory Transfer for Non Lotted Item Shipment Not Required Location to Location
        .displayText('===== Scenario 1. Create Inventory Transfer for Non Lotted Item Shipment Not Required Location to Location=====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventorytransfer')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','DTNLTI - 02','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '100')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .addResult('Successfully Openede',2000)
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16000-0002-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .clickButton('Close')
        .waitUntilLoaded('')

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Unpost Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
         .clickMenuFolder('Inventory','Folder')
        .displayText('===== Create Inventory Transfer for Non Lotted Item Shipment Not Required Done =====')
        //endregion


        //region Scenario 2. Create Inventory Transfer for Lotted Item Shipment Not Required Location to Location then Delete IT
        //Receive Items for Stock
        .displayText('=====  Scenario 2. Create Inventory Transfer for Lotted Item Shipment Not Required Location to Location then Delete IT =====')
        //Create NON Lotted Item.
        .displayText('===== Pre setup: Items for Delete Inventory Shipment Script =====')
        .displayText('===== Creating Lotted Item =====')
        .addFunction(function(next){
            commonIC.addInventoryItem
            (t,next,
                'DTLTI - 02'
                , 'Test Lotted Item Description'
                , 'TestGrains3'
                , 'TestCorn3'
                , 3
                , 'LB'
                , 'LB'
                , 10
                , 10
                , 40
            )
        })

        //Create inventory Receipt for Stock
        .displayText('=====  Creating Direct Inventory Receipt for SNLTI - 14 for Stock=====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryreceipt')
        .selectComboBoxRowNumber('ReceiptType',4,0)
        .selectComboBoxRowValue('Vendor', 'ABC Trucking', 'Vendor',1)
        .selectComboBoxRowValue('Location', '0001 - Fort Wayne', 'Location',0)
        .selectGridComboBoxRowValue('InventoryReceipt',1,'strItemNo','DTLTI - 02','strItemNo')
        .enterUOMGridData('InventoryReceipt', 1, 'colUOMQtyToReceive', 'strUnitMeasure', 1000, 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colItemSubCurrency', 'USD')
        .enterGridData('InventoryReceipt', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colWeightUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colGross', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colNet', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '10000')

        .enterGridData('LotTracking', 1, 'colLotId', 'LOT-01')
        .selectGridComboBoxRowValue('LotTracking',1,'strUnitMeasure','LB','strUnitMeasure')
        .enterGridData('LotTracking', 1, 'colLotQuantity', '1000')
        .verifyGridData('LotTracking', 1, 'colLotGrossWeight', '1000')
        .verifyGridData('LotTracking', 1, 'colLotTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colLotNetWeight', '1000')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colLotStorageLocation', 'RM Storage')

        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .waitUntilLoaded('')
        .clickTab('Details')
        .waitUntilLoaded('')
        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colDebit', '10000')
        .verifyGridData('RecapTransaction', 2, 'colAccountId', '21000-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colCredit', '10000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',2000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .displayText('=====  Creating Direct Inventory Receipt for SNLTI - 14 Done=====')

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '1000')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //region Scenario 2. Create Inventory Transfer for Lotted Item Shipment Not Required Location to Location
        .displayText('===== Scenario 2. Create Inventory Transfer for Lotted Item Shipment Not Required Location to Location=====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventorytransfer')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','DTLTI - 02','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strLotNumber','LOT-01','strLotNumber')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '100')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .addResult('Successfully Opened',2000)
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16000-0002-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .displayText('===== Create Inventory Transfer for Lotted Item Shipment Not Required Done =====')
        //endregion


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Unpost Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Create Inventory Transfer for Lotted Item Shipment Not Required Done =====')
        //endregion


        //region Scenario 4. Create Inventory Transfer for Non Lotted Item Shipment Required Different Location
        .displayText('===== Scenario 4. Create Inventory Transfer for Non Lotted Item Shipment Required Location to Location =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventorytransfer')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .clickCheckBox('ShipmentRequired', true)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','DTNLTI - 02','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '100')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .addResult('Successfully Opened',2000)
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Create Inventory Receipt for the transfer.
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryreceipt')
        .selectComboBoxRowNumber('ReceiptType',3,0)
        .selectComboBoxRowValue('Transferor', '0001 - Fort Wayne', 'Transferor',0)
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icinventoryreceipt')
        .verifyData('Combo Box','ReceiptType','Transfer Order')
        .verifyData('Combo Box','Transferor','0001 - Fort Wayne')
        .verifyData('Combo Box','Location','0002 - Indianapolis')
        .verifyData('Combo Box','Currency','USD')
        .verifyGridData('InventoryReceipt', 1, 'colItemNo', 'DTNLTI - 02')
        .verifyGridData('InventoryReceipt', 1, 'colOrderUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colQtyOrdered', '100')
        .verifyGridData('InventoryReceipt', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colSubLocation', 'Indy')
        .verifyGridData('InventoryReceipt', 1, 'colStorageLocation', 'Indy Storage')


        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .waitUntilLoaded('')
        .clickTab('Details')
        .waitUntilLoaded('')
        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',2000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Unpost Inventory Receipt
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Transfer Order', 'strOrderType', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .addResult('Successfully Unposted',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Receipt
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Transfer Order', 'strOrderType', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        //Unpost Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .addResult('Successfully Unposted',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Create Inventory Transfer for Non Lotted Item Shipment Not Required then Delete IT Done =====')
        //endregion



        //region Scenario 5. Create Inventory Transfer for Lotted Item Shipment Required Different Location
        .displayText('===== Scenario 5. Create Inventory Transfer for Lotted Item Shipment Required Location to Location =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventorytransfer')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .clickCheckBox('ShipmentRequired', true)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','DTLTI - 02','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strLotNumber','LOT-01','strLotNumber')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '100')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .addResult('Successfully Opened',2000)
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


         //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Create Inventory Receipt for the transfer.
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryreceipt')
        .selectComboBoxRowNumber('ReceiptType',3,0)
        .selectComboBoxRowValue('Transferor', '0001 - Fort Wayne', 'Transferor',0)
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icinventoryreceipt')
        .verifyData('Combo Box','ReceiptType','Transfer Order')
        .verifyData('Combo Box','Transferor','0001 - Fort Wayne')
        .verifyData('Combo Box','Location','0002 - Indianapolis')
        .verifyData('Combo Box','Currency','USD')
        .verifyGridData('InventoryReceipt', 1, 'colItemNo', 'DTLTI - 02')
        .verifyGridData('InventoryReceipt', 1, 'colOrderUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colQtyToReceive', '100')
        .verifyGridData('InventoryReceipt', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colSubLocation', 'Indy')
        .verifyGridData('InventoryReceipt', 1, 'colStorageLocation', 'Indy Storage')

        .selectGridRowNumber('InventoryReceipt', [1])

        .waitTillLoaded()
        .enterGridData('LotTracking', 1, 'colLotId', 'LOT-01')
        .selectGridComboBoxRowValue('LotTracking',1,'strUnitMeasure','LB','strUnitMeasure')
        .enterGridData('LotTracking', 1, 'colLotQuantity', '100')
        .verifyGridData('LotTracking', 1, 'colLotGrossWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colLotNetWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colLotStorageLocation', 'Indy Storage')

        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .waitUntilLoaded('')
        .clickTab('Details')
        .waitUntilLoaded('')
        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colAccountId', '16000-0002-000')
        .verifyGridData('RecapTransaction', 1, 'colDebit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colCredit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',2000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Unpost Inventory Receipt
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Transfer Order', 'strOrderType', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .addResult('Successfully Unposted',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Receipt
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Transfer Order', 'strOrderType', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        //Unpost Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .addResult('Successfully Unposted',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 02', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .displayText('===== Create Inventory Transfer for Lotted Item Shipment Not Required then Delete IT Done =====')
        //endregion


        .done();

})