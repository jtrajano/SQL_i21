StartTest (function (t) {
    var commonIC = Ext.create('Inventory.CommonIC');
    new iRely.FunctionalTest().start(t)


        //region
        .displayText('===== Pre-setup =====')
        /*====================================== Add Another Company Location for Irelyadmin User and setup default decimals ======================================*/
        .displayText('===== 1. Add Indianapolis for Company Location for irelyadmin User =====')
        .clickMenuFolder('System Manager','Folder')
        .clickMenuScreen('Users','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('irelyadmin', 'strUsername', 1)
        .waitUntilLoaded('')
        .waitUntilLoaded()
        .selectComboBoxRowValue('Timezone', '(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi', 'Timezone',0)
        .clickTab('User')
        .waitUntilLoaded()
        .clickTab('User Roles')

        .waitUntilLoaded()
        .filterGridRecords('UserRoleCompanyLocationRolePermission', 'FilterGrid', '0002 - Indianapolis')
        .waitUntilLoaded()

        .continueIf({
            expected: true,
            actual: function (win,next) {
                new iRely.FunctionalTest().start(t, next)
                    .displayText('Location already exists.')
                return win.down('#grdUserRoleCompanyLocationRolePermission').store.getCount() == 0;
            },
            success: function(next){
                new iRely.FunctionalTest().start(t, next)

                    .displayText('Location is not yet existing.')
                    .clickButton('Close')
                    .waitUntilLoaded()
                    .clickMessageBoxButton('no')
                    .waitUntilLoaded()
                    .doubleClickSearchRowValue('irelyadmin', 'strUsername', 1)
                    .waitUntilLoaded('ementity')
                    .clickTab('User')
                    .waitUntilLoaded()
                    .clickTab('User Roles')
                    .waitUntilLoaded()
                    .selectGridComboBoxRowValue('UserRoleCompanyLocationRolePermission', 'Dummy','strLocationName', '0002 - Indianapolis','strLocationName', 1)
                    .selectGridComboBoxBottomRowValue('UserRoleCompanyLocationRolePermission', 'strUserRole', 'ADMIN', 'strUserRole', 1)
                    .clickTab('Detail')
                    .waitUntilLoaded()
                    .selectComboBoxRowValue('UserNumberFormat', '1,234,567.89', 'UserNumberFormat',1)
                    .clickButton('Save')
                    .waitUntilLoaded()
                    .clickButton('Close')
                    .waitUntilLoaded()
                    .doubleClickSearchRowValue('irelyadmin', 'strUsername', 1)
                    .waitUntilLoaded('ementity')
                    .clickTab('User')
                    .waitUntilLoaded()
                    .clickTab('User Roles')
                    .waitUntilLoaded()
                    .filterGridRecords('UserRoleCompanyLocationRolePermission', 'FilterGrid', '0002 - Indianapolis')
                    .waitUntilLoaded()
                    .done();
            },
            continueOnFail: true
        })
        .continueIf({
            expected: true,
            actual: function (win,next) {
                new iRely.FunctionalTest().start(t, next)
                    .displayText('Location already exists.')
                return win.down('#grdUserRoleCompanyLocationRolePermission').store.getCount() != 0;
            },
            success: function(next){
                new iRely.FunctionalTest().start(t, next)
                    .clickButton('Close')
                    .waitUntilLoaded()
                    .clickMessageBoxButton('no')
                    .waitUntilLoaded()
                    .clickMenuFolder('System Manager','Folder')
                    .waitUntilLoaded()
                    .done();
            },
            continueOnFail: true
        })


        /*====================================== Add Storage Location for Indianapolis======================================*/
        .clickMenuFolder('Inventory','Folder')
        .waitUntilLoaded()
        .clickMenuScreen('Storage Locations','Screen')
        .filterGridRecords('Search', 'FilterGrid', 'Indy Storage')
        .waitUntilLoaded()
        .continueIf({
            expected: true,
            actual: function (win,next) {
                return win.down('#grdSearch').store.getCount() == 0;
            },
            success: function(next){
                new iRely.FunctionalTest().start(t, next)
                    .displayText('===== Scenario 1: Add New Storage Location. =====')
                    .clickMenuScreen('Storage Locations','Screen')
                    .clickButton('New')
                    .waitUntilLoaded('icstorageunit')
                    .enterData('Text Field','Name','Indy Storage')
                    .enterData('Text Field','Description','Indy Storage')
                    .selectComboBoxRowNumber('UnitType',6,0)
                    .selectComboBoxRowNumber('Location',2,0)
                    .selectComboBoxRowNumber('SubLocation',1,0)
                    .selectComboBoxRowNumber('ParentUnit',1,0)
                    .enterData('Text Field','Aisle','Test Aisle - 01')
                    .clickCheckBox('AllowConsume', true)
                    .clickCheckBox('AllowMultipleItems', true)
                    .clickCheckBox('AllowMultipleLots', true)
                    .clickCheckBox('CycleCounted', true)
                    .verifyStatusMessage('Edited')
                    .clickButton('Save')
                    .verifyStatusMessage('Saved')
                    .clickButton('Close')
                    .waitUntilLoaded('')
                    .done();
            },
            continueOnFail: true
        })
        .clickMenuFolder('Inventory','Folder')
        /*====================================== Add Category ======================================*/
        //region
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Categories','Screen')
        .filterGridRecords('Search', 'FilterGrid', 'IT - Category - 01')
        .waitUntilLoaded()
        .continueIf({
            expected: true,
            actual: function (win,next) {
                new iRely.FunctionalTest().start(t, next)
                    .displayText('Category already exists.')
                return win.down('#grdSearch').store.getCount() == 0;
            },

            success: function(next){
                new iRely.FunctionalTest().start(t, next)
                    //Add Category
                    .displayText('===== Scenario 4: Add Category =====')
                    .clickMenuFolder('Inventory','Folder')
                    .addFunction(function(next){
                        commonIC.addCategory (t,next, 'IT - Category - 01', 'Test Category Description', 2)
                    })
                    .clickMenuFolder('Inventory','Folder')
                    .waitUntilLoaded('')
                    .done();
            },
            continueOnFail: true
        })


        /*====================================== Add Commodity ======================================*/

        .clickMenuScreen('Commodities','Screen')
        .filterGridRecords('Search', 'FilterGrid', 'IT - Commodity - 02')
        .waitUntilLoaded()
        .continueIf({
            expected: true,
            actual: function (win,next) {
                new iRely.FunctionalTest().start(t, next)
                    .displayText('Commodity already exists.')
                return win.down('#grdSearch').store.getCount() == 0;
            },

            success: function(next){
                new iRely.FunctionalTest().start(t, next)
                    .clickMenuFolder('Inventory','Folder')
                    //Add Commodity
                    .displayText('===== Scenario 6: Add Commodity =====')
                    .addFunction(function(next){
                        commonIC.addCommodity (t,next, 'IT - Commodity - 02', 'Test Commodity Description')
                    })
                    .clickMenuFolder('Inventory','Folder')
                    .waitUntilLoaded('')
                    .done();
            },
            continueOnFail: true
        })


        /*====================================== Add Lotted Item ======================================*/
        .clickMenuScreen('Items','Screen')
        .filterGridRecords('Search', 'FilterGrid', 'DTLTI - 03')
        .waitUntilLoaded()
        .continueIf({
            expected: true,
            actual: function (win,next) {
                new iRely.FunctionalTest().start(t, next)
                    .displayText('Item already exists.')
                return win.down('#grdSearch').store.getCount() == 0;
            },

            success: function(next){
                new iRely.FunctionalTest().start(t, next)
                    .clickMenuFolder('Inventory','Folder')
                    .displayText('===== Scenario 5: Add Lotted Item =====')
                    .addFunction(function(next){
                        commonIC.addInventoryItem
                        (t,next,
                            'DTLTI - 03'
                            , 'Test Lotted Item Description'
                            , 'IT - Category - 01'
                            , 'IT - Commodity - 02'
                            , 3
                            , 'Test_Pounds'
                            , 'Test_Pounds'
                            , 10
                            , 10
                            , 40
                        )
                    })
                    .clickMenuFolder('Inventory','Folder')
                    .waitUntilLoaded('')
                    .done();
            },
            continueOnFail: true
        })


        /*====================================== Add Non Lotted Item ======================================*/
        .clickMenuScreen('Items','Screen')
        .filterGridRecords('Search', 'FilterGrid', 'DTNLTI - 03')
        .waitUntilLoaded()
        .continueIf({
            expected: true,
            actual: function (win,next) {
                new iRely.FunctionalTest().start(t, next)
                    .displayText('Item already exists.')
                return win.down('#grdSearch').store.getCount() == 0;
            },

            success: function(next){
                new iRely.FunctionalTest().start(t, next)
                    .clickMenuFolder('Inventory','Folder')
                    .displayText('===== Scenario 6: Add Non Lotted Item =====')
                    .addFunction(function(next){
                        commonIC.addInventoryItem
                        (t,next,
                            'DTNLTI - 03'
                            , 'Test Non Lotted Item Description'
                            , 'IT - Category - 01'
                            , 'IT - Commodity - 02'
                            , 4
                            , 'Test_Pounds'
                            , 'Test_Pounds'
                            , 10
                            , 10
                            , 40
                        )
                    })
                    .waitUntilLoaded('')
                    .clickMenuFolder('Inventory','Folder')
                    .done();
            },
            continueOnFail: true
        })
        .clickMenuFolder('Inventory','Folder')


        //Adding Stock to Items
        .displayText('===== Adding Stocks to Created items =====')
        .addFunction(function(next){
            commonIC.addDirectIRNonLotted (t,next, 'ABC Trucking', 1, 'DTNLTI - 03','Test_Pounds', 1000, 10)
        })

        .addFunction(function(next){
            commonIC.addDirectIRLotted (t,next, 'ABC Trucking', 1, 'DTLTI - 03','Test_Pounds', 1000, 10, 'Raw Station', 'RM Storage', 'LOT-01', 'Test_Pounds')
        })
        .displayText('===== Adding Stocks to Created Done =====')
        .displayText('===== Pre-setup done =====')



        //region Scenario 1. Create Inventory Transfer for Non Lotted Item Shipment Not Required Location to Location then Delete IT
        .displayText('=====  Scenario 1. Create Inventory Transfer for Non Lotted Item Shipment Not Required Location to Location then Delete IT =====')
        .clickMenuFolder('Inventory','Folder')
        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '1000')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Create Inventory Transfer for Non Lotted Item Shipment Not Required Location to Location
        .displayText('===== Scenario 1. Create Inventory Transfer for Non Lotted Item Shipment Not Required Location to Location=====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','DTNLTI - 03','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'Test_Pounds')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '100')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')

        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .addResult('Successfully Openede',2000)
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16000-0002-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .clickButton('Close')
        .waitUntilLoaded('')

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Unpost Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
         .clickMenuFolder('Inventory','Folder')
        .displayText('===== Create Inventory Transfer for Non Lotted Item Shipment Not Required Done =====')
        //endregion


        //region Scenario 2. Create Inventory Transfer for Lotted Item Shipment Not Required Location to Location then Delete IT
        .clickMenuFolder('Inventory','Folder')
        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '1000')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //region Scenario 2. Create Inventory Transfer for Lotted Item Shipment Not Required Location to Location
        .displayText('===== Scenario 2. Create Inventory Transfer for Lotted Item Shipment Not Required Location to Location=====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','DTLTI - 03','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'Test_Pounds')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strLotNumber','LOT-01','strLotNumber')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '100')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')

        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .addResult('Successfully Opened',2000)
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16000-0002-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .displayText('===== Create Inventory Transfer for Lotted Item Shipment Not Required Done =====')
        //endregion


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Unpost Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Create Inventory Transfer for Lotted Item Shipment Not Required Done =====')
        //endregion


        //region Scenario 4. Create Inventory Transfer for Non Lotted Item Shipment Required Different Location
        .displayText('===== Scenario 4. Create Inventory Transfer for Non Lotted Item Shipment Required Location to Location =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .clickCheckBox('ShipmentRequired', true)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','DTNLTI - 03','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'Test_Pounds')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '100')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')

        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .addResult('Successfully Opened',2000)
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Create Inventory Receipt for the transfer.
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .selectComboBoxRowNumber('ReceiptType',3,0)
        .selectComboBoxRowValue('Transferor', '0001 - Fort Wayne', 'Transferor',0)
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('')
        .verifyData('Combo Box','ReceiptType','Transfer Order')
        .verifyData('Combo Box','Transferor','0001 - Fort Wayne')
        .verifyData('Combo Box','Location','0002 - Indianapolis')
        .verifyData('Combo Box','Currency','USD')
        .verifyGridData('InventoryReceipt', 1, 'colItemNo', 'DTNLTI - 03')
        .verifyGridData('InventoryReceipt', 1, 'colOrderUOM', 'Test_Pounds')
        .verifyGridData('InventoryReceipt', 1, 'colQtyOrdered', '100')
        .verifyGridData('InventoryReceipt', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'Test_Pounds')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colSubLocation', 'Indy')
        .verifyGridData('InventoryReceipt', 1, 'colStorageLocation', 'Indy Storage')


        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .waitUntilLoaded('')
        .clickTab('Details')
        .waitUntilLoaded('')
        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',2000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Unpost Inventory Receipt
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Transfer Order', 'strOrderType', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .addResult('Successfully Unposted',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Receipt
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Transfer Order', 'strOrderType', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        //Unpost Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .addResult('Successfully Unposted',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTNLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Create Inventory Transfer for Non Lotted Item Shipment Not Required then Delete IT Done =====')
        //endregion



        //region Scenario 5. Create Inventory Transfer for Lotted Item Shipment Required Different Location
        .displayText('===== Scenario 5. Create Inventory Transfer for Lotted Item Shipment Required Location to Location =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .clickCheckBox('ShipmentRequired', true)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','DTLTI - 03','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strLotNumber','LOT-01','strLotNumber')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'Test_Pounds')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '100')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')

        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .addResult('Successfully Opened',2000)
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


         //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Create Inventory Receipt for the transfer.
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .selectComboBoxRowNumber('ReceiptType',3,0)
        .selectComboBoxRowValue('Transferor', '0001 - Fort Wayne', 'Transferor',0)
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('')
        .verifyData('Combo Box','ReceiptType','Transfer Order')
        .verifyData('Combo Box','Transferor','0001 - Fort Wayne')
        .verifyData('Combo Box','Location','0002 - Indianapolis')
        .verifyData('Combo Box','Currency','USD')
        .verifyGridData('InventoryReceipt', 1, 'colItemNo', 'DTLTI - 03')
        .verifyGridData('InventoryReceipt', 1, 'colOrderUOM', 'Test_Pounds')
        .verifyGridData('InventoryReceipt', 1, 'colQtyToReceive', '100')
        .verifyGridData('InventoryReceipt', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'Test_Pounds')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colSubLocation', 'Indy')
        .verifyGridData('InventoryReceipt', 1, 'colStorageLocation', 'Indy Storage')

        .selectGridRowNumber('InventoryReceipt', [1])

        .waitTillLoaded()
        .enterGridData('LotTracking', 1, 'colLotId', 'LOT-01')
        .selectGridComboBoxRowValue('LotTracking',1,'strUnitMeasure','Test_Pounds','strUnitMeasure')
        .enterGridData('LotTracking', 1, 'colLotQuantity', '100')
        .verifyGridData('LotTracking', 1, 'colLotGrossWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colLotNetWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'Test_Pounds')
        .verifyGridData('LotTracking', 1, 'colLotStorageLocation', 'Indy Storage')

        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .waitUntilLoaded('')
        .clickTab('Details')
        .waitUntilLoaded('')
        .clickTab('Post Preview')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colAccountId', '16000-0002-000')
        .verifyGridData('RecapTransaction', 1, 'colDebit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colCredit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',2000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Unpost Inventory Receipt
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Transfer Order', 'strOrderType', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .addResult('Successfully Unposted',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Receipt
        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Transfer Order', 'strOrderType', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '900')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '100')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '900')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        //Unpost Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Unpost')
        .waitUntilLoaded()
        .addResult('Successfully Unposted',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Delete Inventory Transfer
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('Test Transfer', 'strDescription', 1)
        .waitUntilLoaded()
        .clickButton('Delete')
        .waitUntilLoaded()
        .verifyMessageBox('iRely i21','Are you sure you want to delete this record?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .addResult('Successfully Deleted',2000)
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('DTLTI - 03', 'strItemNo', 1)
        .waitUntilLoaded('icitem')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '1000')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '1000')

        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .displayText('===== Create Inventory Transfer for Lotted Item Shipment Not Required then Delete IT Done =====')
        //endregion


        .done();

})