StartTest (function (t) {
    new iRely.FunctionalTest().start(t)

        //region Scenario 1: Add Lotted Yes Serial Item
        .displayText('===== Scenario 1: Add Lotted Yes Serial Item =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Items','Screen')
        .clickButton('New')
        .enterData('textbox','ItemNo','001 - CLTI')
        .enterData('textbox','Description','001 - CRUD Lotted Item Serial')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'Corn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',2,0)
        .verifyData('combobox','Tracking','Lot Level')
        .selectGridComboBoxRowValue('UnitOfMeasure',1,'strUnitMeasure','LB','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',2,'strUnitMeasure','50 lb bag','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',3,'strUnitMeasure','Bushels','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',4,'strUnitMeasure','25 kg bag','strUnitMeasure')
        .clickGridCheckBox('UnitOfMeasure', 'strUnitMeasure', 'LB', 'ysnStockUnit', true).wait(1000)
        .waitTillLoaded()
        .verifyGridData('UnitOfMeasure', 0, 'colDetailUnitQty', '1')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '50')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '56')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '55.1156')

        .clickTab('Setup')
        .clickButton('AddRequiredAccounts').wait(100)
        .verifyGridData('GlAccounts', 0, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory Adjustment')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Auto-Variance')
        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '21000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '16000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40010-0001-006', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16050-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '16040-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 7, 'strAccountId', '16010-0000-000', 'strAccountId')

        .clickTab('Location')
        .clickButton('AddLocation')
        .waitTillLoaded()
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .clickTab('Pricing')
        .waitTillLoaded()
        .verifyGridData('Pricing', 0, 'strLocationName', '0001 - Fort Wayne')
        .enterGridData('Pricing', 0, 'dblLastCost', '10')
        .enterGridData('Pricing', 0, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 0, 'strPricingMethod',2)
        .enterGridData('Pricing', 0, 'dblAmountPercent', '40')
        .clickButton('Save')
        .clickButton('Close')


        //region Scenario 2: Add Lotted Yes Manual Item
        .displayText('===== Scenario 2: Add Lotted Yes Manual Item =====')
        .clickButton('New')
        .enterData('textbox','ItemNo','002 - CLTI')
        .enterData('textbox','Description','002 - CRUD Lotted Item Manual')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'Corn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',1,0)
        .verifyData('combobox','Tracking','Lot Level')
        .selectGridComboBoxRowValue('UnitOfMeasure',1,'strUnitMeasure','LB','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',2,'strUnitMeasure','50 lb bag','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',3,'strUnitMeasure','Bushels','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',4,'strUnitMeasure','25 kg bag','strUnitMeasure')
        .clickGridCheckBox('UnitOfMeasure', 'strUnitMeasure', 'LB', 'ysnStockUnit', true)
        .waitTillLoaded()
        .verifyGridData('UnitOfMeasure', 0, 'colDetailUnitQty', '1')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '50')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '56')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '55.1156')

        .clickTab('Setup')
        .clickButton('AddRequiredAccounts').wait(100)
        .verifyGridData('GlAccounts', 0, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory Adjustment')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Auto-Variance')
        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '21000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '16000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40010-0001-006', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16050-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '16040-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 7, 'strAccountId', '16010-0000-000', 'strAccountId')

        .clickTab('Location')
        .clickButton('AddLocation')
        .waitTillLoaded()
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .clickTab('Pricing')
        .waitTillLoaded()
        .verifyGridData('Pricing', 0, 'strLocationName', '0001 - Fort Wayne')
        .enterGridData('Pricing', 0, 'dblLastCost', '10')
        .enterGridData('Pricing', 0, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 0, 'strPricingMethod',2)
        .enterGridData('Pricing', 0, 'dblAmountPercent', '40')
        .clickButton('Save')
        .clickButton('Close')


        //region Scenario 3: Add Non Lotted Item
        .displayText('===== Scenario 3: Add Non Lotted Item =====')
        .clickButton('New')
        .enterData('textbox','ItemNo','001 - CNLTI')
        .enterData('textbox','Description','001 - CRUD Non Lotted Item')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'Corn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',1,0)
        .verifyData('combobox','Tracking','Lot Level')
        .selectGridComboBoxRowValue('UnitOfMeasure',1,'strUnitMeasure','LB','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',2,'strUnitMeasure','50 lb bag','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',3,'strUnitMeasure','Bushels','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',4,'strUnitMeasure','25 kg bag','strUnitMeasure')
        .clickGridCheckBox('UnitOfMeasure', 'strUnitMeasure', 'LB', 'ysnStockUnit', true)
        .waitTillLoaded()
        .verifyGridData('UnitOfMeasure', 0, 'colDetailUnitQty', '1')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '50')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '56')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '55.1156')

        .clickTab('Setup')
        .clickButton('AddRequiredAccounts').wait(100)
        .verifyGridData('GlAccounts', 0, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory Adjustment')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Auto-Variance')
        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '21000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '16000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40010-0001-006', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16050-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '16040-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 7, 'strAccountId', '16010-0000-000', 'strAccountId')

        .clickTab('Location')
        .clickButton('AddLocation')
        .waitTillLoaded()
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .clickTab('Pricing')
        .waitTillLoaded()
        .verifyGridData('Pricing', 0, 'strLocationName', '0001 - Fort Wayne')
        .enterGridData('Pricing', 0, 'dblLastCost', '10')
        .enterGridData('Pricing', 0, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 0, 'strPricingMethod',2)
        .enterGridData('Pricing', 0, 'dblAmountPercent', '40')
        .clickButton('Save')
        .clickButton('Close')
        //endregion



        //region Scenario 4: Update an Item
        .displayText('===== Scenario 4: Update an Item =====')
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .enterData('textbox','Description','001 - CRUD Lotted Item - Updated')
        .selectGridComboBoxRowValue('UnitOfMeasure',5,'strUnitMeasure','40 lb bag','strUnitMeasure')
        .verifyGridData('UnitOfMeasure', 4, 'colDetailUnitQty', '40').wait(500)
        .verifyStatusMessage('Edited')
        .clickButton('Save')
        .verifyStatusMessage('Saved')
        .clickButton('Close')

        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .verifyData('textbox','Description','001 - CRUD Lotted Item - Updated')
        .verifyGridData('UnitOfMeasure', 0, 'colDetailUnitMeasure', '40 lb bag')
        .verifyGridData('UnitOfMeasure', 0, 'colDetailUnitQty', '40').wait(1000)
        .clickButton('Close')
        //endregion



        //region Scenario 5: Duplicate an Item
        .displayText('===== Scenario 5: Duplicate an Item =====')
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected').wait(1000)
        .clickButton('Duplicate')
        .verifyData('textbox','ItemNo','001 - CLTI-copy')
        .verifyData('textbox','Description','001 - CRUD Lotted Item - Updated')
        .verifyData('combobox','LotTracking','Yes - Serial Number')
        .verifyData('combobox','Category','Grains')
        .verifyData('combobox','Commodity','Corn')
        .verifyGridData('UnitOfMeasure', 0, 'colDetailUnitQty', '40')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '1')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '50')
        .verifyGridData('UnitOfMeasure', 4, 'colDetailUnitQty', '56')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '55.1156')

        .clickTab('Setup')
        .clickButton('AddRequiredAccounts').wait(100)
        .verifyGridData('GlAccounts', 0, 'colGLAccountCategory', 'Auto-Variance')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'Inventory Adjustment')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 6, 'colGLAccountId', '21000-0000-000')
        .verifyGridData('GlAccounts', 5, 'colGLAccountId', '16000-0000-000')
        .verifyGridData('GlAccounts', 4, 'colGLAccountId', '50000-0000-000')
        .verifyGridData('GlAccounts', 3, 'colGLAccountId', '40010-0001-006')
        .verifyGridData('GlAccounts', 2, 'colGLAccountId', '16050-0000-000')
        .verifyGridData('GlAccounts', 1, 'colGLAccountId', '16040-0000-000')
        .verifyGridData('GlAccounts', 0, 'colGLAccountId', '16010-0000-000')

        .clickTab('Location')
        .verifyGridData('LocationStore', 0, 'colLocationLocation', '0001 - Fort Wayne')

        .clickTab('Pricing')
        .waitTillLoaded()
        .verifyGridData('Pricing', 0, 'strLocationName', '0001 - Fort Wayne')
        .verifyGridData('Pricing', 0, 'strPricingMethod', 'Markup Standard Cost')
        .verifyGridData('Pricing', 0, 'dblAmountPercent', '40')
        .clickButton('Close')
        //endregion


        //region Scenario 6: Check Required Fields
        .displayText('===== Scenario 6: Check Required Fields =====')
        .clickButton('New')
        .clickButton('Save')
        .clickButton('Close')
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel','question')
        .clickMessageBoxButton('no')
        //endregion


        //region Scenario 7: Save Duplicate Item No.
        .displayText('===== Scenario 7: Save Duplicate Item No. =====')
        .clickMenuScreen('Items','Screen')
        .clickButton('New')
        .enterData('textbox','ItemNo','001 - CLTI')
        .enterData('textbox','Description','001 - CRUD Lotted Item Serial')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'Corn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',2,0)
        .clickButton('Save')
        .verifyMessageBox('iRely i21','Item No must be unique.','ok','error')
        .clickMessageBoxButton('ok')
        .clickButton('Close')
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel','question')
        .clickMessageBoxButton('yes').wait(1000)
        .verifyMessageBox('iRely i21','Item No must be unique.','ok','error')
        .clickMessageBoxButton('ok')
        .enterData('textbox','ItemNo','003 - CLTI')
        .clickButton('Save')
        .clickButton('Close')

        //endregion




        .done();

})