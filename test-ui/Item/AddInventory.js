StartTest (function (t) {
    new iRely.FunctionalTest().start(t)


        //region Add Commodity
        .displayText('===== Add Commodity for Inventory Item=====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Commodities','Screen')
        .clickButton('New')
        .waitUntilLoaded('iccommodity')
        .enterData('Text Field','CommodityCode','InventoryCorn')
        .enterData('Text Field','Description','Test Corn Commodity')
        .enterData('Text Field','DecimalsOnDpr','6.00')

        .selectGridComboBoxRowValue('Uom',1,'strUnitMeasure','LB','strUnitMeasure')
        .clickGridCheckBox('Uom', 1,'strUnitMeasure', 'LB', 'ysnStockUnit', true)
        .selectGridComboBoxRowValue('Uom',2,'strUnitMeasure','50 lb bag','strUnitMeasure')
        .selectGridComboBoxRowValue('Uom',3,'strUnitMeasure','Bushels','strUnitMeasure')
        .selectGridComboBoxRowValue('Uom',4,'strUnitMeasure','25 kg bag','strUnitMeasure')
        .clickButton('Save')
        .waitUntilLoaded()
        .verifyStatusMessage('Saved')
        .clickButton('Close')
        .displayText('===== Add Commodity Done =====')
        //endregion

        //region Scenario 1: Add Lotted Yes Serial Item
        .displayText('===== Scenario 1: Add Lotted Yes Serial Item =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Items','Screen')
        .clickButton('New')
        .waitUntilLoaded('icitem')
        .enterData('Text Field','ItemNo','001 - CLTI')
        .enterData('Text Field','Description','001 - CRUD Lotted Item Serial')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'InventoryCorn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',2,0)
        .verifyData('Combo Box','Tracking','Lot Level')

        .displayText('===== Setup Item GL Accounts=====')
        .clickTab('Setup')
        .clickButton('AddRequiredAccounts')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Inventory Adjustment')

        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '21000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '16000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40010-0001-006', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16050-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '16040-0000-000', 'strAccountId')


        .displayText('===== Setup Item Location=====')
        .clickTab('Location')
        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .displayText('===== Setup Item Pricing=====')
        .clickTab('Pricing')
        .waitUntilLoaded('')
        .verifyGridData('Pricing', 1, 'strLocationName', '0001 - Fort Wayne')
        .enterGridData('Pricing', 1, 'dblLastCost', '10')
        .enterGridData('Pricing', 1, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 1, 'strPricingMethod',3)
        .enterGridData('Pricing', 1, 'dblAmountPercent', '40')

        .verifyGridData('Pricing', 2, 'strLocationName', '0002 - Indianapolis')
        .enterGridData('Pricing', 2, 'dblLastCost', '10')
        .enterGridData('Pricing', 2, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 2, 'strPricingMethod',3)
        .enterGridData('Pricing', 2, 'dblAmountPercent', '40')
        .clickButton('Save')
        .clickButton('Close')
        .displayText('===== Add Lotted Yes Serial Item Done=====')
        //endregion


        //region Scenario 2: Add Lotted Yes Manual Item
        .displayText('===== Scenario 2: Add Lotted Yes Manual Item =====')
        .clickButton('New')
        .waitUntilLoaded('icitem')
        .enterData('Text Field','ItemNo','002 - CLTI')
        .enterData('Text Field','Description','002 - CRUD Lotted Item Manual')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'InventoryCorn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',1,0)
        .verifyData('Combo Box','Tracking','Lot Level')

        .displayText('===== Setup Item GL Accounts=====')
        .clickTab('Setup')
        .clickButton('AddRequiredAccounts')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Inventory Adjustment')

        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '21000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '16000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40010-0001-006', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16050-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '16040-0000-000', 'strAccountId')

        .displayText('===== Setup Item Location=====')
        .clickTab('Location')
        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .displayText('===== Setup Item Pricing=====')
        .clickTab('Pricing')
        .waitUntilLoaded('')
        .verifyGridData('Pricing', 1, 'strLocationName', '0001 - Fort Wayne')
        .enterGridData('Pricing', 1, 'dblLastCost', '10')
        .enterGridData('Pricing', 1, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 1, 'strPricingMethod',3)
        .enterGridData('Pricing', 1, 'dblAmountPercent', '40')

        .verifyGridData('Pricing', 2, 'strLocationName', '0002 - Indianapolis')
        .enterGridData('Pricing', 2, 'dblLastCost', '10')
        .enterGridData('Pricing', 2, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 2, 'strPricingMethod',3)
        .enterGridData('Pricing', 2, 'dblAmountPercent', '40')
        .clickButton('Save')
        .clickButton('Close')
        .displayText('===== Add Lotted Yes Manual Item Done=====')
        //endregion


        //region Scenario 3: Add Non Lotted Item - Negative Inventory No
        .displayText('===== Scenario 3: Add Non Lotted Item =====')
        .clickButton('New')
        .waitUntilLoaded('icitem')
        .enterData('Text Field','ItemNo','001 - CNLTI')
        .enterData('Text Field','Description','001 - CRUD Non Lotted Item')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'InventoryCorn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',4,0)
        .verifyData('Combo Box','Tracking','Item Level')

        .displayText('===== Setup Item GL Accounts=====')
        .clickTab('Setup')
        .clickButton('AddRequiredAccounts')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Inventory Adjustment')

        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '21000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '16000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40010-0001-006', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16050-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '16040-0000-000', 'strAccountId')


        .displayText('===== Setup Item Location=====')
        .clickTab('Location')
        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .displayText('===== Setup Item Pricing=====')
        .clickTab('Pricing')
        .waitUntilLoaded('')
        .verifyGridData('Pricing', 1, 'strLocationName', '0001 - Fort Wayne')
        .enterGridData('Pricing', 1, 'dblLastCost', '10')
        .enterGridData('Pricing', 1, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 1, 'strPricingMethod',3)
        .enterGridData('Pricing', 1, 'dblAmountPercent', '40')

        .verifyGridData('Pricing', 2, 'strLocationName', '0002 - Indianapolis')
        .enterGridData('Pricing', 2, 'dblLastCost', '10')
        .enterGridData('Pricing', 2, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 2, 'strPricingMethod',3)
        .enterGridData('Pricing', 2, 'dblAmountPercent', '40')
        .clickButton('Save')
        .clickButton('Close')
        .displayText('===== Add Non Lotted Item - Negative Inventory No Done=====')
        //endregion


        //region Scenario 4: Add Non Lotted Item - Negative Inventory Yes
        .displayText('===== Scenario 4: Add Non Lotted Item =====')
        .clickButton('New')
        .waitUntilLoaded('icitem')
        .enterData('Text Field','ItemNo','002 - CNLTI')
        .enterData('Text Field','Description','001 - CRUD Non Lotted Item')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'InventoryCorn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',4,0)
        .verifyData('Combo Box','Tracking','Item Level')

        .displayText('===== Setup Item GL Accounts=====')
        .clickTab('Setup')
        .clickButton('AddRequiredAccounts')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Inventory Adjustment')

        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '21000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '16000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40010-0001-006', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16050-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '16040-0000-000', 'strAccountId')

        .displayText('===== Setup Item Location=====')
        .clickTab('Location')
        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .selectComboBoxRowNumber('NegativeInventory',1,0)
        .clickButton('Save')
        .clickButton('Close')

        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .selectComboBoxRowNumber('NegativeInventory',1,0)
        .clickButton('Save')
        .clickButton('Close')

        .displayText('===== Setup Item Pricing=====')
        .clickTab('Pricing')
        .waitUntilLoaded('')
        .verifyGridData('Pricing', 1, 'strLocationName', '0001 - Fort Wayne')
        .enterGridData('Pricing', 1, 'dblLastCost', '10')
        .enterGridData('Pricing', 1, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 1, 'strPricingMethod',3)
        .enterGridData('Pricing', 1, 'dblAmountPercent', '40')

        .verifyGridData('Pricing', 2, 'strLocationName', '0002 - Indianapolis')
        .enterGridData('Pricing', 2, 'dblLastCost', '10')
        .enterGridData('Pricing', 2, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 2, 'strPricingMethod',3)
        .enterGridData('Pricing', 2, 'dblAmountPercent', '40')
        .clickButton('Save')
        .clickButton('Close')
        .displayText('===== Add Non Lotted Item - Negative Inventory Yes Done=====')
        //endregion


        //region Scenario 5: Update an Item
        .displayText('===== Scenario 5: Update an Item =====')
        .clickMenuScreen('Items','Screen')
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .waitUntilLoaded('icitem')
        .enterData('Text Field','Description','001 - CRUD Lotted Item - Updated')
        .selectGridComboBoxRowValue('UnitOfMeasure',5,'strUnitMeasure','40 lb bag','strUnitMeasure')
        .waitTillLoaded('')
        .verifyGridData('UnitOfMeasure', 5, 'colDetailUnitQty', '40')
        .verifyStatusMessage('Edited')
        .clickButton('Save')
        .verifyStatusMessage('Saved')
        .clickButton('Close')

        .displayText('===== Check Updated Fields Item =====')
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .verifyData('Text Field','Description','001 - CRUD Lotted Item - Updated')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitMeasure', '40 lb bag')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '40')
        .addResult('Successfully Updated',2000)
        .clickButton('Close')
        .displayText('===== Update an Item Done=====')
        //endregion


        //region Scenario 6: Duplicate an Item
        .displayText('===== Scenario 6: Duplicate an Item =====')
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .waitUntilLoaded('icitem')
        .clickButton('Duplicate')
        .waitUntilLoaded('')
        .verifyData('Text Field','ItemNo','001 - CLTI-copy')
        .verifyData('Text Field','Description','001 - CRUD Lotted Item - Updated')
        .verifyData('Combo Box','LotTracking','Yes - Serial Number')
        .verifyData('Combo Box','Category','Grains')
        .verifyData('Combo Box','Commodity','InventoryCorn')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '40')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '55.1156')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '50')
        .verifyGridData('UnitOfMeasure', 4, 'colDetailUnitQty', '1')
        .verifyGridData('UnitOfMeasure', 5, 'colDetailUnitQty', '56')

        .clickTab('Setup')

        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'Inventory Adjustment')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'AP Clearing')

        .verifyGridData('GlAccounts', 6, 'colGLAccountId', '21000-0000-000')
        .verifyGridData('GlAccounts', 5, 'colGLAccountId', '16000-0000-000')
        .verifyGridData('GlAccounts', 4, 'colGLAccountId', '50000-0000-000')
        .verifyGridData('GlAccounts', 3, 'colGLAccountId', '40010-0001-006')
        .verifyGridData('GlAccounts', 2, 'colGLAccountId', '16050-0000-000')
        .verifyGridData('GlAccounts', 1, 'colGLAccountId', '16040-0000-000')

        .clickTab('Location')
        .verifyGridData('LocationStore', 2, 'colLocationLocation', '0001 - Fort Wayne')
        .verifyGridData('LocationStore', 1, 'colLocationLocation', '0002 - Indianapolis')

        .clickTab('Pricing')
        .waitUntilLoaded('')
        .verifyGridData('Pricing', 1, 'strLocationName', '0002 - Indianapolis')
        .verifyGridData('Pricing', 1, 'strPricingMethod', 'Markup Standard Cost')
        .verifyGridData('Pricing', 1, 'dblAmountPercent', '40')
        .verifyGridData('Pricing', 2, 'strLocationName', '0001 - Fort Wayne')
        .verifyGridData('Pricing', 2, 'strPricingMethod', 'Markup Standard Cost')
        .verifyGridData('Pricing', 2, 'dblAmountPercent', '40')
        .clickButton('Close')
        .displayText('===== Duplicate an Item Done=====')
        //endregion


        //region Scenario 7: Check Required Fields
        .displayText('===== Scenario 7: Check Required Fields =====')
        .clickButton('New')
        .waitUntilLoaded('icitem')
        .clickButton('Save')
        .clickButton('Close')
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel','question')
        .clickMessageBoxButton('no')
        .displayText('===== Check Required Fields Done=====')
        //endregion

        //region Scenario 8: Save Duplicate Item No.
        .displayText('===== Scenario 8: Save Duplicate Item No. =====')
        .clickMenuScreen('Items','Screen')
        .clickButton('New')
        .waitUntilLoaded('icitem')
        .enterData('Text Field','ItemNo','001 - CLTI')
        .enterData('Text Field','Description','001 - CRUD Lotted Item Serial')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'InventoryCorn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',2,0)
        .clickButton('Save')
        .verifyMessageBox('iRely i21','Item No must be unique.','ok','error')
        .clickMessageBoxButton('ok')
        .clickButton('Close')
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel','question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','Item No must be unique.','ok','error')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .enterData('Text Field','ItemNo','003 - CLTI')
        .enterData('Text Field','Description','003 - CRUD Lotted Item Serial')
        .clickButton('Save')
        .clickButton('Close')
        .displayText('===== Save Duplicate Item No. Done=====')
        //endregion


        .done();

})