StartTest (function (t) {
    var commonGL = Ext.create('GeneralLedger.commonGL');


    new iRely.FunctionalTest().start(t)


//        .displayText('===== 1a. Add Another Company Location for irelyadmin User. Setup Time Zone and Number Format.  =====')
//        .clickMenuFolder('System Manager','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Users','Screen')
//        .waitUntilLoaded('',3000)
//        .doubleClickSearchRowValue('irelyadmin', 1)
//        .waitUntilLoaded('ementity',3000)
//        .waitUntilLoaded('ementity',3000)
//        .waitUntilLoaded('ementity',3000)
//        .waitUntilLoaded('ementity',3000)
//        .addResult('User record opened',3000)
//        .selectComboBoxRowValue('Timezone', '(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi', 'Timezone',0)
//        .clickTab('User')
//        .waitUntilLoaded('',3000)
//        .selectComboBoxRowValue('UserNumberFormat', '1,234,567.89', 'UserNumberFormat',1)
//        .clickTab('User Roles')
//        .waitUntilLoaded('',3000)
//        .selectGridComboBoxRowValue('UserRoleCompanyLocationRolePermission', 3, 'strLocationName', '0002 - Indianapolis', 'strLocationName')
//        .selectGridComboBoxRowValue('UserRoleCompanyLocationRolePermission', 3, 'strUserRole', 'ADMIN', 'strUserRole')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .waitUntilLoaded('',3000)
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .waitUntilLoaded('',3000)
//        .displayText('===== Added 0002 - Indianapolis to irelyadmin =====')
//        .displayText('===== Setup Time Zone and Number Format =====')
//        .clickMenuFolder('System Manager','Folder')
//        .waitUntilLoaded()

        //Manually setup GL Accounts for the time being until we have Add multiple GL accounts
//    Account ID, Account description, Account Group, Account Category
//    20022, 'AP Clearing', 'Pending Payables', 'AP Clearing'
//    15012, 'Inventories', 'Inventory', 'Inventory'
//    50012, 'COGS', 'Cost of Goods Sold', 'Cost of Goods'
//    40012, 'Sales', 'Sales', 'Sales Account'
//    16012, 'Inventory in Transit', 'Inventories', 'Inventory In-Transit'
//    50022, 'Inventory Adjustment', 'Cost of Goods Sold', 'Inventory Adjustment'
//    50032, 'Inventory Variance', 'Cost of Goods Sold', 'Auto-Variance'
//    12012, 'Accounts Receivable', 'Receivables', 'AR Account'
//    20012, 'Accounts Payable', 'Payables', 'AP Account'
//    49012, 'Other Charge Income', 'Other Income', 'Other Charge Income'
//    59012, 'Other Charge Expense', 'Other Expense', 'Other Charge Expense'
//    25001, 'Sales Tax Liability','Sales Tax Payables','Sales Tax Account'
//    72501, 'Tax Expense','Other Expenses','Purchase Tax Account'

//
        ////        .displayText('=========== 2. Add GL Accounts ===========')
//        .clickMenuFolder('General Ledger')
//        .waitUntilLoaded()
//        .clickMenuScreen('GL Account Detail')
//        .waitUntilLoaded()
//        .addResult('GL Account Detail opened')
//
//        .clickButton('Segments')
//        .waitUntilLoaded()
//        .verifyScreenShown('glsegmentaccounts')
//        .addResult('Segment Accounts screen opened')
//
//        .clickButton('AddSegment')
//        .displayText('Add 20022 - AP Clearing Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '20022'},{column: 'strDescription',data: 'AP Clearing'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Pending Payables','Account Group',1)
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','AP Clearing', 'Account Category',1)
//        .addResult('----Add 20022- AP Clearing Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 15012 - Inventories Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '15012'},{column: 'strDescription',data: 'Inventories'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Inventories','Account Group',1)
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Inventory', 'Account Category',3)
//        .addResult('----Add 15012 - Inventories Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 50012 - COGS Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '50012'},{column: 'strDescription',data: 'COGS'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Cost of Goods Sold','Account Group',1)
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Cost of Goods', 'Account Category',1)
//        .addResult('----Add 50012 - COGS Primary Account Done---')
//
//        .clickButton('AddSegment')
//        .displayText('Add 40012 - Sales Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '40012'},{column: 'strDescription',data: 'Sales'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Sales','Account Group',2)
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Sales Account', 'Account Category',1)
//        .addResult('----Add 40012 - Sales Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 16012 - Inventory in Transit Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '16012'},{column: 'strDescription',data: 'Inventory in Transit'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Inventories','Account Group',1)
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Inventory In-Transit', 'Account Category',1)
//        .addResult('----Add 16012 - Inventory in Transit Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 50022 - Inventory Adjustment')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '50022'},{column: 'strDescription',data: 'Inventory Adjustment'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Cost of Goods Sold','Account Group',1)
//        .waitUntilLoaded()
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Inventory Adjustment', 'Account Category',1)
//        .waitUntilLoaded()
//        .addResult('----Add 50022 - Inventory Adjustment Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 50032 - Inventory Variance')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '50032'},{column: 'strDescription',data: 'Inventory Variance'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Cost of Goods Sold','Account Group',1)
//        .waitUntilLoaded()
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Auto-Variance', 'Account Category',1)
//        .waitUntilLoaded()
//        .addResult('----Add 50032 - Inventory Variance Primary AccountDone----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 12012 - AR Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '12012'},{column: 'strDescription',data: 'AR Account'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Receivables','Account Group',1)
//        .waitUntilLoaded()
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','AR Account', 'Account Category',1)
//        .waitUntilLoaded()
//        .addResult('----Add 12012 - AR Account Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 20012 - AP Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '20012'},{column: 'strDescription',data: 'AP Account'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Payables','Account Group',1)
//        .waitUntilLoaded()
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','AP Account', 'Account Category',1)
//        .waitUntilLoaded()
//        .addResult('----Add 20012 - AP Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 49012 - Other Charge Income Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '49012'},{column: 'strDescription',data: 'Other Charge Income'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Income','Account Group',1)
//        .waitUntilLoaded()
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Other Charge Income', 'Account Category',1)
//        .waitUntilLoaded()
//        .addResult('----Add 49012 - Other Charge Income Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 59012 - Other Charge Expense Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '59012'},{column: 'strDescription',data: 'Other Charge Expense'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Expense','Account Group',1)
//        .waitUntilLoaded()
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Other Charge Expense', 'Account Category',1)
//        .waitUntilLoaded()
//        .addResult('----Add 59012 - Other Charge Expense Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 25012 - Sales Tax Liability Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '25012'},{column: 'strDescription',data: 'Sales Tax Liability'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Sales Tax Payables','Account Group',1)
//        .waitUntilLoaded()
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Sales Tax Account', 'Account Category',1)
//        .waitUntilLoaded()
//        .addResult('----Add 25012 - Sales Tax Liability Primary Account Done----')
//
//        .clickButton('AddSegment')
//        .displayText('Add 72512 - Tax Expense Primary Account')
//        .waitUntilLoaded()
//        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '72512'},{column: 'strDescription',data: 'Tax Expense'}])
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Expenses','Account Group',1)
//        .waitUntilLoaded()
//        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Purchase Tax Account', 'Account Category',1)
//        .waitUntilLoaded()
//        .addResult('----Add 72512 - Tax Expense Primary Account Done----')
//
//        .clickButton('Save')
//        .clickButton('Close')
//
//        .addFunction(function(next){commonGL.buildAccount(t, next, '20022', '0001', '001', 'AP Clearing', 'Pending Payables','AP Clearing', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '15012', '0001', '001', 'Inventory', 'Inventories','Inventory', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '50012', '0001', '001', 'COGS', 'Cost of Goods Sold','Cost of Goods', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '40012', '0001', '001', 'Sales', 'Sales','Sales Account', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '16012', '0001', '001', 'Inventory in Transit', 'Inventories','Inventory In-Transit', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '50022', '0001', '001', 'Inventory Adjustment', 'Cost of Goods Sold','Inventory Adjustment', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '50032', '0001', '001', 'Inventory Variance', 'Cost of Goods Sold','Auto-Variance', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '12012', '0001', '001', 'AR Account', 'Receivables','AR Account', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '20012', '0001', '001', 'AP Account', 'Payables','AP Account', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '49012', '0001', '001', 'Other Charge Income', 'Other Income','Other Charge Income', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '59012', '0001', '001', 'Other Charge Expense', 'Other Expense','Other Charge Expense', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '25012', '0001', '001', 'Sales Tax Liability', 'Sales Tax Payables','Sales Tax Account', 'Fort Wayne','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '72512', '0001', '001', 'Tax Expense', 'Other Expenses','Purchase Tax Account', 'Fort Wayne','Grains','USD',1,1)})
//
//        .addFunction(function(next){commonGL.buildAccount(t, next, '20022', '0002', '001', 'AP Clearing', 'Pending Payables','AP Clearing', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '15012', '0002', '001', 'Inventory', 'Inventories','Inventory', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '50012', '0002', '001', 'COGS', 'Cost of Goods Sold','Cost of Goods', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '40012', '0002', '001', 'Sales', 'Sales','Sales Account', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '16012', '0002', '001', 'Inventory in Transit', 'Inventories','Inventory In-Transit', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '50022', '0002', '001', 'Inventory Adjustment', 'Cost of Goods Sold','Inventory Adjustment', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '50032', '0002', '001', 'Inventory Variance', 'Cost of Goods Sold','Auto-Variance', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '12012', '0002', '001', 'AR Account', 'Receivables','AR Account', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '20012', '0002', '001', 'AP Account', 'Payables','AP Account', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '49012', '0002', '001', 'Other Charge Income', 'Other Income','Other Charge Income', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '59012', '0002', '001', 'Other Charge Expense', 'Other Expense','Other Charge Expense', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '25012', '0002', '001', 'Sales Tax Liability', 'Sales Tax Payables','Sales Tax Account', 'Indianapolis','Grains','USD',1,1)})
//        .addFunction(function(next){commonGL.buildAccount(t, next, '72512', '0002', '001', 'Tax Expense', 'Other Expenses','Purchase Tax Account', 'Indianapolis','Grains','USD',1,1)})
//
//        .clickMenuFolder('General Ledger')
//        .waitUntilLoaded()

//        .displayText('===== 3. Assign default AR account in the Company Configuration  =====')
//        .clickMenuFolder('System Manager','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Company Configuration','Screen')
//        .waitUntilLoaded('smcompanypreference',3000)
//        .waitUntilLoaded('smcompanypreference',3000)
//        .waitUntilLoaded('smcompanypreference',3000)
//        .waitUntilLoaded('smcompanypreference',3000)
//        .selectGridRowNumber('Settings',6)
//        .waitUntilLoaded('',3000)
//        .selectComboBoxRowValue('ARAccount', '12012-0001-001','ARAccount',1)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','ARAccount','12012-0001-001')
//        .clickButton('Ok')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Default AR Account setup done =====')
//        .clickMenuFolder('System Manager','Folder')
//        .waitUntilLoaded()

//
//        .displayText('======== 4. Setup account id for AP and AR in the Company Location ========')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Company Locations','Screen')
//        .doubleClickSearchRowValue('0001 - Fort Wayne', 1)
//        .waitUntilLoaded('smcompanylocation',3000)
//        .clickTab('GL Accounts')
//        .waitUntilLoaded('',3000)
//        .selectComboBoxRowValue('ARAccount', '12012-0001-001', 'ARAccount',0)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','ARAccount','12012-0001-001')
//        .selectComboBoxRowValue('APAccount', '20012-0001-001', 'APAccount',0)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','APAccount','20012-0001-001')
//        .clickButton('Save')
//        .clickButton('Close')
//
//        .doubleClickSearchRowValue('0002 - Indianapolis', 1)
//        .waitUntilLoaded('smcompanylocation',3000)
//        .clickTab('GL Accounts')
//        .waitUntilLoaded('',3000)
//        .selectComboBoxRowValue('ARAccount', '12012-0002-001', 'ARAccount',0)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','ARAccount','12012-0002-001')
//        .selectComboBoxRowValue('APAccount', '20012-0002-001', 'APAccount',0)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','APAccount','20012-0002-001')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup account id for AP and AR Done=====')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded()


        .displayText('===== 5: Add New Storage Location - Indy Storage =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Storage Locations','Screen')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('icstorageunit',3000)
        .waitUntilLoaded('',3000)
        .enterData('Text Field','Name','Indy Storage')
        .enterData('Text Field','Description','Indy Storage')
        .selectComboBoxRowNumber('UnitType',6,0)
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('ParentUnit', 'RM Storage', 'ParentUnit',0)
        .enterData('Text Field','Aisle','Test Aisle - 01')
        .clickCheckBox('AllowConsume', true)
        .clickCheckBox('AllowMultipleItems', true)
        .clickCheckBox('AllowMultipleLots', true)
        .clickCheckBox('CycleCounted', true)
        .verifyStatusMessage('Edited')
        .clickButton('Save')
        .verifyStatusMessage('Saved')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Indy Storage added =====')
        .clickMenuFolder('Inventory','Folder')
        .waitUntilLoaded()



//        //Add UOM
//        .displayText('======== Add UOM ========')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Inventory UOM','Screen')
//        .clickButton('New')
//        .waitUntilLoaded()
//        .waitUntilLoaded('icinventoryuom',3000)
//
//        //#1 Add LB UOM
//        .displayText('1. Add lb1 UOM.')
//        .enterData('Text Field','UnitMeasure','lb1')
//        .enterData('Text Field','Symbol','lb')
//        .selectComboBoxRowNumber('UnitType',6,0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//
//        //#2 Add 10-lb bag UOM
//        .displayText('2. Add 10-lb bag1 UOM.')
//        .clickButton('New')
//        .waitUntilLoaded('',3000)
//        .enterData('Text Field','UnitMeasure','10-lb bag1')
//        .enterData('Text Field','Symbol','10-lb bag')
//        .selectComboBoxRowNumber('UnitType',7,0)
//        .selectGridComboBoxRowValue('Conversion',1,'strUnitMeasure','lb1','strUnitMeasure')
//        .enterGridData('Conversion', 1, 'dblConversionToStock', '10')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .displayText('======== 10-lb bag1 UOM added ========')
//
//        //#3 Add kg UOM
//        .displayText('3. Add kg1 UOM.')
//        .clickButton('New')
//        .waitUntilLoaded('',3000)
//        .enterData('Text Field','UnitMeasure','kg1')
//        .enterData('Text Field','Symbol','kg')
//        .selectComboBoxRowNumber('UnitType',6,0)
//        .selectGridComboBoxRowValue('Conversion',1,'strUnitMeasure','lb1','strUnitMeasure')
//        .enterGridData('Conversion', 1, 'dblConversionToStock', '2.20462')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .displayText('======== kg1 UOM added ========"')
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//
//        //#3 Add LB UOM
//        .displayText('4. Add Other UOM to LB.')
//        .doubleClickSearchRowValue('lb1', 'strUnitMeasure', 1)
//        .waitUntilLoaded('icinventoryuom',3000)
//
//        .selectGridComboBoxRowValue('Conversion',1,'strUnitMeasure','10-lb bag1','strUnitMeasure')
//        .enterGridData('Conversion', 1, 'dblConversionToStock', '10.000000')
//
//        .selectGridComboBoxRowValue('Conversion',2,'strUnitMeasure','kg1','strUnitMeasure')
//        .enterGridData('Conversion', 2, 'dblConversionToStock', '0.453592')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('======== Add UOM Done ========')
//
//
//        //Add Category
//        .displayText('===== Add New Category - Inventory Type =====')
////        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Categories','Screen')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('iccategory',3000)
//        .enterData('Text Field','CategoryCode','Category1')
//        .enterData('Text Field','Description','Category1 desc')
//        .selectComboBoxRowNumber('InventoryType',2,0)
//        .selectComboBoxRowNumber('CostingMethod',2,0)
//        //.selectGridComboBoxRowValue('Tax',1,'strTaxClass','State Sales Tax (SST)','strTaxClass')
//
//        .displayText('===== Setup GL Accounts=====')
//        .clickTab('GL Accounts')
//        .waitUntilLoaded('',3000)
//        .clickButton('AddRequired')
//        .waitUntilLoaded('',3000)
//        .verifyGridData('GlAccounts', 1, 'colAccountCategory', 'AP Clearing')
//        .verifyGridData('GlAccounts', 2, 'colAccountCategory', 'Inventory')
//        .verifyGridData('GlAccounts', 3, 'colAccountCategory', 'Cost of Goods')
//        .verifyGridData('GlAccounts', 4, 'colAccountCategory', 'Sales Account')
//        .verifyGridData('GlAccounts', 5, 'colAccountCategory', 'Inventory In-Transit')
//        .verifyGridData('GlAccounts', 6, 'colAccountCategory', 'Inventory Adjustment')
//        .verifyGridData('GlAccounts', 7, 'colAccountCategory', 'Auto-Variance')
//        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '20006-0001-001', 'strAccountId')
//        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '15006-0001-001', 'strAccountId')
//        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50006-0001-001', 'strAccountId')
//        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40006-0001-001', 'strAccountId')
//        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16056-0001-001', 'strAccountId')
//        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '50007-0001-001', 'strAccountId')
//        .selectGridComboBoxRowValue('GlAccounts', 7, 'strAccountId', '50008-0001-001', 'strAccountId')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Add Category Done =====')
//
//        //Add Commodity
//        .displayText('===== Add Commodity =====')
//        .clickMenuScreen('Commodities','Screen')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('iccommodity',3000)
//        .enterData('Text Field','CommodityCode','Commodity1')
//        .enterData('Text Field','Description','Commodity1 desc')
//        //.clickCheckBox('ExchangeTraded',true)
//        //.enterData('Text Field','DecimalsOnDpr','6.00')
//        //.enterData('Text Field','ConsolidateFactor','6.00')
//
//        .selectGridComboBoxRowValue('Uom',1,'strUnitMeasure','lb1','strUnitMeasure')
//        .clickGridCheckBox('Uom', 0,'strUnitMeasure', 'lb1', 'ysnStockUnit', true)
//        .waitUntilLoaded('',3000)
//        .selectGridComboBoxRowValue('Uom',2,'strUnitMeasure','10-lb bag1','strUnitMeasure')
//        .waitUntilLoaded('',3000)
//        .selectGridComboBoxRowValue('Uom',3,'strUnitMeasure','kg1','strUnitMeasure')
//        .waitUntilLoaded('',3000)
//
//        .verifyGridData('Uom', 1, 'colUOMUnitQty', '1')
//        .verifyGridData('Uom', 2, 'colUOMUnitQty', '10')
//        .verifyGridData('Uom', 3, 'colUOMUnitQty', '2.20462')
//        .clickButton('Save')
//        .verifyStatusMessage('Saved')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Add Commodity Done =====')
//
//
//        //Add Lotted Item
//        .displayText('===== Add Lotted Item =====')
//        .clickMenuScreen('Items','Screen')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('icitem',3000)
//        .enterData('Text Field','ItemNo','Item1')
//        .enterData('Text Field','Description','Item1 desc')
//        .selectComboBoxRowValue('Category', 'Category1', 'Category',0)
//        .selectComboBoxRowValue('Commodity', 'Commodity1', 'Commodity',0)
//        .selectComboBoxRowNumber('LotTracking',1,0)
//        .verifyData('Combo Box','Tracking','Lot Level')
//
//        .displayText('===== Setup Item UOM =====')
////        .selectGridComboBoxRowValue('UnitOfMeasure',1,'strUnitMeasure','lb1','strUnitMeasure')
////        .clickGridCheckBox('UnitOfMeasure', 0,'strUnitMeasure', 'lb', 'ysnStockUnit', true)
////        .waitUntilLoaded('')
////        .selectGridComboBoxRowValue('UnitOfMeasure',2,'strUnitMeasure','10-lb bag1','strUnitMeasure')
////        .waitUntilLoaded('')
////        .selectGridComboBoxRowValue('UnitOfMeasure',3,'strUnitMeasure','kg1','strUnitMeasure')
////        .waitUntilLoaded('')
////        .displayText('===== Setup Item UOM Done =====')
//        .clickButton('LoadUOM')
//        .waitUntilLoaded('')
//
//        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '1.000000')
//        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '10.000000')
//        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '2.204620')
//
//
//        .displayText('===== Setup Item Location=====')
//        .clickTab('Setup')
//        .waitUntilLoaded('',3000)
//        .clickTab('Location')
//        .clickButton('AddLocation')
//        .waitUntilLoaded('icitemlocation',3000)
//        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
//        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
//        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
//        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Location - 0001 Done=====')
//
//        .clickButton('AddLocation')
//        .waitUntilLoaded('icitemlocation',3000)
//        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
//        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
//        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
//        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
//        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Location - 0002 Done=====')
//
//        .displayText('===== Setup Item Pricing=====')
//        .clickTab('Pricing')
//        .waitUntilLoaded('')
//
//        .verifyGridData('Pricing', 1, 'strLocationName', '0001 - Fort Wayne')
//        .enterGridData('Pricing', 1, 'dblLastCost', '10')
//        .enterGridData('Pricing', 1, 'dblStandardCost', '10')
//        .selectGridComboBoxRowNumber('Pricing', 1, 'strPricingMethod',3)
//        .enterGridData('Pricing', 1, 'dblAmountPercent', '40')
//        .verifyGridData('Pricing', 1, 'dblSalePrice', '14')
//
//        .verifyGridData('Pricing', 2, 'strLocationName', '0002 - Indianapolis')
//        .enterGridData('Pricing', 2, 'dblLastCost', '10')
//        .enterGridData('Pricing', 2, 'dblStandardCost', '10')
//        .selectGridComboBoxRowNumber('Pricing', 2, 'strPricingMethod',3)
//        .enterGridData('Pricing', 2, 'dblAmountPercent', '40')
//        .verifyGridData('Pricing', 2, 'dblSalePrice', '14')
//
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Pricing Done=====')
//        .displayText('=====Add Lotted Item Done=====')
//
//        //Configure Balance Sheet Detail report
//        .displayText('=====  Verify Balance Sheet Detail report  =====')
//        .clickMenuFolder('Financial Reports')
//        .clickMenuScreen ('Report Templates','Screen')
//        .waitUntilLoaded('')
//        .waitUntilLoaded('frdtemplates',3000)
//        .waitUntilLoaded('frdtemplates',3000)
//        .waitUntilLoaded('frdtemplates',3000)
//        .addResult('Opened Report Templates',3000)
//        .clickButton('BSDetail')
//        .waitUntilLoaded('')
//        .waitUntilLoaded('frdreportbuilder',3000)
//        .addResult('Opened Report Builder',3000)
//
//        .clickLabel('Column')
//        //Column Designer
//        .displayText('=====  Open Column Designer record  =====')
//        .waitUntilLoaded('')
//        .waitUntilLoaded('frdcolumndesigner',3000)
//        .addResult('Opened Column Designer',3000)
//
//        .selectGridComboBoxRowValue('ColumnDesigner',2,'strStartOffset','Custom','strStartOffset')
//        .displayText('Start Offset')
//        .selectGridComboBoxRowValue('ColumnDesigner',2,'strEndOffset','Custom','strEndOffset')
//        .displayText('End Offset')
//        .selectGridComboBoxRowValue('ColumnDesigner',2,'strFormatMask','#,##0.00;(#,##0.00)','strFormatMask',1)
//        .clickGridCheckBox('ColumnDesigner',3,'ysnHiddenColumn','','ysnHiddenColumn',true)
//        .clickGridCheckBox('ColumnDesigner',4,'ysnHiddenColumn','','ysnHiddenColumn',true)
//        .clickGridCheckBox('ColumnDesigner',5,'ysnHiddenColumn','','ysnHiddenColumn',true)
//        .clickButton('Save')
//        .clickButton('Close')
//
//        .enterData('Text Field','ReportName','BS Detail Test1')
//        .clickCheckBox('SZero',false)
//        .clickButton('Save')
//        .clickButton('Close')
//
//        //Configure Income Statement Detail report
//        .displayText('=====  Verify Income Statement Detail report  =====')
////        .clickMenuFolder('Financial Reports')
//        .clickMenuScreen ('Report Templates','Screen')
//        .waitUntilLoaded('')
//        .waitUntilLoaded('frdtemplates',3000)
//        .waitUntilLoaded('frdtemplates',3000)
//        .waitUntilLoaded('frdtemplates',3000)
//        .addResult('Opened Report Templates',3000)
//        .clickButton('ISDetail')
//        .waitUntilLoaded('')
//        .waitUntilLoaded('frdreportbuilder',3000)
//        .addResult('Opened Report Builder',3000)
//
//        .clickLabel('Column')
//        //Column Designer
//        .displayText('=====  Open Column Designer record  =====')
//        .waitUntilLoaded('')
//        .waitUntilLoaded('frdcolumndesigner',3000)
//        .addResult('Opened Column Designer',3000)
//
//        .selectGridComboBoxRowValue('ColumnDesigner',2,'strStartOffset','Custom','strStartOffset')
//        .displayText('Start Offset')
//        .selectGridComboBoxRowValue('ColumnDesigner',2,'strEndOffset','Custom','strEndOffset')
//        .displayText('End Offset')
//        .selectGridComboBoxRowValue('ColumnDesigner',2,'strFormatMask','#,##0.00;(#,##0.00)','strFormatMask',1)
//        .clickGridCheckBox('ColumnDesigner',3,'ysnHiddenColumn','','ysnHiddenColumn',true)
//        .clickGridCheckBox('ColumnDesigner',4,'ysnHiddenColumn','','ysnHiddenColumn',true)
//        .clickGridCheckBox('ColumnDesigner',5,'ysnHiddenColumn','','ysnHiddenColumn',true)
//
////        .addFunction (function (next){
////        var date = new Date().toLocaleDateString();
////        new iRely.FunctionalTest().start(t, next)
////            .enterData('Date Field','StartDate', date, 0, 10)
////            .done();
////    })//it changed the date correctly - to today's date but still it showed Control not found error log
////        .displayText('Start Date')
////
////        .addFunction (function (next){
////        var date = new Date().toLocaleDateString();
////        new iRely.FunctionalTest().start(t, next)
////            .enterData('Date Field','EndDate', date, 0, 10)
////            .done();
////    })//it changed the date correctly - to today's date but still it showed Control not found error log
////        .displayText('End Date')
//
//        .clickButton('Save')
//        .clickButton('Close')
//
//        .enterData('Text Field','ReportName','IS Detail Test1')
//        .clickCheckBox('SZero',false)
//        .clickButton('Save')
//        .waitUntilLoaded()
//        .clickButton('Close')

        .done()
});