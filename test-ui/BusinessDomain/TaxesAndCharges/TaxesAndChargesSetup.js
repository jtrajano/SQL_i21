StartTest (function (t) {
    var commonGL = Ext.create('GeneralLedger.commonGL');
    var commonIC = Ext.create('Inventory.CommonIC');

    new iRely.FunctionalTest().start(t)


        .displayText('===== 1. Add Another Company Location for irelyadmin User. Setup Time Zone and Number Format.  =====')
        .clickMenuFolder('System Manager','Folder')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Users','Screen')
        .waitUntilLoaded('',3000)
        .doubleClickSearchRowValue('irelyadmin', 1)
        .waitUntilLoaded('ementity',3000)
        .waitUntilLoaded('ementity',3000)
        .waitUntilLoaded('ementity',3000)
        .waitUntilLoaded('ementity',3000)
        .addResult('User record opened',3000)
        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
        .clickTab('User')
        .waitUntilLoaded('',3000)
        .selectComboBoxRowValue('UserNumberFormat', '1,234,567.89', 'UserNumberFormat',1)
        .clickTab('User Roles')
        .waitUntilLoaded('',3000)
        .selectGridComboBoxRowValue('UserRoleCompanyLocationRolePermission', 3, 'strLocationName', '0002 - Indianapolis', 'strLocationName')
        .selectGridComboBoxRowValue('UserRoleCompanyLocationRolePermission', 3, 'strUserRole', 'ADMIN', 'strUserRole')
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .waitUntilLoaded('',3000)
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .waitUntilLoaded('',3000)
        .displayText('===== Added 0002 - Indianapolis to irelyadmin =====')
        .displayText('===== Setup Time Zone and Number Format =====')
        .clickMenuFolder('System Manager','Folder')
        .waitUntilLoaded()

//        Manually setup GL Accounts for the time being until we have Add multiple GL accounts
//    Account ID, Account description, Account Group, Account Category
//    20022, 'AP Clearing', 'Pending Payables', 'AP Clearing'
//    15012, 'Inventories', 'Inventory', 'Inventory'
//    50012, 'COGS', 'Cost of Goods Sold', 'Cost of Goods'
//    40012, 'Sales', 'Sales', 'Sales Account'
//    16012, 'Inventory in Transit', 'Inventories', 'Inventory In-Transit'
//    50022, 'Inventory Adjustment', 'Cost of Goods Sold', 'Inventory Adjustment'
//    50032, 'Inventory Variance', 'Cost of Goods Sold', 'Auto-Variance'
//    12012, 'Accounts Receivable', 'Receivables', 'AR Account'
//    20012, 'Accounts Payable', 'Payables', 'AP Account'
//    49012, 'Other Charge Income', 'Other Income', 'Other Charge Income'
//    59012, 'Other Charge Expense', 'Other Expense', 'Other Charge Expense'
//    25012, 'Sales Tax Liability','Sales Tax Payables','Sales Tax Account'
//    72512, 'Tax Expense','Other Expenses','Purchase Tax Account'


        .displayText('===== 2. Add GL Accounts =====')
        .clickMenuFolder('General Ledger')
        .waitUntilLoaded()
        .clickMenuScreen('GL Account Detail')
        .waitUntilLoaded()
        .addResult('GL Account Detail opened')

        .clickButton('Segments')
        .waitUntilLoaded()
        .verifyScreenShown('glsegmentaccounts')
        .addResult('Segment Accounts screen opened')

        .clickButton('AddSegment')
        .displayText('Add 20022 - AP Clearing Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '20022'},{column: 'strDescription',data: 'AP Clearing'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Pending Payables','Account Group',1)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','AP Clearing', 'Account Category',1)
        .addResult('----Add 20022- AP Clearing Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 15012 - Inventories Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '15012'},{column: 'strDescription',data: 'Inventories'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Inventories','Account Group',1)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Inventory', 'Account Category',3)
        .addResult('----Add 15012 - Inventories Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 50012 - COGS Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '50012'},{column: 'strDescription',data: 'COGS'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Cost of Goods Sold','Account Group',1)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Cost of Goods', 'Account Category',1)
        .addResult('----Add 50012 - COGS Primary Account Done---')

        .clickButton('AddSegment')
        .displayText('Add 40012 - Sales Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '40012'},{column: 'strDescription',data: 'Sales'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Sales','Account Group',2)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Sales Account', 'Account Category',1)
        .addResult('----Add 40012 - Sales Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 16012 - Inventory in Transit Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '16012'},{column: 'strDescription',data: 'Inventory in Transit'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Inventories','Account Group',1)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Inventory In-Transit', 'Account Category',1)
        .addResult('----Add 16012 - Inventory in Transit Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 50022 - Inventory Adjustment')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '50022'},{column: 'strDescription',data: 'Inventory Adjustment'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Cost of Goods Sold','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Inventory Adjustment', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 50022 - Inventory Adjustment Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 50032 - Inventory Variance')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '50032'},{column: 'strDescription',data: 'Inventory Variance'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Cost of Goods Sold','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Auto-Variance', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 50032 - Inventory Variance Primary AccountDone----')

        .clickButton('AddSegment')
        .displayText('Add 12012 - AR Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '12012'},{column: 'strDescription',data: 'AR Account'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Receivables','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','AR Account', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 12012 - AR Account Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 20012 - AP Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '20012'},{column: 'strDescription',data: 'AP Account'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Payables','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','AP Account', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 20012 - AP Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 49012 - Other Charge Income Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '49012'},{column: 'strDescription',data: 'Other Charge Income'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Income','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Other Charge Income', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 49012 - Other Charge Income Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 59012 - Other Charge Expense Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '59012'},{column: 'strDescription',data: 'Other Charge Expense'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Expense','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Other Charge Expense', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 59012 - Other Charge Expense Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 25012 - Sales Tax Liability Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '25012'},{column: 'strDescription',data: 'Sales Tax Liability'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Sales Tax Payables','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Sales Tax Account', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 25012 - Sales Tax Liability Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 72512 - Tax Expense Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '72512'},{column: 'strDescription',data: 'Tax Expense'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Expenses','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Purchase Tax Account', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 72512 - Tax Expense Primary Account Done----')

        .clickButton('Save')
        .clickButton('Close')

        .addFunction(function(next){commonGL.buildAccount(t, next, '20022', '0001', '001', 'AP Clearing', 'Pending Payables','AP Clearing', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '15012', '0001', '001', 'Inventory', 'Inventories','Inventory', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '50012', '0001', '001', 'COGS', 'Cost of Goods Sold','Cost of Goods', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '40012', '0001', '001', 'Sales', 'Sales','Sales Account', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '16012', '0001', '001', 'Inventory in Transit', 'Inventories','Inventory In-Transit', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '50022', '0001', '001', 'Inventory Adjustment', 'Cost of Goods Sold','Inventory Adjustment', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '50032', '0001', '001', 'Inventory Variance', 'Cost of Goods Sold','Auto-Variance', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '12012', '0001', '001', 'AR Account', 'Receivables','AR Account', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '20012', '0001', '001', 'AP Account', 'Payables','AP Account', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '49012', '0001', '001', 'Other Charge Income', 'Other Income','Other Charge Income', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '59012', '0001', '001', 'Other Charge Expense', 'Other Expense','Other Charge Expense', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '25012', '0001', '001', 'Sales Tax Liability', 'Sales Tax Payables','Sales Tax Account', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '72512', '0001', '001', 'Tax Expense', 'Other Expenses','Purchase Tax Account', 'Fort Wayne','Grains','USD',1,1)})

        .addFunction(function(next){commonGL.buildAccount(t, next, '20022', '0002', '001', 'AP Clearing', 'Pending Payables','AP Clearing', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '15012', '0002', '001', 'Inventory', 'Inventories','Inventory', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '50012', '0002', '001', 'COGS', 'Cost of Goods Sold','Cost of Goods', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '40012', '0002', '001', 'Sales', 'Sales','Sales Account', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '16012', '0002', '001', 'Inventory in Transit', 'Inventories','Inventory In-Transit', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '50022', '0002', '001', 'Inventory Adjustment', 'Cost of Goods Sold','Inventory Adjustment', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '50032', '0002', '001', 'Inventory Variance', 'Cost of Goods Sold','Auto-Variance', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '12012', '0002', '001', 'AR Account', 'Receivables','AR Account', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '20012', '0002', '001', 'AP Account', 'Payables','AP Account', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '49012', '0002', '001', 'Other Charge Income', 'Other Income','Other Charge Income', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '59012', '0002', '001', 'Other Charge Expense', 'Other Expense','Other Charge Expense', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '25012', '0002', '001', 'Sales Tax Liability', 'Sales Tax Payables','Sales Tax Account', 'Indianapolis','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '72512', '0002', '001', 'Tax Expense', 'Other Expenses','Purchase Tax Account', 'Indianapolis','Grains','USD',1,1)})

        .displayText('===== 2. Add GL Accounts DONE =====')
        .clickMenuFolder('General Ledger')
        .waitUntilLoaded()

        .displayText('===== 3. Assign default AR account in the Company Configuration  =====')
        .clickMenuFolder('System Manager','Folder')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Company Configuration','Screen')
        .waitUntilLoaded('smcompanypreference',3000)
        .waitUntilLoaded('smcompanypreference',3000)
        .waitUntilLoaded('smcompanypreference',3000)
        .waitUntilLoaded('smcompanypreference',3000)
        .selectGridRowNumber('Settings',6)
        .waitUntilLoaded('',3000)
        .selectComboBoxRowValue('ARAccount', '12012-0001-001','ARAccount',1)
        .waitUntilLoaded('',3000)
        .verifyData('Combo Box','ARAccount','12012-0001-001')
        .clickButton('Ok')
        .waitUntilLoaded('',3000)
        .displayText('===== 3. Assign default AR account in the Company Configuration DONE  =====')
        .clickMenuFolder('System Manager','Folder')
        .waitUntilLoaded()


        .displayText('======== 4. Setup account id for AP and AR in the Company Location ========')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Company Locations','Screen')
        .doubleClickSearchRowValue('0001 - Fort Wayne', 1)
        .waitUntilLoaded('smcompanylocation',3000)
        .clickTab('GL Accounts')
        .waitUntilLoaded('',3000)
        .selectComboBoxRowValue('ARAccount', '12012-0001-001', 'ARAccount',0)
        .waitUntilLoaded('',3000)
        .verifyData('Combo Box','ARAccount','12012-0001-001')
        .selectComboBoxRowValue('APAccount', '20012-0001-001', 'APAccount',0)
        .waitUntilLoaded('',3000)
        .verifyData('Combo Box','APAccount','20012-0001-001')
        .clickButton('Save')
        .clickButton('Close')

        .doubleClickSearchRowValue('0002 - Indianapolis', 1)
        .waitUntilLoaded('smcompanylocation',3000)
        .clickTab('GL Accounts')
        .waitUntilLoaded('',3000)
        .selectComboBoxRowValue('ARAccount', '12012-0002-001', 'ARAccount',0)
        .waitUntilLoaded('',3000)
        .verifyData('Combo Box','ARAccount','12012-0002-001')
        .selectComboBoxRowValue('APAccount', '20012-0002-001', 'APAccount',0)
        .waitUntilLoaded('',3000)
        .verifyData('Combo Box','APAccount','20012-0002-001')
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('======== 4. Setup account id for AP and AR in the Company Location DONE ========')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded()


        .displayText('===== 5. Add Tax Class - Tax Class A =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Tax Class','Screen')
        .waitUntilLoaded('smtaxclass',1000)
        .clickButton('Insert')
        .enterGridData('GridTemplate', 1, 'colTaxClass', 'Tax Class A')
        .clickButton('Save')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()
        .displayText('===== 5. Add Tax Class DONE =====')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded()

       //6. Add Tax Codes
        .displayText('===== 6. Add Tax Codes  =====')
        .displayText('===== a. Add Tax Code - Tax 1 =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Tax Codes','Screen')
        .clickButton('New')
        .waitUntilLoaded('smtaxcode',1000)
        .enterData('Text Field','TaxCode','Tax 1')
        .selectComboBoxRowValue('TaxClass','Tax Class A', 'TaxClass', 1)
        .enterData('Text Field','Description','Tax 1 desc')
        .enterData('Text Field','Address','63 Overlook Drive')
        .enterData('Text Field','ZipCode','47374')
        .enterData('Text Field','City','Richmond')
        .enterData('Text Field','State','IN')
        .selectComboBoxRowValue('Country', 'Philippines', 'Country',1)
        .selectComboBoxRowValue('SalesTaxAccount', '25012-0001-001','SalesTaxAccount',1)
        .selectComboBoxRowValue('PurchaseTaxAccount', '72512-0001-001','PurchaseTaxAccount',1)
        .addFunction (function (next){
        var date = new Date().toLocaleDateString();
        new iRely.FunctionalTest().start(t, next)
            .selectGridComboBoxRowValue('TaxCodeRate',1,'colEffectiveDate',date,'dtmEffectiveDate', 0, 10)
            .done();
        })
        .selectGridComboBoxRowValue('TaxCodeRate',1,'colCalculationMethod','Percentage','strCalculationMethod',1)
        .enterGridData('TaxCodeRate', 1, 'colRate', '10.00')
        .clickButton('Save')
        .waitUntilLoaded()
        .displayText('===== Add Tax Code - Tax 1 Done =====')


        .displayText('===== b. Add Tax Code - Tax 2 =====')
        .clickButton('New')
        .waitUntilLoaded('smtaxcode',1000)
        .enterData('Text Field','TaxCode','Tax 2')
        .selectComboBoxRowValue('TaxClass','Tax Class A', 'TaxClass', 1)
        .enterData('Text Field','Description','Tax 2 desc')
        .enterData('Text Field','Address','63 Overlook Drive')
        .enterData('Text Field','ZipCode','47374')
        .enterData('Text Field','City','Richmond')
        .enterData('Text Field','State','IN')
        .selectComboBoxRowValue('Country', 'Philippines', 'Country',1)
        .selectComboBoxRowValue('SalesTaxAccount', '25012-0001-001','SalesTaxAccount',1)
        .selectComboBoxRowValue('PurchaseTaxAccount', '72512-0001-001','PurchaseTaxAccount',1)
        .addFunction (function (next){
        var date = new Date().toLocaleDateString();
        new iRely.FunctionalTest().start(t, next)
            .selectGridComboBoxRowValue('TaxCodeRate',1,'colEffectiveDate',date,'dtmEffectiveDate', 0, 10)
            .done();
    })
        .selectGridComboBoxRowValue('TaxCodeRate',1,'colCalculationMethod','Unit','strCalculationMethod',1)
        .enterGridData('TaxCodeRate', 1, 'colRate', '0.40')
        .clickButton('Save')
        .waitUntilLoaded()
        .displayText('===== Add Tax Code - Tax 2 Done =====')


        .displayText('===== c. Add Tax Code - Tax on Tax =====')
        .clickButton('New')
        .waitUntilLoaded('smtaxcode',1000)
        .enterData('Text Field','TaxCode','Tax on Tax')
        .selectComboBoxRowValue('TaxClass','Tax Class A', 'TaxClass', 1)
        .enterData('Text Field','Description','Tax on Tax desc')
        .enterData('Text Field','Address','63 Overlook Drive')
        .enterData('Text Field','ZipCode','47374')
        .enterData('Text Field','City','Richmond')
        .enterData('Text Field','State','IN')
        .selectComboBoxRowValue('Country', 'Philippines', 'Country',1)
        .selectComboBoxRowValue('SalesTaxAccount', '25012-0001-001','SalesTaxAccount',1)
        .selectComboBoxRowValue('PurchaseTaxAccount', '72512-0001-001','PurchaseTaxAccount',1)
        .addFunction (function (next){
        var date = new Date().toLocaleDateString();
        new iRely.FunctionalTest().start(t, next)
            .selectGridComboBoxRowValue('TaxCodeRate',1,'colEffectiveDate',date,'dtmEffectiveDate', 0, 10)
            .done();
    })
        .selectGridComboBoxRowValue('TaxCodeRate',1,'colCalculationMethod','Percentage','strCalculationMethod',1)
        .enterGridData('TaxCodeRate', 1, 'colRate', '2.5')
        .clickButton('Save')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()
        .displayText('===== Add Tax Code - Tax on Tax Done =====')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded()
        .displayText('===== 6. Add Tax Codes DONE =====')

        .displayText('===== 7. Add Tax Group - Test Group 1 =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Tax Groups','Screen')
        .waitUntilLoaded('smtaxgroup',1000)
        .clickButton('New')
        .enterData('Text Field','TaxGroup','Test Group 1')
        .enterData('Text Field','Description','Test Group 1')
        .selectGridComboBoxRowValue('TaxGroup',1,'colTaxCode','Tax 2','strTaxCode',1)
        .clickButton('Save')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()
        .displayText('===== 7. Add Tax Group - Test Group 1 Done =====')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded()


        .displayText('===== 8. Assign Tax to Company Location - 0001 - Fort Wayne   =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Company Locations','Screen')
        .doubleClickSearchRowValue('0001 - Fort Wayne', 1)
        .waitUntilLoaded('smcompanylocation',3000)
        .clickTab('Setup')
        .selectComboBoxRowValue('TaxGroup', 'Test Group 1', 'TaxGroup',1)
        .clickButton('Save')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()
        .displayText('===== 8. Assign Tax to Company Location - 0001 - Fort Wayne DONE   =====')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded()


        .displayText('===== 9: Add New Storage Location - Indy Storage =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Storage Locations','Screen')
        .clickButton('New')
        .waitUntilLoaded('icstorageunit')
        .enterData('Text Field','Name','Indy Storage')
        .enterData('Text Field','Description','Indy Storage')
        .selectComboBoxRowNumber('UnitType',6,0)
        .selectComboBoxRowNumber('Location',2,0)
        .selectComboBoxRowNumber('SubLocation',1,0)
        .selectComboBoxRowNumber('ParentUnit',1,0)
        .enterData('Text Field','Aisle','Test Aisle - 01')
        .clickCheckBox('AllowConsume', true)
        .clickCheckBox('AllowMultipleItems', true)
        .clickCheckBox('AllowMultipleLots', true)
        .clickCheckBox('CycleCounted', true)
        .verifyStatusMessage('Edited')
        .clickButton('Save')
        .waitUntilLoaded()
        .verifyStatusMessage('Saved')
        .clickButton('Close')
        .displayText('===== 9: Add New Storage Location - Indy Storage DONE =====')
        .clickMenuFolder('Inventory','Folder')
        .waitUntilLoaded()

        //Add UOM
        .displayText('===== 10. Add Inventory UOM =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Inventory UOM','Screen')
        .clickButton('New')
        .waitUntilLoaded()
        .waitUntilLoaded('icinventoryuom',3000)

        //a. Add LB UOM
        .displayText('a. Add lb1 UOM.')
        .enterData('Text Field','UnitMeasure','lb1')
        .enterData('Text Field','Symbol','lb')
        .selectComboBoxRowNumber('UnitType',6,0)
        .selectComboBoxRowNumber('Decimals',3,0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)

        //b. Add 10-lb bag UOM
        .displayText('b. Add 10-lb bag1 UOM.')
        .clickButton('New')
        .waitUntilLoaded('',3000)
        .enterData('Text Field','UnitMeasure','10-lb bag1')
        .enterData('Text Field','Symbol','10-lb bag')
        .selectComboBoxRowNumber('UnitType',7,0)
        .selectComboBoxRowNumber('Decimals',3,0)
        .selectGridComboBoxRowValue('Conversion',1,'colOtherUOM','lb1','strUnitMeasure',1)
        .enterGridData('Conversion', 1, 'dblConversionToStock', '10')
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .displayText('======== 10-lb bag1 UOM added ========')

        //c. Add kg UOM
        .displayText('c. Add kg1 UOM.')
        .clickButton('New')
        .waitUntilLoaded('',3000)
        .enterData('Text Field','UnitMeasure','kg1')
        .enterData('Text Field','Symbol','kg')
        .selectComboBoxRowNumber('UnitType',6,0)
        .selectComboBoxRowNumber('Decimals',3,0)
        .selectGridComboBoxRowValue('Conversion',1,'colOtherUOM','lb1','strUnitMeasure',1)
        .enterGridData('Conversion', 1, 'dblConversionToStock', '2.20462')
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .displayText('======== kg1 UOM added ========"')
        .clickButton('Close')
        .waitUntilLoaded('',3000)

        //d. Add LB UOM
        .displayText('d. Add Other UOM to LB.')
        .doubleClickSearchRowValue('lb1', 'strUnitMeasure', 1)
        .waitUntilLoaded('icinventoryuom',3000)

        .selectGridComboBoxRowValue('Conversion',1,'colOtherUOM','10-lb bag1','strUnitMeasure',1)
        .enterGridData('Conversion', 1, 'dblConversionToStock', '10.000000')

        .selectGridComboBoxRowValue('Conversion',2,'colOtherUOM','kg1','strUnitMeasure',1)
        .enterGridData('Conversion', 2, 'dblConversionToStock', '0.453592')
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('======== Add UOM Done ========')
        .clickMenuFolder('Inventory','Folder')
        .waitUntilLoaded()
        .displayText('===== 10. Add Inventory UOM DONE =====')

        //Add Category - Inventory Type
        .displayText('===== 11. Add New Category - Inventory Type =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Categories','Screen')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('iccategory',3000)
        .enterData('Text Field','CategoryCode','Item Category1')
        .enterData('Text Field','Description','Item Category1 desc')
        .selectComboBoxRowNumber('InventoryType',2,0)
        .selectComboBoxRowNumber('CostingMethod',2,0)
        .selectGridComboBoxRowValue('Tax',1,'colTaxClass','Tax Class A','strTaxClass',1)

        .displayText('===== Setup GL Accounts=====')
        .clickTab('GL Accounts')
        .waitUntilLoaded('',3000)
        .clickButton('AddRequired')
        .waitUntilLoaded('',3000)
        .verifyGridData('GlAccounts', 1, 'colAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 2, 'colAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 3, 'colAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 4, 'colAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 5, 'colAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 6, 'colAccountCategory', 'Inventory Adjustment')
//        .verifyGridData('GlAccounts', 7, 'colAccountCategory', 'Auto-Variance')
        .selectGridComboBoxRowValue('GlAccounts', 1, 'colAccountId', '20022-0001-001', 'strAccountId',1)
        .selectGridComboBoxRowValue('GlAccounts', 2, 'colAccountId', '15012-0001-001', 'strAccountId',1)
        .selectGridComboBoxRowValue('GlAccounts', 3, 'colAccountId', '50012-0001-001', 'strAccountId',1)
        .selectGridComboBoxRowValue('GlAccounts', 4, 'colAccountId', '40012-0001-001', 'strAccountId',1)
        .selectGridComboBoxRowValue('GlAccounts', 5, 'colAccountId', '16012-0001-001', 'strAccountId',1)
        .selectGridComboBoxRowValue('GlAccounts', 6, 'colAccountId', '50022-0001-001', 'strAccountId',1)
//        .selectGridComboBoxRowValue('GlAccounts', 7, 'colAccountId', '50032-0001-001', 'strAccountId',1)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .displayText('===== 11. Add New Category - Inventory Type DONE =====')


        //Add Category - Inventory Type
        .displayText('===== 12. Add New Category - Other Charge Type =====')
        .clickButton('New')
        .waitUntilLoaded('iccategory',3000)
        .clickTab('Detail')
        .enterData('Text Field','CategoryCode','OC Category1')
        .enterData('Text Field','Description','OC Category1 desc')
        .selectComboBoxRowNumber('InventoryType',6,0)
        .selectComboBoxRowNumber('CostingMethod',2,0)
        .selectGridComboBoxRowValue('Tax',1,'colTaxClass','Tax Class A','strTaxClass',1)

        .displayText('===== Setup GL Accounts=====')
        .clickTab('GL Accounts')
        .waitUntilLoaded('',3000)
        .clickButton('AddRequired')
        .waitUntilLoaded('',3000)
        .verifyGridData('GlAccounts', 1, 'colAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 2, 'colAccountCategory', 'Other Charge Income')
        .verifyGridData('GlAccounts', 3, 'colAccountCategory', 'Other Charge Expense')
        .selectGridComboBoxRowValue('GlAccounts', 1, 'colAccountId', '20022-0001-001', 'strAccountId',1)
        .selectGridComboBoxRowValue('GlAccounts', 2, 'colAccountId', '49012-0001-001', 'strAccountId',1)
        .selectGridComboBoxRowValue('GlAccounts', 3, 'colAccountId', '59012-0001-001', 'strAccountId',1)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Add Category - Other Charge Type Done =====')
        .displayText('===== 12. Add New Category - Other Charge Type DONE =====')
        .clickMenuFolder('Inventory','Folder')



        //Add Commodity
        .displayText('===== 13. Add Commodity - Item =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Commodities','Screen')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('iccommodity',3000)
        .enterData('Text Field','CommodityCode','Commodity1')
        .enterData('Text Field','Description','Commodity1 desc')
        //.clickCheckBox('ExchangeTraded',true)
        //.enterData('Text Field','DecimalsOnDpr','6.00')
        //.enterData('Text Field','ConsolidateFactor','6.00')

        .selectGridComboBoxRowValue('Uom',1,'colUOMCode','lb1','strUnitMeasure')
        .clickGridCheckBox('Uom', 1,'colUOMStockUnit', 'lb1', 'ysnStockUnit', true)
        .waitUntilLoaded('',3000)
        .selectGridComboBoxRowValue('Uom',2,'colUOMCode','10-lb bag1','strUnitMeasure')
        .waitUntilLoaded('',3000)
        .selectGridComboBoxRowValue('Uom',3,'colUOMCode','kg1','strUnitMeasure')
        .waitUntilLoaded('',3000)

        .verifyGridData('Uom', 1, 'colUOMUnitQty', '1')
        .verifyGridData('Uom', 2, 'colUOMUnitQty', '10')
        .verifyGridData('Uom', 3, 'colUOMUnitQty', '2.20462')
        .clickButton('Save')
        .verifyStatusMessage('Saved')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== 13. Add Commodity - Item DONE =====')
        .clickMenuFolder('Inventory','Folder')


        //Add Item
        .displayText('===== 14. Add Item =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Items','Screen')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('icitem',3000)
        .enterData('Text Field','ItemNo','Item A1')
        .enterData('Text Field','Description','Item A1 desc')
        .selectComboBoxRowValue('Type', 'Inventory', 'Type',1)
        .selectComboBoxRowValue('Category', 'Item Category1', 'Category',1)
        .selectComboBoxRowValue('Commodity', 'Commodity1', 'Commodity',1)
        .selectComboBoxRowNumber('LotTracking',4,0)
        .verifyData('Combo Box','Tracking','Item Level')

        .displayText('===== Setup Item UOM =====')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '1.000000')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '10.000000')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '2.204620')


        .displayText('===== Setup Item Location=====')
        .clickTab('Setup')
        .waitUntilLoaded('',3000)
        .clickTab('Location')
        .clickButton('AddLocation')
        .waitUntilLoaded('icitemlocation',3000)
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Item Location - 0001 Done=====')

        .clickButton('AddLocation')
        .waitUntilLoaded('icitemlocation',3000)
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Item Location - 0002 Done=====')

        .displayText('===== Setup Item Pricing=====')
        .clickTab('Pricing')
        .waitUntilLoaded('')

        .verifyGridData('Pricing', 1, 'strLocationName', '0001 - Fort Wayne')
        .enterGridData('Pricing', 1, 'dblLastCost', '10')
        .enterGridData('Pricing', 1, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 1, 'strPricingMethod',3)
        .enterGridData('Pricing', 1, 'dblAmountPercent', '40')
        .verifyGridData('Pricing', 1, 'dblSalePrice', '14')

        .verifyGridData('Pricing', 2, 'strLocationName', '0002 - Indianapolis')
        .enterGridData('Pricing', 2, 'dblLastCost', '10')
        .enterGridData('Pricing', 2, 'dblStandardCost', '10')
        .selectGridComboBoxRowNumber('Pricing', 2, 'strPricingMethod',3)
        .enterGridData('Pricing', 2, 'dblAmountPercent', '40')
        .verifyGridData('Pricing', 2, 'dblSalePrice', '14')

        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Item Pricing Done=====')
        .displayText('===== 14. Add Item =====')

        //Add Other Charge Item - Freight1
        .displayText('===== 15. Add Other Charge Item - Freight1 =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Items','Screen')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('icitem',3000)
        .enterData('Text Field','ItemNo','Freight1')
        .enterData('Text Field','Description','Freight1 desc')
        .selectComboBoxRowValue('Type', 'Other Charge', 'Type',1)
        .selectComboBoxRowValue('Category', 'OC Category1', 'Category',1)
        .selectComboBoxRowValue('Commodity', 'Commodity1', 'Commodity',1)
        .verifyData('Combo Box','LotTracking','No',0)
        .verifyData('Combo Box','Tracking','Item Level',0)

        .displayText('===== Setup Item UOM =====')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '1.000000')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '10.000000')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '2.204620')


        .displayText('===== Setup Item Location=====')
        .clickTab('Setup')
        .waitUntilLoaded('',3000)
        .clickTab('Location')
        .clickButton('AddLocation')
        .waitUntilLoaded('icitemlocation',3000)
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Item Location - 0001 Done=====')

        .clickButton('AddLocation')
        .waitUntilLoaded('icitemlocation',3000)
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Item Location - 0002 Done=====')

        .displayText('===== Setup Item Pricing=====')
        .clickTab('Setup')
        .waitUntilLoaded('')
        .clickTab('Cost')
        .waitUntilLoaded('')
        .clickCheckBox('InventoryCost',false)
        .clickCheckBox('Accrue',true)
        .selectComboBoxRowValue('M2M', 'No', 'M2M',0)
        .clickCheckBox('Price',false)
        .selectComboBoxRowNumber('CostType',1,0)
        //.selectComboBoxRowValue('CostType', 'Discount', 'CostType',3,1)
        .selectComboBoxRowNumber('CostMethod',1,0)
        //.selectComboBoxRowValue('CostMethod', 'Per Unit', 'CostMethod',1,1)
        .enterData('Text Field','Amount','1.50')
        .selectComboBoxRowValue('CostUOM', 'lb1', 'CostUOM',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Item Pricing Done=====')
        .displayText('===== 15. Add Other Charge Item - Freight1 DONE =====')
        .clickMenuFolder('Inventory','Folder')
        .waitUntilLoaded('')

        //Add Other Charge Item - Discount1
        .displayText('===== 16. Add Other Charge Item - Discount1 =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Items','Screen')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('icitem',3000)
        .enterData('Text Field','ItemNo','Discount1')
        .enterData('Text Field','Description','Discount1 desc')
        .selectComboBoxRowValue('Type', 'Other Charge', 'Type',1)
        .selectComboBoxRowValue('Category', 'OC Category1', 'Category',1)
        .selectComboBoxRowValue('Commodity', 'Commodity1', 'Commodity',1)
        .verifyData('Combo Box','LotTracking','No',0)
        .verifyData('Combo Box','Tracking','Item Level',0)

        .displayText('===== Setup Item UOM =====')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '1.000000')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '10.000000')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '2.204620')


        .displayText('===== Setup Item Location=====')
        .clickTab('Setup')
        .waitUntilLoaded('',3000)
        .clickTab('Location')
        .clickButton('AddLocation')
        .waitUntilLoaded('icitemlocation',3000)
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Item Location - 0001 Done=====')

        .clickButton('AddLocation')
        .waitUntilLoaded('icitemlocation',3000)
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Item Location - 0002 Done=====')

        .displayText('===== Setup Other Charge Cost =====')
        .clickTab('Setup')
        .waitUntilLoaded('')
        .clickTab('Cost')
        .waitUntilLoaded('')
        .clickCheckBox('InventoryCost',false)
        .clickCheckBox('Accrue',false)
        .selectComboBoxRowValue('M2M', 'No', 'M2M',0)
        .clickCheckBox('Price',true)
        .selectComboBoxRowNumber('CostType',3,0)
        //.selectComboBoxRowValue('CostType', 'Discount', 'CostType',3,1)
        .selectComboBoxRowNumber('CostMethod',1,0)
        //.selectComboBoxRowValue('CostMethod', 'Per Unit', 'CostMethod',1,1)
        .enterData('Text Field','Amount','1.20')
        .selectComboBoxRowValue('CostUOM', 'lb1', 'CostUOM',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== Setup Other Charge Cost Done =====')
        .displayText('===== 16. Add Other Charge Item - Discount1 DONE =====')
        .clickMenuFolder('Inventory','Folder')
        .waitUntilLoaded('')

        //Add Vendors
        .displayText('===== 17. Create Item Vendor =====')
        .clickMenuFolder('Purchasing (Accounts Payable)')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Vendors')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('emcreatenewentity',3000)
        .enterData('Text Field','Name','Item Vendor1')
        .enterData('Text Field','Contact','Item Vendor1-C1')
        .enterData('Text Field','Phone','1234567890')
        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
        .enterData('Text Field','Address','123 Wide Street')
        .enterData('Text Field','City','Richmond')
        .enterData('Text Field','State','IN')
        .enterData('Text Field','ZipCode','47374')
        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
        .clickButton('Match')
        .waitUntilLoaded('emduplicateentities',3000)
        .clickButton('Add')
        .enterData('Text Field','Location','Item Vendor1-Loc1')
        .clickTab('Vendor')
        .waitUntilLoaded('')
        .selectGridComboBoxRowValue('VendorTerm',1,'colVendorTerms','Net 30','strTerm')
        .selectComboBoxRowValue('VendorTerms', 'Net 30', 'VendorTerms',5)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== 17. Create Item Vendor DONE =====')
        .clickMenuFolder('Purchasing (Accounts Payable)')

        .displayText('===== 18. Create 3rd Party Vendor =====')
        .clickMenuFolder('Purchasing (Accounts Payable)')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Vendors')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('emcreatenewentity',3000)
        .enterData('Text Field','Name','3rd Party Vendor1')
        .enterData('Text Field','Contact','3rd Party Vendor1-C1')
        .enterData('Text Field','Phone','1234567890')
        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
        .enterData('Text Field','Address','789 Narrow Drive')
        .enterData('Text Field','City','Richmond')
        .enterData('Text Field','State','IN')
        .enterData('Text Field','ZipCode','47374')
        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
        .clickButton('Match')
        .waitUntilLoaded('emduplicateentities',3000)
        .clickButton('Add')
        .enterData('Text Field','Location','3rd Party Vendor1-Loc1')
        .clickTab('Vendor')
        .waitUntilLoaded('')
        .selectGridComboBoxRowValue('VendorTerm',1,'colVendorTerms','Net 30','strTerm')
        .selectComboBoxRowValue('VendorTerms', 'Net 30', 'VendorTerms',5)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== 18. Create 3rd Party Vendor DONE =====')
        .clickMenuFolder('Purchasing (Accounts Payable)')


        .displayText('===== 19. Create Customer =====')
        .clickMenuFolder('Sales (Accounts Receivable)')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Customers')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('emcreatenewentity',3000)
        .enterData('Text Field','Name','Customer1')
        .enterData('Text Field','Contact','Customer1-C1')
        .enterData('Text Field','Phone','0123456789')
        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
        .enterData('Text Field','Address','456 Flower Drive')
        .enterData('Text Field','City','Richmond')
        .enterData('Text Field','State','IN')
        .enterData('Text Field','ZipCode','47374')
        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
        .clickButton('Match')
        .waitUntilLoaded('emduplicateentities',3000)
        .clickButton('Add')
        .enterData('Text Field','Location','Customer1-Loc1')
        .clickTab('Customer')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('CustomerTerms', 'Net 30', 'CustomerTerms',5)
        .selectComboBoxRowNumber('CustomerSalesperson',1,0)
        .clickTab('Locations')
        .selectGridRowNumber('Location',1)
        .clickButton('EditLoc')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('Country', 'United States', 'Country',0)
        .selectComboBoxRowValue('ShipVia', 'UPS', 'ShipVia',0)
        .selectComboBoxRowValue('TaxGroup', 'Test Group 1', 'TaxGroup',0)
        .selectComboBoxRowValue('Terms', 'Net 30', 'Terms',5)
        .selectComboBoxRowValue('Warehouse', '0001 - Fort Wayne', 'Warehouse',0)
        .selectComboBoxRowValue('FreightTerm', 'Deliver', 'FreightTerm',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== 19. Create Customer DONE =====')
        .clickMenuFolder('Sales (Accounts Receivable)')

        .done()
});