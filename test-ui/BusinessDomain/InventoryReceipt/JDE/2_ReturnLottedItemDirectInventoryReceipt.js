StartTest (function (t) {
    //var commonIC = Ext.create('Inventory.CommonIC');
    var randomNo=Math.floor((Math.random() * 1000000) + 1);
    var myDate = new Date();
    var productID = 'ITEM-'  + randomNo + ' ' + myDate.toLocaleDateString('en-US') ;
    
    randomNo=Math.floor((Math.random() * 1000000) + 1);
    var producID2 = 'ITEM-'  + randomNo + ' ' + myDate.toLocaleDateString('en-US') ;

    randomNo=Math.floor((Math.random() * 1000000) + 1);
    var invoiceNo = 'INV-'  + randomNo + ' ' + myDate.toLocaleDateString('en-US') ;    

    randomNo=Math.floor((Math.random() * 1000000) + 1);
    var invoiceNo2 = 'INV-'  + randomNo + ' ' + myDate.toLocaleDateString('en-US') ; 

    new iRely.FunctionalTest().start(t)
    .addScenario('Scenario 1','',1000)
    //Add JDE Inventory Item
     .addFunction(function(next){
         new iRely.FunctionalTest().start(t, next)    
        .clickMenuFolder('Inventory')
        .clickMenuScreen('Items')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .enterData('Text Field','FilterGrid',productID )
        .enterData('Text Field','FilterGrid','[ENTER]' )
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .continueIf({
                expected: true,
                actual: function (win) {
                    return win.down('#grdSearch').getStore().getCount() !== 0;
                },
                success: function (next) {
                    new iRely.FunctionalTest().start(t, next)
                    .addResult('Inventory Item 1 exists.')
                    .clearTextFilter('FilterGrid')
                    .done();
                },
                failure: function(next){
                    new iRely.FunctionalTest().start(t, next)
                    .addResult('Inventory ' + productID +' does not exists.')
                    .addStep('Add Inventory Item 1 ')
                    .clickButton('New')
                    .waitUntilLoaded()
                    .enterData('Text Field','ItemNo',productID )
                    .selectComboBoxRowNumber('Type',2)
                    .selectComboBoxRowValue('Category', 'Inventory Category1', 'CategoryId',1)
                    .enterData('Text Field','Description','Inventory Category1 Desc' )
                    .selectComboBoxRowNumber('LotTracking',1) 
                    .enterGridNewRow('UnitOfMeasure', [{column: 'strUnitMeasure', data: 'LB1'}])
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .selectGridRowNumber('UnitOfMeasure', 1)
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .selectGridComboBoxRowValue('UnitOfMeasure',1,'colDetailUnitMeasure', 'LB1' ,'strUnitMeasure',1)
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickGridCheckBox('UnitOfMeasure',1 , 'colStockUnit', 'LB1', 'ysnStockUnit', true)
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .selectGridComboBoxRowValue('UnitOfMeasure',2,'colDetailUnitMeasure', 'KG1' ,'strUnitMeasure',1)
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .selectGridComboBoxRowValue('UnitOfMeasure',3,'colDetailUnitMeasure', '10-lb bag1' ,'strUnitMeasure',1)
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .selectGridComboBoxRowValue('UnitOfMeasure',4,'colDetailUnitMeasure', '20-lb bag1' ,'strUnitMeasure',1)
                    .waitUntilLoaded()
                    .clickTab('Setup')
                    .clickButton('AddRequiredAccounts')
                    .waitUntilLoaded()
                    .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'AP Clearing')
                    .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Inventory')
                    .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Cost of Goods')
                    .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Sales Account')
                    .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory In-Transit')
                    .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Inventory Adjustment')
                    .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '20011-0001-001', 'strAccountId')
                    .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '15011-0001-001', 'strAccountId')
                    .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50011-0001-001', 'strAccountId')
                    .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40011-0001-001', 'strAccountId')
                    .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16011-0001-001', 'strAccountId')
                    .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '50021-0001-001', 'strAccountId')
                    .waitUntilLoaded()
                    .clickTab('Location')
                    .waitUntilLoaded()
                    .clickButton('AddLocation')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .selectComboBoxRowValue('Location', '0001 - Fort Wayne', 'LocationId',1)
                    .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocationId',1)
                    .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocationId',1)
                    .selectComboBoxRowNumber('NegativeInventory',0) 
                    .clickButton('Save')
                    .waitUntilLoaded()
                    .clickButton('Close')
                    .waitUntilLoaded()    
                    
                    .clickTab('Contract Item')    
                    .addFunction(function (next) {
                        t.chain(
                            { click : "#frmItem #tabItem #pgeSetup #tabSetup #pgeContract #grdCertification #colCertification => .x-column-header-text" }
                        )
                        next();
                    })
                    .waitUntilLoaded()
                    .addFunction(function (next) {
                        t.chain(
                            { click : "menu{isVisible()} #mnuHeaderDrillDown => .x-menu-item-text"}
                        )
                        next();
                    })
                    .waitUntilLoaded()
                    .waitUntilLoaded('iccertificationprogram')
                    .isControlVisible('textfield',['Certification Code','txtCertificationCode'],'true')
                    .addFunction(function(next){
                        var record=Math.floor((Math.random() * 1000000) + 1);
                        var d = new Date();
                        var certCode = 'CODE-' + ' ' + record + ' ' + d.toLocaleDateString('en-US') ;
                        new iRely.FunctionalTest().start(t, next)
                        .enterData('Text Field','CertificationProgram','CertProg'+ record + ' ' + d.toLocaleDateString('en-US'))
                        .enterData('Text Field','IssuingOrganization','IssueOrg1'+ record + ' ' + d.toLocaleDateString('en-US'))
                        .enterData('Text Field','CertificationCode',certCode)
                        .done()
                    })
                    .waitUntilLoaded()
                    .clickButton('Save')
                     .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickButton('Close')
                    
                    .clickTab('Pricing')
                    .enterGridData('Pricing',1,'colPricingLastCost',10) 
                    .enterGridData('Pricing',1,'colPricingStandardCost',10)
                    .selectGridComboBoxRowNumber('Pricing',1,'strPricingMethod',3)
                    .enterGridData('Pricing',1,'colPricingAmount',40) 
                    .enterGridData('Pricing',1,'colPricingRetailPrice',14) 
                    .waitUntilLoaded()
                    .clickButton('Save')
                    .waitUntilLoaded()
                    .clickButton('Close')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .done()    
                },
                continueOnFail: true   
        })
        .done()
    })
    
    //Create Inventory Receipts (Direct)
    .addFunction(function(next){
        new iRely.FunctionalTest().start(t, next)    
        .waitUntilLoaded()
        .clickMenuScreen('Inventory Receipts')
        .waitUntilLoaded().waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded().waitUntilLoaded()
        .selectComboBoxRowNumber('ReceiptType',4)
        .selectComboBoxRowValue('Vendor', 'Sherland Farms', 'EntityVendorId',1)
        .selectGridRowNumber('InventoryReceipt', 1)
        .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colItemNo', productID, 'strItemNo')
        .enterUOMGridData('InventoryReceipt', 1, 'colUOMQtyToReceive', 'strUnitMeasure',100, 'LB1')
        .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colSubLocation', 'Raw Station', 'strSubLocationName')
        .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colStorageLocation', 'RM Storage', 'strStorageLocationName')
        .enterGridData('LotTracking',1,'colLotId','LOT-01' + '[TAB]') 
        .enterGridData('LotTracking',1,'colLotQuantity',100 +'[ENTER]') 
        .isControlVisible('Button',['Return'],false)
        .clickButton('Save')
        .waitUntilLoaded()
         .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .clickTab('Post Preview')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
         .waitUntilLoaded()
        .waitUntilLoaded()
        .verifyGridData ('RecapTransaction', 1 ,'dblDebit' , 1000)
        .verifyGridData ('RecapTransaction', 2 ,'dblCredit' , 1000)
        .waitUntilLoaded()
        .clickButton('Post')
        .waitUntilLoaded()
         .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .isControlVisible('Button',['Return'],true)
         .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
         //.verifyFieldLabel(Button,[{itemId:'Return',label:'Return'}])
        .clickButton('Unpost')
         .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .isControlVisible('Button',['Return'],false)
         .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .clickButton('Post')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .clickButton('Close')
        .done() 
    })
    //Verify Valuation Entries
    .addFunction(function(next){
        new iRely.FunctionalTest().start(t, next)
        .clickMenuScreen('Inventory Valuation')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .enterData('Text Field','FilterGrid',productID )
        .enterData('Text Field','FilterGrid','[ENTER]' )
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .verifyGridData ('Search', 3 ,'dblQuantityInStockUOM' , 100)
        .verifyGridData ('Search', 3 ,'dblValue' , 1000)
        .clickMenuScreen('Stock Details')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .enterData('Text Field','FilterGrid',productID )
        .enterData('Text Field','FilterGrid','[ENTER]' )
        .waitUntilLoaded()
        .waitUntilLoaded()
        .verifyGridData ('Search', 1 ,'dblUnitOnHand' , 100)
        .verifyGridData ('Search', 1 ,'dblInTransitOutbound' , 0)
        .verifyGridData ('Search', 1 ,'dblUnitReserved' , 0)
        .verifyGridData ('Search', 1 ,'dblAvailable' , 100)
        .verifyGridData ('Search', 1 ,'dblLastCost' , 10)
        .verifyGridData ('Search', 1 ,'dblAverageCost' , 10)
        .verifyGridData ('Search', 1 ,'dblSalePrice' , 14)
        .clickMenuScreen('Items')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .doubleClickSearchRowValue (productID,'strItemNo',1)
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .clickTab('Stock')
        .verifyGridData ('Stock', 1 ,'dblUnitOnHand' , 100)
        .verifyGridData ('Stock', 1 ,'dblInTransitOutbound' , 0)
        .verifyGridData ('Stock', 1 ,'dblUnitReserved' , 0)
        .verifyGridData ('Stock', 1 ,'dblAvailable' , 100)
        .clickButton('Close')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .clickMenuScreen('Lot Details')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .enterData('Text Field','FilterGrid',productID )
        .enterData('Text Field','FilterGrid','[ENTER]' )
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .verifyGridData ('Search', 1 ,'strItemNo' , productID)
        .verifyGridData ('Search', 1 ,'strItemDescription' , 'Inventory Category1 Desc')
        .verifyGridData ('Search', 1 ,'strLocationName' , '0001 - Fort Wayne')
        .verifyGridData ('Search', 1 ,'strSubLocationName' , 'Raw Station')
        .verifyGridData ('Search', 1 ,'strStorageLocation' , 'RM Storage')
        .verifyGridData ('Search', 1 ,'strLotNumber' , 'LOT-01[TAB]')
        .verifyGridData ('Search', 1 ,'dblQty' , 100)
        .verifyGridData ('Search', 1 ,'dblWeight' , 100)
        .verifyGridData ('Search', 1 ,'strItemUOM' , 'LB1')
        .verifyGridData ('Search', 1 ,'dblWeightPerQty' , 1)
        .verifyGridData ('Search', 1 ,'dblLastCost' , 10)
         .done()    
     })
    .addScenario('Scenario 3','',1000)
    //Duplicate JDE productID
    .addFunction(function(next){
        new iRely.FunctionalTest().start(t, next)
        //.clickMenuFolder('Inventory')
        .clickMenuScreen('Items')
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        
        //.doubleClickSearchRowValue ('ITEM-187847 7/14/2017','strItemNo',1)
       .doubleClickSearchRowValue (productID,'strItemNo',1)
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .clickButton('Duplicate')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .addFunction(function(next){
            
            new iRely.FunctionalTest().start(t, next)
            .enterData('Text Field','ItemNo',producID2)
            .enterData('Text Field','Description','Inventory ' + producID2 +' Desc' )
            .clickTab('Pricing')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .selectGridRowNumber('Pricing', 1)
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .enterGridData('Pricing',1,'colPricingLastCost',10)
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded() 
            .enterGridData('Pricing',1,'colPricingStandardCost',10)
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .selectGridComboBoxRowNumber('Pricing',1,'strPricingMethod',3)
            .waitUntilLoaded()
            .clickButton('Save')
            .waitUntilLoaded()
            .clickButton('Close')
            .waitUntilLoaded()
            .clickMenuScreen('Inventory Receipts')
            .clickButton('New')
            .waitUntilLoaded('icinventoryreceipt')
            .selectComboBoxRowNumber('ReceiptType',4)
            .selectComboBoxRowValue('Vendor', 'Sherland Farms', 'EntityVendorId',1)
            .selectGridRowNumber('InventoryReceipt', 1)
            .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colItemNo', producID2, 'strItemNo')
            .enterUOMGridData('InventoryReceipt', 1, 'colUOMQtyToReceive', 'strUnitMeasure',100, 'LB1')
            .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colSubLocation', 'Raw Station', 'strSubLocationName')
            .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colStorageLocation', 'RM Storage', 'strStorageLocationName')
            .enterGridData('LotTracking',1,'colLotId','LOT-01' + '[TAB]') 
            .enterGridData('LotTracking',1,'colLotQuantity',100 +'[ENTER]') 
            .isControlVisible('Button',['Return'],false)
            .clickButton('Save')
            .waitUntilLoaded()
            .waitUntilLoaded()
        .waitUntilLoaded()
            .clickTab('Post Preview')
            .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
            .done()
        })
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .verifyGridData ('RecapTransaction', 1 ,'dblDebit' , 1000)
        .verifyGridData ('RecapTransaction', 2 ,'dblCredit' , 1000)
        .waitUntilLoaded()
        .clickButton('Post')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .isControlVisible('Button',['Return'],true)
        //.verifyFieldLabel(Button,[{itemId:'Return',label:'Return'}])
        .clickButton('Return')    
        .waitUntilLoaded()
        .clickMessageBoxButton('no')
        .waitUntilLoaded()
        .clickButton('Return')   
        .waitUntilLoaded()
        .clickMessageBoxButton('yes')
        .waitUntilLoaded()
        .clickMessageBoxButton('yes')

        // // .displayText('SourceType')
        .waitUntilLoaded('icinventoryreceipt')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .clickButton('Save')
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        .verifyData('Combo Box', 'ReceiptType', 'Inventory Return', 'equal')
        .waitUntilLoaded()
        .verifyData('Combo Box', 'SourceType', 'None', 'equal')
        .waitUntilLoaded()
        //.verifyData('Text Field', 'ReceiptNumber', '%RTN', 'like')
        .waitUntilLoaded()
        // .verifyGridData('LotTracking', 1, 'colLotQuantity', 100)
        .waitUntilLoaded()
        .waitUntilLoaded()
        .waitUntilLoaded()
        // .verifyData('Combo Box', 'SourceType', 'None', 'equal')
        // // // .displayText('Vendor')        
        // .verifyData('Combo Box', 'Vendor', 'Sherland Farms', 'equal')
        // // // .displayText('Location')        
        // .verifyData('Combo Box', 'cboLocation', '0001 - Fort Wayne', 'equal')
        // .addFunction(function (next){
        //     var today =  new Date().toLocaleDateString();
        //     if (today){
        //         var engine = new iRely.FunctionalTest();
        //         engine.start(t,next)
        //             .displayText('Check if Receipt Date is set to current system date.')
        //             .verifyData('Date Field', 'ReceiptDate', today, 'equal')
        //             .done()
        //     }
        //     next();
        // })

        // // .verifyData('Text Field', 'cboCurrency', 'None', 'equal')
        // // .verifyData('Text Field', 'txtReceiptNumber', 'None', 'equal')
        // // .selectGridRowNumber('InventoryReceipt',1)
        // // //.verifyGridData('InventoryReceipt', 1, 'colOrderNumber', producID)
        // // .verifyGridData('InventoryReceipt', 1, 'colItemNo', productID)
        // // .verifyUOMGridData('InventoryReceipt', 1, 'colUOMQtyToReceive', 100, 'LB1')
        // // .verifyGridData('LotTracking', 1, 'colLotQuantity', 100)
        // // .verifyGridData('LotTracking', 1, 'colLotGrossWeight', 100)
        // // .verifyGridData('LotTracking', 1, 'colLotTareWeight', 0)
        // // .verifyGridData('LotTracking', 1, 'colLotNetWeight', 100)
        .addFunction(function(next){
             var rtnNumber = Ext.WindowManager.getActive().down('#txtReceiptNumber').rawValue;
             new iRely.FunctionalTest().start(t, next)
             .displayText(rtnNumber)
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .clickTab('Post Preview')
        
              

            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .verifyGridData ('RecapTransaction', 2 ,'dblDebit' , 1000)
            .verifyGridData ('RecapTransaction', 1 ,'dblCredit' , 1000)
            .clickButton('Post')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .verifyGridData ('RecapTransaction', 1 ,'dblDebit' , 1000)
            .verifyGridData ('RecapTransaction', 2 ,'dblCredit' , 1000)
            .clickButton('Unpost')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .verifyGridData ('RecapTransaction', 2 ,'dblDebit' , 1000)
            .verifyGridData ('RecapTransaction', 1 ,'dblCredit' , 1000)
            .clickButton('Post')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .clickButton('Close')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .clickMenuScreen('Inventory Receipts')
            .clickButton('New')
            .waitUntilLoaded()
            .selectComboBoxRowNumber('ReceiptType',4)
            .selectComboBoxRowValue('Vendor', 'Sherland Farms', 'EntityVendorId',1)
            .selectGridRowNumber('InventoryReceipt', 1)
            .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colItemNo', producID2, 'strItemNo')
            .enterUOMGridData('InventoryReceipt', 1, 'colUOMQtyToReceive', 'strUnitMeasure',50, 'LB1')
            .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colSubLocation', 'Raw Station', 'strSubLocationName')
            .selectGridComboBoxRowValue('InventoryReceipt', 1, 'colStorageLocation', 'RM Storage', 'strStorageLocationName')
            .enterGridData('LotTracking',1,'colLotId','LOT-02' + '[TAB]') 
            .enterGridData('LotTracking',1,'colLotQuantity',50 +'[ENTER]') 
            .isControlVisible('Button',['Return'],false)
            .clickButton('Save')
            .waitUntilLoaded()
            .clickTab('Post Preview')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .verifyGridData ('RecapTransaction', 1 ,'dblDebit' , 500)
            .verifyGridData ('RecapTransaction', 2 ,'dblCredit' , 500)
            .clickButton('Post')
            .waitUntilLoaded()
            .clickButton('Close')
            //Create Voucher
            .clickMenuFolder('Purchasing (Accounts Payable)')
            .clickMenuScreen('Vouchers')
            .waitUntilLoaded()
            .clickButton('New')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .verifyData('Combo Box', 'TransactionType', 'Voucher', 'equal')
            .isControlVisible('Button',['AddReceipt'],true)
            .selectComboBoxRowValue('Vendor', 'Sherland Farms', 'EntityVendorId',1)
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .verifyScreenWindow({
                alias: 'apreceiveditems',
                title: 'Add Payables',
                minimize: false,
                maximize: false,
                restore: false  })
            
            .clickButton('Close')
            .waitUntilLoaded()
            .clickButton('Close')
            .clickMessageBoxButton('no')
            //Create Debit Memo
            .clickMenuScreen('Vouchers')
            .waitUntilLoaded()
            .clickButton('New')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .isControlVisible('Button',['AddReceipt'],true)
            .selectComboBoxRowValue('TransactionType', 'Debit Memo', 'TransactionType',1)
            .selectComboBoxRowValue('Vendor', 'Sherland Farms', 'EntityVendorId',1)
           .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .verifyScreenWindow({
                alias: 'apreceiveditems',
                title: 'Add Returns',
                minimize: false,
                maximize: false,
                restore: false  })
            .clickButton('Close') 
            .waitUntilLoaded()
            .clickButton('AddReceipt')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .verifyScreenWindow({
                alias: 'apreceiveditems',
                title: 'Add Returns',
                minimize: false,
                maximize: false,
                restore: false  })
            .selectGridRowNumber('ReceivedItems', 1)
            .clickButton('Add')

    // //For testing Code
    //  .clickMenuFolder('Purchasing (Accounts Payable)')
    // .clickMenuScreen('Vouchers')
    //  .doubleClickSearchRowValue ('DM-11','strBillId',1)

    // //

            .waitUntilLoaded()
            .verifyData('Combo Box', 'TransactionType', 'Debit Memo', 'equal')
            .displayText('colQtyOrdered')       
            .verifyGridData('VoucherDetails', 1, 'colQtyOrdered', 100)
            .displayText('colQtyReceived')       
            .verifyGridData('VoucherDetails', 1, 'colQtyReceived', 100)
            .displayText('colCost')       
            .verifyGridData('VoucherDetails', 1, 'colCost', 10)
            .displayText('colNetWeight')       
            .verifyGridData('VoucherDetails', 1, 'colNetWeight', 100)
            .displayText('colNetShippedWt')       
            .verifyGridData('VoucherDetails', 1, 'colNetShippedWt', 0)
            .displayText('colWtLoss')
            .verifyGridData('VoucherDetails', 1, 'colWtLoss',0)
            .displayText('colTotal')
            .verifyGridData('VoucherDetails', 1, 'colTotal', 1000)
            .enterGridData('VoucherDetails',1,'colQtyReceived',60) 
            .displayText('colNetWeight')
            .verifyGridData('VoucherDetails', 1, 'colNetWeight', 60)
            .displayText('colWtLoss')
            .verifyGridData('VoucherDetails', 1, 'colWtLoss',0)
            .clickButton('Save')
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .waitUntilLoaded()
            .addFunction(function(next){
                var DMNumber = Ext.WindowManager.getActive().down('#txtVoucherId').rawValue;
                new iRely.FunctionalTest().start(t, next)
                .displayText(DMNumber)
                .waitUntilLoaded()
                .clickButton('PostPreview')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .verifyGridData ('RecapTransaction', 2 ,'dblDebit' , 600)
                .verifyGridData ('RecapTransaction', 1 ,'dblCredit' , 600)
                .clickButton('Post')
                .waitUntilLoaded()
                .clickButton('Close')
                .clickMenuScreen('Vouchers')
                .waitUntilLoaded()
                .clickButton('New')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .isControlVisible('Button',['AddReceipt'],true)
                .selectComboBoxRowValue('TransactionType', 'Debit Memo', 'TransactionType',1)
                .selectComboBoxRowValue('Vendor', 'Sherland Farms', 'EntityVendorId',1)
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .verifyScreenWindow({
                    alias: 'apreceiveditems',
                    title: 'Add Returns',
                    minimize: false,
                    maximize: false,
                    restore: false  })
                .selectGridRowNumber('ReceivedItems', 1)
                .waitUntilLoaded()
                .clickButton('Add')
                .waitUntilLoaded()
                .verifyData('Combo Box', 'TransactionType', 'Debit Memo', 'equal')       
                .displayText('colQtyOrdered')
                .verifyGridData('VoucherDetails', 1, 'colQtyOrdered', 40)
                .displayText('colQtyReceived')
                .verifyGridData('VoucherDetails', 1, 'colQtyReceived', 40)
                .displayText('colCost')
                .verifyGridData('VoucherDetails', 1, 'colCost', 10)
                .displayText('colNetWeight')
                .verifyGridData('VoucherDetails', 1, 'colNetWeight', 40)
                .displayText('colNetShippedWt')
                .verifyGridData('VoucherDetails', 1, 'colNetShippedWt', 0)
                .displayText('colWtLoss')
                .verifyGridData('VoucherDetails', 1, 'colWtLoss',0)
                .clickButton('Save')
                .waitUntilLoaded()
                .clickButton('PostPreview')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .verifyGridData ('RecapTransaction', 2 ,'dblDebit' , 400)
                .verifyGridData ('RecapTransaction', 1 ,'dblCredit' , 400)
                .clickButton('Post')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .displayText('Close button issue here')
                .clickButton('Close')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                //InventoryReceipt
                .waitUntilLoaded()
                .clickMenuScreen('Inventory Receipts')
                .selectSearchRowNumber(3)
                .clickButton('OpenSelected')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('Return')
                .waitUntilLoaded()
                .verifyMessageBox('iRely i21', 'Return no longer allowed. All of the stocks are returned.', 'ok', 'error')
                .waitUntilLoaded()
                .clickMessageBoxButton('ok')
                .clickButton('Close')
                .clickMenuScreen('Inventory Receipts')
                .selectSearchRowNumber(2)
                .clickButton('OpenSelected')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('DebitMemo')
                .waitUntilLoaded()
                .displayText('Check Message')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .verifyMessageBox('iRely i21', 'Debit Memo is no longer needed. All items have Debit Memo.', 'ok', 'error')
                                                
                .waitUntilLoaded()

                .clickMessageBoxButton('ok')
                .waitUntilLoaded()
                .clickButton('Close')
                .clickMenuScreen('Inventory Receipts')
                .selectSearchRowNumber(3)
                .clickButton('OpenSelected')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('Unpost')
                .waitUntilLoaded()
                .displayText(rtnNumber)
                .verifyMessageBox('iRely i21', 'Unable to unpost the Inventory Receipt because it was returned. Please check '+ rtnNumber + '.', 'ok', 'error')
                .waitUntilLoaded()
                .clickMessageBoxButton('ok')
                .clickButton('Close')
                .clickMenuScreen('Items')
                .waitUntilLoaded()
                .clearTextFilter('FilterGrid')
                .doubleClickSearchRowValue (producID2,'strItemNo',1)
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickTab('Setup')
                .waitUntilLoaded()
                .clickTab('Location')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .selectGridRowNumber('LocationStore', 1)
                .waitUntilLoaded().waitUntilLoaded()
                .waitUntilLoaded().waitUntilLoaded()
                .addFunction(function(next){
                            t.chain(
                            {dblclick :"#frmItem #tabItem #pgeSetup #tabSetup #pgeLocation #grdLocationStore #grvLocationStore => .x-grid-cell-colLocationPOSDescription .x-grid-cell-inner"}
                            )
                            next();
                })
                 .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .selectComboBoxRowNumber('NegativeInventory',2)
                .clickButton('Save') 
                .waitUntilLoaded()
                .clickButton('Close')
                .waitUntilLoaded()
                .clickButton('Save')
                .waitUntilLoaded()
                .clickButton('Close')
                .clickMenuScreen('Inventory Receipts')
                .selectSearchRowNumber(3)
                .clickButton('OpenSelected')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('Unpost')
                .waitUntilLoaded()
                .verifyMessageBox('iRely i21', 'Unable to unpost the Inventory Receipt because it was returned. Please check '+ rtnNumber + '.', 'ok', 'error')
                .waitUntilLoaded()
                .clickMessageBoxButton('ok')
                .waitUntilLoaded()
                .clickTab('Unpost Preview')    
                .waitUntilLoaded()
                .clickButton('Unpost')
                .waitUntilLoaded()
                .verifyMessageBox('iRely i21', 'Unable to unpost the Inventory Receipt because it was returned. Please check '+ rtnNumber + '.', 'ok', 'error')
                .waitUntilLoaded()
                .clickMessageBoxButton('ok')
                .waitUntilLoaded()
                .clickButton('Close')
                .clickMenuScreen('Inventory Receipts')
                .selectSearchRowNumber(2)
                .clickButton('OpenSelected')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('Unpost')
                .waitUntilLoaded()
                .displayText(DMNumber)
                .verifyMessageBox('iRely i21', 'Unable to unpost because it has a debit memo. Unpost and delete '+ DMNumber + ' first before you can unpost the Inventory Return.', 'ok', 'error')
                .waitUntilLoaded()
                .clickMessageBoxButton('ok')
                .waitUntilLoaded()
                .clickTab('Unpost Preview')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('Unpost')
                .waitUntilLoaded()
                .verifyMessageBox('iRely i21', 'Unable to unpost because it has a debit memo. Unpost and delete '+ DMNumber + ' first before you can unpost the Inventory Return.', 'ok', 'error')
                .waitUntilLoaded()
                .clickMessageBoxButton('ok')
                .waitUntilLoaded()
                .clickButton('Close')
                .clickMenuScreen('Items')
                .waitUntilLoaded()
                .clearTextFilter('FilterGrid')
                .doubleClickSearchRowValue (producID2,'strItemNo',1)
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickTab('Setup')
                .waitUntilLoaded()
                .clickTab('Location')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .selectGridRowNumber('LocationStore', 1)
                .waitUntilLoaded().waitUntilLoaded()
                .waitUntilLoaded().waitUntilLoaded()
                .addFunction(function(next){
                            t.chain(
                            {dblclick :"#frmItem #tabItem #pgeSetup #tabSetup #pgeLocation #grdLocationStore #grvLocationStore => .x-grid-cell-colLocationPOSDescription .x-grid-cell-inner"}
                            )
                            next();
                })
                 .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .selectComboBoxRowNumber('NegativeInventory',1)
                .clickButton('Save') 
                .waitUntilLoaded()
                .clickButton('Close')
                .waitUntilLoaded()
                .clickButton('Save')
                .waitUntilLoaded()
                .clickButton('Close')
                .clickMenuScreen('Inventory Receipts')
                .selectSearchRowNumber(2)
                .clickButton('OpenSelected')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('Unpost')
                .waitUntilLoaded()
                .displayText(DMNumber)
                .verifyMessageBox('iRely i21', 'Unable to unpost because it has a debit memo. Unpost and delete '+ DMNumber + ' first before you can unpost the Inventory Return.', 'ok', 'error')
                .waitUntilLoaded()
                .clickMessageBoxButton('ok')
                .waitUntilLoaded()
                .clickTab('Unpost Preview')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('Unpost')
                .waitUntilLoaded()
                .verifyMessageBox('iRely i21', 'Unable to unpost because it has a debit memo. Unpost and delete '+ DMNumber + ' first before you can unpost the Inventory Return.', 'ok', 'error')
                .waitUntilLoaded()
                .clickMessageBoxButton('ok')
                .waitUntilLoaded()
                .clickButton('Close')
                .addScenario('Scenario 4','',1000)
                .clickMenuScreen('Inventory Receipts')
                .selectSearchRowNumber(3)
                .clickButton('OpenSelected')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickButton('Voucher')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .verifyMessageBox('iRely i21', 'Voucher successfully processed. Do you want to view it?', 'yesno', 'warning')
                //.verifyMessageBox('iRely i21', 'Voucher is no longer needed. All items have Voucher.', 'ok', 'error')
                //done()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .clickMessageBoxButton('yes')
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .waitUntilLoaded()
                .displayText('Ordered')
                .verifyGridData('VoucherDetails', 1, 'colQtyOrdered', 100)
                .displayText('Billed')
                .verifyGridData('VoucherDetails', 1, 'colQtyReceived', 100)
                .displayText('Cost')
                .verifyGridData('VoucherDetails', 1, 'colCost', 10)
                .displayText('Cost Uom')
                .verifyGridData('VoucherDetails', 1, 'colCostUOM', 'LB1')
                 .displayText('Gross/Net Uom')
                .verifyGridData('VoucherDetails', 1, 'colGrossUOM', 'LB1')
                .displayText('Net Weight')
                .verifyGridData('VoucherDetails', 1, 'colNetWeight', 100)
                .displayText('Net Shipped Wt')
                .verifyGridData('VoucherDetails', 1, 'colNetShippedWt', 0)
                .displayText('Wt Loss')
                .verifyGridData('VoucherDetails', 1, 'colWtLoss',0)
                .displayText('Total')
                .verifyGridData('VoucherDetails', 1, 'colTotal',1000)
                .enterGridData('VoucherDetails',1,'colQtyReceived',60)
                .displayText('Cost Uom')
                .verifyGridData('VoucherDetails', 1, 'colCostUOM', 'LB1')
                .displayText('Gross/Net Uom')
                .verifyGridData('VoucherDetails', 1, 'colGrossUOM', 'LB1')
                .displayText('Net Weight')
                .verifyGridData('VoucherDetails', 1, 'colNetWeight', 60)
                .displayText('Net Shipped Wt')
                .verifyGridData('VoucherDetails', 1, 'colNetShippedWt', 0)
                .displayText('Wt Loss')
                .verifyGridData('VoucherDetails', 1, 'colWtLoss',0)
                .displayText('Total')
                .verifyGridData('VoucherDetails', 1, 'colTotal',600)
                .displayText(invoiceNo)
                .enterData('Text Field','InvoiceNo',invoiceNo)
                .clickButton('Save')
                .waitUntilLoaded()

                .addFunction(function(next){
                    var BillNumber = Ext.WindowManager.getActive().down('#txtVoucherId').rawValue;
                    new iRely.FunctionalTest().start(t, next)
                    .displayText(BillNumber)
                    .clickMessageBoxButton('no')
                    .clickButton('PostPreview')
                    
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                   
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .displayText('AP Clearing - Debit Side')
                    .verifyGridData ('RecapTransaction', 1 ,'dblDebit' , 600)
                    .displayText('AP - Credit Side')
                    .verifyGridData ('RecapTransaction', 2 ,'dblCredit' , 600)
                    .clickButton('Post')
                    .waitUntilLoaded()
                    .clickButton('Close')
//  .clickMessageBoxButton('no')
                    .clickMenuScreen('Inventory Receipts')
                    .selectSearchRowNumber(3)
                    .clickButton('OpenSelected')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickButton('Voucher')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .verifyMessageBox('iRely i21', 'Voucher successfully processed. Do you want to view it?', 'yesno', 'warning')
                    .waitUntilLoaded()
                    .clickMessageBoxButton('yes')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .displayText('Ordered')
                    .verifyGridData('VoucherDetails', 1, 'colQtyOrdered', 40)
                    .displayText('Billed')
                    .verifyGridData('VoucherDetails', 1, 'colQtyReceived', 40)
                    .displayText('Cost')
                    .verifyGridData('VoucherDetails', 1, 'colCost', 10)
                    .displayText('Cost Uom')
                    .verifyGridData('VoucherDetails', 1, 'colCostUOM', 'LB1')
                    .displayText('Gross/Net Uom')
                    .verifyGridData('VoucherDetails', 1, 'colGrossUOM', 'LB1')
                    .displayText('Net Weight')
                    .verifyGridData('VoucherDetails', 1, 'colNetWeight', 40)
                    .displayText('Net Shipped Wt')
                    .verifyGridData('VoucherDetails', 1, 'colNetShippedWt', 0)
                    .displayText('Wt Loss')
                    .verifyGridData('VoucherDetails', 1, 'colWtLoss',0)
                    .displayText('Total')
                    .verifyGridData('VoucherDetails', 1, 'colTotal',400)
                    .displayText(invoiceNo2)
                    .enterData('Text Field','InvoiceNo',invoiceNo2)
                    .clickButton('Save')
                    .clickMessageBoxButton('no')
                    .waitUntilLoaded()
                    .clickButton('PostPreview')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .displayText('AP Clearing - Debit Side')
                    .verifyGridData ('RecapTransaction', 1 ,'dblDebit' , 400)
                    .displayText('AP - Credit Side')
                    .verifyGridData ('RecapTransaction', 2 ,'dblCredit' , 400)
                    .clickButton('Post')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickButton('Close')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickMenuScreen('Inventory Receipts')
                    .selectSearchRowNumber(3)
                    .clickButton('OpenSelected')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickButton('Unpost')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .verifyMessageBox('iRely i21', 'Unable to Unreceive. The inventory receipt has a voucher in '+ BillNumber +'.', 'ok', 'error')
                    .waitUntilLoaded()
                    .clickMessageBoxButton('ok')
                    .waitUntilLoaded()
                    .clickTab('Unpost Preview')
                    .waitUntilLoaded()
                    .clickButton('Unpost')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .verifyMessageBox('iRely i21', 'Unable to Unreceive. The inventory receipt has a voucher in '+ BillNumber +'.', 'ok', 'error')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickMessageBoxButton('ok')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickButton('Close')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickMenuScreen('Inventory Receipts')
                    .waitUntilLoaded().waitUntilLoaded()
                    .waitUntilLoaded()
                    .selectSearchRowNumber(3)
                    .waitUntilLoaded().waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickButton('OpenSelected')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickButton('Voucher')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .verifyMessageBox('iRely i21', 'Voucher is no longer needed. All items have Voucher.', 'ok', 'error')
                    .waitUntilLoaded().waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickMessageBoxButton('ok')
                    .waitUntilLoaded().waitUntilLoaded()
                    .waitUntilLoaded().clickButton('Close').waitUntilLoaded()
                    .clickMenuScreen('Inventory Valuation')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .enterData('Text Field','FilterGrid',producID2 )
                    .enterData('Text Field','FilterGrid','[ENTER]' )
                    .waitUntilLoaded().waitUntilLoaded()
                    .waitUntilLoaded()
                    .selectSearchRowNumber(3)
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .verifyGridData ('Search', 3 ,'dblQuantityInStockUOM' , 50)
                    .verifyGridData ('Search', 3 ,'dblValue' , 500)
                    .clickMenuScreen('Stock Details')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .enterData('Text Field','FilterGrid',producID2 )
                    .enterData('Text Field','FilterGrid','[ENTER]' )
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .verifyGridData ('Search', 1 ,'dblUnitOnHand' , 50)
                    .verifyGridData ('Search', 1 ,'dblInTransitOutbound' , 0)
                    .verifyGridData ('Search', 1 ,'dblUnitReserved' , 0)
                    .verifyGridData ('Search', 1 ,'dblAvailable' , 50)
                    // .verifyGridData ('Search', 1 ,'dblLastCost' , 10)
                    // .verifyGridData ('Search', 1 ,'dblAverageCost' , 10)
                    // .verifyGridData ('Search', 1 ,'dblSalePrice' , 14)
                    .clickMenuScreen('Items')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clearTextFilter('FilterGrid')
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .doubleClickSearchRowValue (producID2,'strItemNo',1)
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .waitUntilLoaded()
                    .clickTab('Stock')
                    .verifyGridData ('Stock', 1 ,'dblUnitOnHand' , 50)
                    .verifyGridData ('Stock', 1 ,'dblInTransitOutbound' , 0)
                    .verifyGridData ('Stock', 1 ,'dblUnitReserved' , 0)
                    .verifyGridData ('Stock', 1 ,'dblAvailable' , 50)
                    .clickButton('Close')
                    .clickMenuFolder('Purchasing (Accounts Payable)')
                    .clickMenuFolder('Inventory')
                    .done()
                    })
                .done() 
            })
            .done() 
        })  
         .done()
    })
    .done()            
    
})