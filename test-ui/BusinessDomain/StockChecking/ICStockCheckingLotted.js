StartTest (function (t) {
    var commonIC = Ext.create('Inventory.CommonIC');
    new iRely.FunctionalTest().start(t)

        //region PreCondition
        .displayText('===== Pre-setup Add New Lotted Item =====')
        //Add Lotted Item
        .addFunction(function(next){
            commonIC.addInventoryItem
            (t,next,
                'SC - LTI - 15'
                , 'Test Lotted Item For Other Charges'
                , 3
//                , 'Grains'
//                , 'SC - Commodity - 01'
//                , 'LB'
//                , 'LB'
                , 10
                , 10
                , 40
            )
        })

        //region Scenario 1: FULL CYCLE Stock Checking
        .displayText('===== FULL CYCLE Stock Checking =====')
        .displayText('===== Scenario 1:  Purchase Order Stock Checking =====')
        .displayText('=====  Purchase Order Stock Checking =====')
        .clickMenuFolder('Purchasing (Accounts Payable)','Folder')
        .clickMenuScreen('Purchase Orders','Screen')
        .clickButton('New')
        .waitUntilLoaded('')
        .selectComboBoxRowNumber('VendorId',1,0)
//        .selectComboBoxRowValue('VendorId', 'Frito-Lay', 'VendorId',1)
        .waitUntilLoaded('')
        .selectGridComboBoxRowValue('Items',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('Items',1,'strUOM','LB','strUOM')
        .enterGridData('Items', 1, 'colQtyOrdered', '100')
        .verifyGridData('Items', 1, 'colTotal', '1000')
        .clickButton('Save')
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Purchasing (Accounts Payable)','Folder')

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '100')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '0')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


//        .clickMenuFolder('Purchasing (Accounts Payable)','Folder')
//        .clickMenuScreen('Purchase Orders','Screen')
//        .doubleClickSearchRowValue('Frito-Lay', 'strVendorName', 1)
//        .waitUntilLoaded()
//        .clickButton('Process')
//        .addResult('Processing PO to IR',3000)
//        .waitUntilLoaded('icinventoryreceipt')
//        .waitUntilLoaded('')
//        .verifyData('Combo Box','ReceiptType','Purchase Order')

        .clickMenuScreen('Inventory Receipts','Screen')
        .clickButton('New')
        .selectComboBoxRowNumber('ReceiptType',2,0)
        .selectComboBoxRowNumber('Vendor',4,0)
//        .selectComboBoxRowValue('Vendor', 'Frito-Lay', 'Vendor',1)
        .waitUntilLoaded()
        .selectSearchRowNumber(1)
        .clickButton('OpenSelected')
        .waitUntilLoaded('')
        .verifyData('Combo Box','Vendor','Frito-Lay')
        .verifyGridData('InventoryReceipt', 1, 'colItemNo', 'SC - LTI - 15')
        .verifyGridData('InventoryReceipt', 1, 'colOrderUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colQtyOrdered', '100')
        .verifyGridData('InventoryReceipt', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colQtyToReceive', '100')
        .verifyGridData('InventoryReceipt', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '1000')
        .verifyGridData('InventoryReceipt', 1, 'colSubLocation', 'Raw Station')
        .verifyGridData('InventoryReceipt', 1, 'colStorageLocation', 'RM Storage')
        .selectGridComboBoxRowValue('InventoryReceipt',1,'strWeightUOM','LB','strWeightUOM')

        .enterGridData('LotTracking', 1, 'colLotId', 'LOT-01')
        .selectGridComboBoxRowValue('LotTracking',1,'strUnitMeasure','LB','strUnitMeasure')
        .enterGridData('LotTracking', 1, 'colLotQuantity', '100')
        .verifyGridData('LotTracking', 1, 'colLotGrossWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colLotNetWeight', '100')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colLotStorageLocation', 'RM Storage')


        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-012')
        .verifyGridData('RecapTransaction', 1, 'colRecapDebit', '1000')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '21000-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapCredit', '1000')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',2000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .displayText('===== Create Purchase Order Inventory Receipt for Lotted Item "Process Button" Done=====')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '100')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


//        //Post voucher
//        .displayText('===== Process Voucher of Purchase Order Inventory Receipt  =====')
//        .clickMenuScreen('Inventory Receipts','Screen')
//        .waitUntilLoaded()
//        .selectSearchRowNumber(1)
//        .clickButton('OpenSelected')
//        .waitUntilLoaded('')
//        //.doubleClickSearchRowValue('Purchase Order', 'strOrderType', 1)
//        .waitUntilLoaded()
//        .waitUntilLoaded('icinventoryreceipt')
//        .addResult('Successfully Opened',4000)
//        .verifyGridData('InventoryReceipt', 1, 'colItemNo', 'SC - LTI - 15')
//        .verifyGridData('InventoryReceipt', 1, 'colUOM', 'LB')
//        .verifyGridData('InventoryReceipt', 1, 'colQtyToReceive', '100')
//        .verifyGridData('InventoryReceipt', 1, 'colItemSubCurrency', 'USD')
//        .verifyGridData('InventoryReceipt', 1, 'colUnitCost', '10')
//        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'LB')
//        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '1000')
//        .clickButton('Voucher')
//        .waitUntilLoaded('')
//        .verifyMessageBox('iRely i21','Voucher successfully processed. Do you want to view this voucher?','yesno', 'question')
//        .clickMessageBoxButton('yes')
//        .waitUntilLoaded('')
//        .addResult('Successfully Created Voucher',2000)
//        .enterData('Text Field','InvoiceNo','SCVoucher-001')
//        .clickButton('Post')
//        .waitUntilLoaded()
//        .addResult('Successfully Created Voucher',2000)
//        .waitUntilLoaded()
//        .clickButton('Close')
//        .waitUntilLoaded()
//        .clearTextFilter('FilterGrid')
//        .waitUntilLoaded()
        .clickMenuFolder('Inventory','Folder')
        .displayText('===== Crete and post voucher successful =====')



        .displayText('===== Scenario 2:  Sales Order Stock Checking - Ship Button SO to IS for Lotted  =====')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')
        .clickMenuScreen('Sales Orders','Screen')
        .clickButton('New')
        .waitUntilLoaded('arsalesorder')
        .waitUntilLoaded('')


        .selectComboBoxRowNumber('Customer',1,0)
        //.selectComboBoxRowValue('Customer', 'Frito-Lay', 'Customer',1)
        .enterData('Text Field','BOLNo','Test BOL - 01')
        .selectComboBoxRowNumber('FreightTerm',3,0)
        //.selectComboBoxRowValue('FreightTerm', 'Truck', 'FreightTerm',1)
        .selectGridComboBoxRowValue('SalesOrder',1,'strItemNo','SC - LTI - 15','strItemNo')
        .addResult('Item Selected',1500)
        .enterGridData('SalesOrder', 1, 'colOrdered', '20')
        .verifyGridData('SalesOrder', 1, 'colPrice', '14')
        .clickButton('Save')
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','WARNING: Customer may exceed credit limit!','ok','information')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .addResult('Item Selected',3000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '100')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '20')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '100')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .clickMenuFolder('Inventory','Folder')


        .clickMenuFolder('Sales (Accounts Receivable)','Folder')
        .clickMenuScreen('Sales Orders','Screen')
        .doubleClickSearchRowValue('Apple Spice Sales', 'strCustomerName', 1)
        .waitUntilLoaded()
        .clickButton('Ship')
        .addResult('Clicked Ship Button',3000)
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','WARNING: Customer may exceed credit limit!','ok','information')
        .clickMessageBoxButton('ok')
        .waitUntilLoaded('')
        .addResult('Open Inventory Shipment Screen',3000)
        .waitUntilLoaded('')
        .waitUntilLoaded('')

        .verifyData('Combo Box','OrderType','Sales Order')
        .verifyData('Combo Box','Customer','Apple Spice Sales')
        .verifyData('Combo Box','FreightTerms','Truck')

        .verifyGridData('InventoryShipment', 1, 'colItemNumber', 'SC - LTI - 15')
        .verifyGridData('InventoryShipment', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryShipment', 1, 'colUnitPrice', '14')
        .verifyGridData('InventoryShipment', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryShipment', 1, 'colLineTotal', '280')
        .selectComboBoxRowNumber('Currency',6,0)
        .selectGridComboBoxRowValue('InventoryShipment',1,'strSubLocationName','Raw Station','strSubLocationName')
        .selectGridComboBoxRowValue('InventoryShipment',1,'strStorageLocationName','RM Storage','strStorageLocationName')


        .selectGridComboBoxRowValue('LotTracking',1,'strLotId','LOT-01','strLotId')
        .enterGridData('LotTracking', 1, 'colShipQty', '20')
        .verifyGridData('LotTracking', 1, 'colLotUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colGrossWeight', '20')
        .verifyGridData('LotTracking', 1, 'colTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colNetWeight', '20')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')
        .clickButton('Save')
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '100')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '20')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '20')
        .verifyGridData('Stock', 2, 'colStockAvailable', '80')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        .clickMenuScreen('Inventory Shipments','Screen')
        .doubleClickSearchRowValue('Apple Spice Sales', 'strCustomerName', 1)
        .waitUntilLoaded()
        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
//        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16050-0001-012')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '200')
//        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16000-0001-012')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '200')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .clickMenuFolder('Sales (Accounts Receivable)','Folder')
        .displayText('===== Ship Button SO to IS for Lotted Done=====')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '80')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '20')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '80')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        .clickMenuScreen('Inventory Shipments','Screen')
        .doubleClickSearchRowValue('Apple Spice Sales', 'strCustomerName', 1)
        .waitUntilLoaded()
        .clickButton('Invoice')
        .waitUntilLoaded('')
        .addResult('Successfully Created Invoice',2000)
        .waitUntilLoaded('')
        .verifyMessageBox('iRely i21','Invoice successfully processed. Do you want to view this Invoice?','yesno', 'question')
        .clickMessageBoxButton('yes')
        .waitUntilLoaded('')
        .addResult('Successfully Created Invoice',2000)
        .waitUntilLoaded()
        .waitUntilLoaded('')
        .clickButton('Post')
        .waitUntilLoaded()
        .addResult('Successfully Posted Invoice',2000)
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '80')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '80')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Inventory Transfer Storage to Storage
        .displayText('===== Create Inventory Transfer for Lotted Item Shipment Not Required Storage to Storage =====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('TransferType', 'Storage to Storage', 'TransferType',1)
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowNumber('ToLocation',1,0)
        //.selectComboBoxRowValue('ToLocation', '0001 - Fort Wayne', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableQty', '80')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strLotNumber','LOT-01','strLotNumber')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '10')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Raw Station','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','RM Bin 1','strToStorageLocationName')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '80')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '80')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        //Inventory Transfer Storage to Storage - Shipment not required same location
        .displayText('===== Inventory Transfer Storage to Storage - Shipment not required same location =====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .clickButton('New')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('TransferType', 'Storage to Storage', 'TransferType',1)
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowNumber('ToLocation',1,0)
        //.selectComboBoxRowValue('ToLocation', '0001 - Fort Wayne', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableQty', '70')

        .selectGridComboBoxRowValue('InventoryTransfer',2,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',2,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',2,'strFromStorageLocationName','RM Bin 1','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 2, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 2, 'colAvailableUOM', 'LB')
        .verifyGridData('InventoryTransfer', 2, 'colAvailableQty', '10')
        .clickButton('Close')
        .waitTillLoaded()
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel', 'question')
        .clickMessageBoxButton('no')
        .waitUntilLoaded('')

        //Inventory Transfer Location to Location Shipment not Required
        .displayText('===== Inventory Transfer Location to Location Shipment not Required =====')
        .clickButton('New')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('TransferType', 'Location to Location', 'TransferType',1)
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowNumber('ToLocation',2,0)
        //.selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Bin 1','strFromStorageLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strLotNumber','LOT-01','strLotNumber')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableQty', '10')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '3')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')
        .enterGridData('InventoryTransfer', 1, 'colNewLotID', 'LOT-01')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '3')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '3')
        .displayText('=====  Item Stock Checking Done =====')

        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '77')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '77')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()

        .displayText('===== Checking Stock of Sub Location and Storage Locations=====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('TransferType', 'Storage to Storage', 'TransferType',1)
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowNumber('ToLocation',1,0)
        //.selectComboBoxRowValue('ToLocation', '0001 - Fort Wayne', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Bin 1','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableQty', '7')
        .clickButton('Close')
        .waitTillLoaded()
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel', 'question')
        .clickMessageBoxButton('no')
        .waitUntilLoaded('')

        .clickButton('New')
        .waitUntilLoaded('')

        .selectComboBoxRowValue('TransferType', 'Storage to Storage', 'TransferType',1)
        .selectComboBoxRowNumber('FromLocation',2,0)
        //.selectComboBoxRowValue('FromLocation', '0002 - Indianapolis', 'ToLocation',1)
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowNumber('ToLocation',1,0)
        //.selectComboBoxRowValue('ToLocation', '0001 - Fort Wayne', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Indy','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','Indy Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableQty', '3')
        .clickButton('Close')
        .waitTillLoaded()
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel', 'question')
        .clickMessageBoxButton('no')
        .waitUntilLoaded('')


        //Inventory Transfer Location to Location Shipment Required
        .displayText('===== Inventory Transfer Location to Location Shipment Required =====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventorytransfer')
        .verifyData('Combo Box','TransferType','Location to Location')
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowNumber('ToLocation',2,0)
        //.selectComboBoxRowValue('ToLocation', '0002 - Indianapolis', 'ToLocation',1)
        .clickCheckBox('ShipmentRequired', true)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Bin 1','strFromStorageLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strLotNumber','LOT-01','strLotNumber')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .enterGridData('InventoryTransfer', 1, 'colTransferQty', '2')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToSubLocationName','Indy','strToSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strToStorageLocationName','Indy Storage','strToStorageLocationName')
        .enterGridData('InventoryTransfer', 1, 'colNewLotID', 'LOT-01')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '20')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '20')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1500)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '3')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '3')
        .displayText('=====  Item Stock Checking Done =====')

        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '75')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '2')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '75')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        .clickMenuScreen('Inventory Receipts','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryreceipt')
        .selectComboBoxRowNumber('ReceiptType',3,0)
        .selectComboBoxRowNumber('Transferor',1,0)
        //.selectComboBoxRowValue('Transferor', '0001 - Fort Wayne', 'Transferor',0)
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('icinventoryreceipt')
        .verifyData('Combo Box','ReceiptType','Transfer Order')
        .verifyData('Combo Box','Transferor','0001 - Fort Wayne')
        .verifyData('Combo Box','Location','0002 - Indianapolis')
        .verifyData('Combo Box','Currency','USD')
        .verifyGridData('InventoryReceipt', 1, 'colItemNo', 'SC - LTI - 15')
        .verifyGridData('InventoryReceipt', 1, 'colOrderUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colQtyOrdered', '2')
        .verifyGridData('InventoryReceipt', 1, 'colUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colQtyToReceive', '2')
        .verifyGridData('InventoryReceipt', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryReceipt', 1, 'colCostUOM', 'LB')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '20')
        .verifyGridData('InventoryReceipt', 1, 'colSubLocation', 'Indy')
        .verifyGridData('InventoryReceipt', 1, 'colStorageLocation', 'Indy Storage')
        .selectGridRowNumber('InventoryReceipt',[1])
        .waitUntilLoaded('')

        .verifyGridData('InventoryReceipt', 1, 'colGross', '2')
        .verifyGridData('InventoryReceipt', 1, 'colNet', '2')
        .verifyGridData('InventoryReceipt', 1, 'colLineTotal', '20')
        .waitUntilLoaded('')


        .enterGridData('LotTracking', 1, 'colLotId', 'LOT-01')
        .selectGridComboBoxRowValue('LotTracking',1,'strUnitMeasure','LB','strUnitMeasure')
        .enterGridData('LotTracking', 1, 'colLotQuantity', '2')
        .verifyGridData('LotTracking', 1, 'colLotGrossWeight', '2')
        .verifyGridData('LotTracking', 1, 'colLotTareWeight', '0')
        .verifyGridData('LotTracking', 1, 'colLotNetWeight', '2')
        .verifyGridData('LotTracking', 1, 'colLotWeightUOM', 'LB')
        .verifyGridData('LotTracking', 1, 'colLotStorageLocation', 'Indy Storage')


        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0002-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapDebit', '20')
        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16050-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapCredit', '20')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',2000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')
        .displayText('===== Create Inventory Transfer for Non Lotted Item Shipment Required Location to Location Done =====')

        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '5')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '5')
        .displayText('=====  Item Stock Checking Done =====')

        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '75')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '75')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        .displayText('===== Checking Stock of Sub Location and Storage Locations=====')
        .clickMenuScreen('Inventory Transfers','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('TransferType', 'Storage to Storage', 'TransferType',1)
        .verifyData('Combo Box','FromLocation','0001 - Fort Wayne')
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowNumber('ToLocation',1,0)
        //.selectComboBoxRowValue('ToLocation', '0001 - Fort Wayne', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Raw Station','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','RM Bin 1','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableQty', '5')
        .clickButton('Close')
        .waitTillLoaded()
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel', 'question')
        .clickMessageBoxButton('no')
        .waitUntilLoaded('')

        .clickButton('New')
        .waitUntilLoaded('')

        .selectComboBoxRowValue('TransferType', 'Storage to Storage', 'TransferType',1)
        .selectComboBoxRowNumber('FromLocation',2,0)
        //.selectComboBoxRowValue('FromLocation', '0002 - Indianapolis', 'ToLocation',1)
        .verifyData('Combo Box','SourceType','None')
        .selectComboBoxRowNumber('ToLocation',1,0)
        //.selectComboBoxRowValue('ToLocation', '0001 - Fort Wayne', 'ToLocation',1)
        .enterData('Text Field','Description','Test Transfer')

        .selectGridComboBoxRowValue('InventoryTransfer',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromSubLocationName','Indy','strFromSubLocationName')
        .selectGridComboBoxRowValue('InventoryTransfer',1,'strFromStorageLocationName','Indy Storage','strFromStorageLocationName')
        .verifyGridData('InventoryTransfer', 1, 'colOwnershipType', 'Own')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableUOM', 'LB')
        .verifyGridData('InventoryTransfer', 1, 'colAvailableQty', '5')
        .clickButton('Close')
        .waitTillLoaded()
        .verifyMessageBox('iRely i21','Do you want to save the changes you made?','yesnocancel', 'question')
        .clickMessageBoxButton('no')
        .waitUntilLoaded('')
          .displayText('===== Inventory Transfer Done =====')



        //Inventory Adjustment
        .displayText('===== Inventory Adjustment Increase Stock of Lotted Item =====')
        .clickMenuScreen('Inventory Adjustments','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryadjustment')
        .verifyData('Combo Box','Location','0001 - Fort Wayne')
        .selectComboBoxRowNumber('AdjustmentType',1,0)
        .enterData('Text Field','Description','Test Quantity Change')

        .selectGridComboBoxRowValue('InventoryAdjustment',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryAdjustment',1,'strLotNumber','LOT-01','strLotNumber')
        .enterGridData('InventoryAdjustment', 1, 'colAdjustByQuantity', '5')
        .verifyGridData('InventoryAdjustment', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryAdjustment', 1, 'colNewUnitCost', '10')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
//        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapDebit', '50')
//        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16040-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapCredit', '50')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


         //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '5')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '5')
        .displayText('=====  Item Stock Checking Done =====')

        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '80')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '80')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()


        .displayText('===== Inventory Adjustment Decrease Stock of Lotted Item =====')
        .clickMenuScreen('Inventory Adjustments','Screen')
        .waitUntilLoaded()
        .clickButton('New')
        .waitUntilLoaded('icinventoryadjustment')
        .verifyData('Combo Box','Location','0001 - Fort Wayne')
        .selectComboBoxRowNumber('AdjustmentType',1,0)
        .enterData('Text Field','Description','Test Quantity Change')

        .selectGridComboBoxRowValue('InventoryAdjustment',1,'strItemNo','SC - LTI - 15','strItemNo')
        .selectGridComboBoxRowValue('InventoryAdjustment',1,'strLotNumber','LOT-01','strLotNumber')
        .enterGridData('InventoryAdjustment', 1, 'colAdjustByQuantity', '-5')
        .verifyGridData('InventoryAdjustment', 1, 'colUnitCost', '10')
        .verifyGridData('InventoryAdjustment', 1, 'colNewUnitCost', '10')

        .clickButton('PostPreview')
        .waitUntilLoaded('cmcmrecaptransaction')
        .waitUntilLoaded('')
//        .verifyGridData('RecapTransaction', 1, 'colRecapAccountId', '16000-0001-000')
        .verifyGridData('RecapTransaction', 2, 'colRecapDebit', '50')
//        .verifyGridData('RecapTransaction', 2, 'colRecapAccountId', '16040-0001-000')
        .verifyGridData('RecapTransaction', 1, 'colRecapCredit', '50')
        .clickButton('Post')
        .waitUntilLoaded('')
        .addResult('Successfully Posted',1000)
        .waitUntilLoaded('')
        .clickButton('Close')
        .waitUntilLoaded('')


        //Check Stock of the Item
        .displayText('=====  Checking Item Stock =====')
        .clickMenuScreen('Items','Screen')
        .doubleClickSearchRowValue('SC - LTI - 15', 'strItemNo', 1)
        .waitUntilLoaded('')
        .clickTab('Stock')
        .waitUntilLoaded()
        .verifyGridData('Stock', 1, 'colStockLocation', '0002 - Indianapolis')
        .verifyGridData('Stock', 1, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 1, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 1, 'colStockOnHand', '5')
        .verifyGridData('Stock', 1, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 1, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 1, 'colStockCommitted', '0')
        .verifyGridData('Stock', 1, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 1, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 1, 'colStockReserved', '0')
        .verifyGridData('Stock', 1, 'colStockAvailable', '5')
        .displayText('=====  Item Stock Checking Done =====')

        .verifyGridData('Stock', 2, 'colStockLocation', '0001 - Fort Wayne')
        .verifyGridData('Stock', 2, 'colStockOnOrder', '0')
        .verifyGridData('Stock', 2, 'colStockInTransitInbound', '0')
        .verifyGridData('Stock', 2, 'colStockOnHand', '75')
        .verifyGridData('Stock', 2, 'colStockInTransitOutbound', '0')
        .verifyGridData('Stock', 2, 'colStockBackOrder', '0')
        .verifyGridData('Stock', 2, 'colStockCommitted', '0')
        .verifyGridData('Stock', 2, 'colStockOnStorage', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedPurchase', '0')
        .verifyGridData('Stock', 2, 'colStockConsignedSale', '0')
        .verifyGridData('Stock', 2, 'colStockReserved', '0')
        .verifyGridData('Stock', 2, 'colStockAvailable', '75')
        .displayText('=====  Item Stock Checking Done =====')
        .clickButton('Close')
        .waitUntilLoaded()
        .clearTextFilter('FilterGrid')
        .waitUntilLoaded()
        .displayText('===== Inventory Adjustment Stock Checking Done=====')
        //endregion


        .done();

})