/**
 * Created by RQuidato on 4/24/2017.
 */
StartTest (function (t) {
    var commonGL = Ext.create('GeneralLedger.commonGL');
    var commonIC = Ext.create('Inventory.CommonIC');

    new iRely.FunctionalTest().start(t)


        //Unrealized Gain or Loss Foreign Currency
        //Account ID, Account description, Account Group, Account Category
        //36000, Unrealized Gain or Loss AP, Other Equities, Unrealized Gain or Loss Accounts Payable
        //36001, Unrealized Gain or Loss AR, Other Equities, Unrealized Gain or Loss Accounts Receivable
        //36002, Unrealized Gain or Loss IC, Other Equities, Unrealized Gain or Loss Inventory
        //36003, Unrealized Gain or Loss CP, Other Equities, Unrealized Gain or Loss Contract Purchase
        //36004, Unrealized Gain or Loss CS, Other Equities, Unrealized Gain or Loss Contract Sales
        //36005, Unrealized Gain or Loss Cash, Other Equities, Unrealized Gain or Loss Cash Management

        //Unrealized Gain or Loss Foreign Currency Offset
        //20040, Unrealized Gain or Loss OFFSET AP, Payables, Unrealized Gain or Loss Offset AP
        //12040, Unrealized Gain or Loss OFFSET AR, Receivables, Unrealized Gain or Loss Offset AR
        //16140, Unrealized Gain or Loss OFFSET IC, Inventories, Unrealized Gain or Loss Offset Inventory
        //20041, Unrealized Gain or Loss OFFSET CP, Other Payables, Unrealized Gain or Loss Offset Contract Purchase
        //12041, Unrealized Gain or Loss OFFSET CS, Other Assets, Unrealized Gain or Loss Offset Contract Sales
        //10020, Unrealized Gain or Loss OFFSET Cash, Cash Accounts, Unrealized Gain or Loss Offset CM

        //Realized Gain or Loss Accounts
        //50040, Gain or Loss AP, Other Expenses, Realized Gain or Loss Payables
        //50041, Gain or Loss AR, Other Expenses, Realized Gain or Loss Receivables



        .displayText('===== 1. Add GL Accounts =====')
        .clickMenuFolder('General Ledger')
        .waitUntilLoaded()
        .clickMenuScreen('GL Account Detail')
        .waitUntilLoaded()
        .addResult('GL Account Detail opened')

        .clickButton('Segments')
        .waitUntilLoaded()
        .verifyScreenShown('glsegmentaccounts')
        .addResult('Segment Accounts screen opened')

        .clickButton('AddSegment')
        .displayText('Add 36000 - Unrealized Gain or Loss AP Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '36000'},{column: 'strDescription',data: 'Unrealized Gain or Loss AP'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Equities','Account Group',1)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Accounts Payable', 'Account Category',1)
        .addResult('----Add 36000- Unrealized Gain or Loss AP Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 36001 - Unrealized Gain or Loss AR Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '36001'},{column: 'strDescription',data: 'Unrealized Gain or Loss AR'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Equities','Account Group',1)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Accounts Receivable', 'Account Category',3)
        .addResult('----Add 36001 - Unrealized Gain or Loss AR Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 36002 - Unrealized Gain or Loss IC Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '36002'},{column: 'strDescription',data: 'Unrealized Gain or Loss IC'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Equities','Account Group',1)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Inventory', 'Account Category',1)
        .addResult('----Add 36002 - Unrealized Gain or Loss IC Primary Account Done---')

        .clickButton('AddSegment')
        .displayText('Add 36003 - Unrealized Gain or Loss CP Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '36003'},{column: 'strDescription',data: 'Unrealized Gain or Loss CP'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Equities','Account Group',2)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Contract Purchase', 'Account Category',1)
        .addResult('----Add 36003 - Unrealized Gain or Loss CP Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 36004 - Unrealized Gain or Loss CS Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '36004'},{column: 'strDescription',data: 'Unrealized Gain or Loss CS'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Equities','Account Group',1)
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Contract Sales', 'Account Category',1)
        .addResult('----Add 36004 - Unrealized Gain or Loss CS Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 36005 - Unrealized Gain or Loss Cash Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '36005'},{column: 'strDescription',data: 'Unrealized Gain or Loss Cash'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Equities','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Cash Management', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 36005 - Unrealized Gain or Loss Cash Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 20040 - Unrealized Gain or Loss OFFSET AP Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '20040'},{column: 'strDescription',data: 'Unrealized Gain or Loss OFFSET AP'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Payables','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Offset AP', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 20040 - Unrealized Gain or Loss OFFSET AP Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 12040 - Unrealized Gain or Loss OFFSET AR Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '12040'},{column: 'strDescription',data: 'Unrealized Gain or Loss OFFSET AR'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Receivables','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Offset AR', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 12040 - Unrealized Gain or Loss OFFSET AR Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 16140 - Unrealized Gain or Loss OFFSET IC Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '16140'},{column: 'strDescription',data: 'Unrealized Gain or Loss OFFSET IC'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Inventories','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Offset Inventory', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 16140 - Unrealized Gain or Loss OFFSET IC Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 20041 - Unrealized Gain or Loss OFFSET CP Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '20041'},{column: 'strDescription',data: 'Unrealized Gain or Loss OFFSET CP'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Payables','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Offset Contract Purchase', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 20041 - Unrealized Gain or Loss OFFSET CP Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 12041 - Unrealized Gain or Loss OFFSET CS Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '12041'},{column: 'strDescription',data: 'Unrealized Gain or Loss OFFSET CS'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Assets','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Offset Contract Sales', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 12041 - Unrealized Gain or Loss OFFSET CS Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 10020 - Unrealized Gain or Loss OFFSET Cash Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '10020'},{column: 'strDescription',data: 'Unrealized Gain or Loss OFFSET Cash'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Cash Accounts','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Unrealized Gain or Loss Offset CM', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 10020 - Unrealized Gain or Loss OFFSET Cash Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 50040 - Gain or Loss AP Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '50040'},{column: 'strDescription',data: 'Gain or Loss AP'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Expenses','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Realized Gain or Loss Payables', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 50040 - Gain or Loss AP Primary Account Done----')

        .clickButton('AddSegment')
        .displayText('Add 50041 - Gain or Loss AR Primary Account')
        .waitUntilLoaded()
        .enterGridNewRow('SegmentAccounts', [{column: 'strCode',data: '50041'},{column: 'strDescription',data: 'Gain or Loss AR'}])
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountGroup','Other Expenses','Account Group',1)
        .waitUntilLoaded()
        .selectGridComboBoxBottomRowValue('SegmentAccounts','strAccountCategory','Realized Gain or Loss Receivables', 'Account Category',1)
        .waitUntilLoaded()
        .addResult('----Add 50041 - Gain or Loss AR Primary Account Done----')

        .clickButton('Save')
        .clickButton('Close')

        //code, location, lob, desc, account group, account category, location name, lob bame, currency
        .addFunction(function(next){commonGL.buildAccount(t, next, '36000', '0001', '001', 'Unrealized Gain or Loss AP', 'Other Equities','Unrealized Gain or Loss Accounts Payable', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '36001', '0001', '001', 'Unrealized Gain or Loss AR', 'Other Equities','Unrealized Gain or Loss Accounts Receivable', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '36002', '0001', '001', 'Unrealized Gain or Loss IC', 'Other Equities','Unrealized Gain or Loss Inventory', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '36003', '0001', '001', 'Unrealized Gain or Loss CP', 'Other Equities','Unrealized Gain or Loss Contract Purchase', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '36004', '0001', '001', 'Unrealized Gain or Loss CS', 'Other Equities','Unrealized Gain or Loss Contract Sales', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '36005', '0001', '001', 'Unrealized Gain or Loss Cash', 'Other Equities','Unrealized Gain or Loss Cash Management', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '20040', '0001', '001', 'Unrealized Gain or Loss OFFSET AP', 'Payables','Unrealized Gain or Loss Offset AP', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '12040', '0001', '001', 'Unrealized Gain or Loss OFFSET AR', 'Receivables','Unrealized Gain or Loss Offset AR', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '16140', '0001', '001', 'Unrealized Gain or Loss OFFSET IC', 'Inventories','Unrealized Gain or Loss Offset Inventory', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '20041', '0001', '001', 'Unrealized Gain or Loss OFFSET CP', 'Other Payables','Unrealized Gain or Loss Offset Contract Purchase', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '12041', '0001', '001', 'Unrealized Gain or Loss OFFSET CS', 'Other Assets','Unrealized Gain or Loss Offset Contract Sale', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '10020', '0001', '001', 'Unrealized Gain or Loss OFFSET Cash', 'Cash Accounts','Unrealized Gain or Loss Offset Contract CM', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '50040', '0001', '001', 'Gain or Loss AP', 'Other Expenses','Realized Gain or Loss Payables', 'Fort Wayne','Grains','USD',1,1)})
        .addFunction(function(next){commonGL.buildAccount(t, next, '50041', '0001', '001', 'Gain or Loss AR', 'Other Expenses','Realized Gain or Loss Receivables', 'Fort Wayne','Grains','USD',1,1)})

        //.addFunction(function(next){commonGL.buildAccount(t, next, '36000', '0002', '001', 'Unrealized Gain or Loss AP', 'Other Equities','Unrealized Gain or Loss Accounts Payable', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '36001', '0002', '001', 'Unrealized Gain or Loss AR', 'Other Equities','Unrealized Gain or Loss Accounts Receivable', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '36002', '0002', '001', 'Unrealized Gain or Loss IC', 'Other Equities','Unrealized Gain or Loss Inventory', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '36003', '0002', '001', 'Unrealized Gain or Loss CP', 'Other Equities','Unrealized Gain or Loss Contract Purchase', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '36004', '0002', '001', 'Unrealized Gain or Loss CS', 'Other Equities','Unrealized Gain or Loss Contract Sales', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '36005', '0002', '001', 'Unrealized Gain or Loss Cash', 'Other Equities','Unrealized Gain or Loss Cash Management', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '20040', '0002', '001', 'Unrealized Gain or Loss OFFSET AP', 'Payables','Unrealized Gain or Loss Offset AP', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '12040', '0002', '001', 'Unrealized Gain or Loss OFFSET AR', 'Receivables','Unrealized Gain or Loss Offset AR', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '16140', '0002', '001', 'Unrealized Gain or Loss OFFSET IC', 'Inventories','Unrealized Gain or Loss Offset Inventory', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '20041', '0002', '001', 'Unrealized Gain or Loss OFFSET CP', 'Other Payables','Unrealized Gain or Loss Offset Contract Purchase', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '12041', '0002', '001', 'Unrealized Gain or Loss OFFSET CS', 'Other Assets','Unrealized Gain or Loss Offset Contract Sale', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '10020', '0002', '001', 'Unrealized Gain or Loss OFFSET Cash', 'Cash Accounts','Unrealized Gain or Loss Offset Contract CM', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '50040', '0002', '001', 'Gain or Loss AP', 'Other Expenses','Realized Gain or Loss Payables', 'Indianapolis','Grains','USD',1,1)})
        //.addFunction(function(next){commonGL.buildAccount(t, next, '50041', '0002', '001', 'Gain or Loss AR', 'Other Expenses','Realized Gain or Loss Receivables', 'Indianapolis','Grains','USD',1,1)})


        .displayText('===== 2. Add GL Accounts DONE =====')
        .clickMenuFolder('General Ledger')
        .waitUntilLoaded()

        //Add Currency Exchange Rates
        .displayText('===== 2. Add Currency Exchange Rates =====')
        .clickMenuFolder('Common Info','Folder')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Currency Exchange Rates','Screen')
        .waitUntilLoaded('smcurrencyexchangerate',3000)

        .displayText('===== 2a. Add EUR > USD =====')
        .enterGridNewRow('CurrencyExchangeRate', [{column: 'strFromCurrency', data: 'EUR'}, {column: 'strToCurrency', data: 'USD'}])
        .enterGridNewRow('CurrencyExchangeRateDetail', [{column: 'dblRate', data: '1.08'}, {column: 'strRateType', data: 'Spot'}, {column: 'dtmValidFromDate', data: 'USD'}])
        .enterGridNewRow('CurrencyExchangeRateDetail', [{column: 'dblRate', data: '1.06115'}, {column: 'strRateType', data: 'Spot'}, {column: 'dtmValidFromDate', data: 'USD'}])
        .displayText('===== 2a. Add EUR > USD DONE =====')

        .displayText('===== 2a. Add EUR > USD =====')
        .enterGridNewRow('CurrencyExchangeRate', [{column: 'strFromCurrency', data: 'GBP'}, {column: 'strToCurrency', data: 'USD'}])
        .enterGridNewRow('CurrencyExchangeRateDetail', [{column: 'dblRate', data: '1.24553'}, {column: 'strRateType', data: 'Spot'}, {column: 'dtmValidFromDate', data: 'USD'}])
        .displayText('===== 2a. Add EUR > USD DONE =====')

        .displayText('===== 2a. Add GBP > USD =====')
        .enterGridNewRow('CurrencyExchangeRate', [{column: 'strFromCurrency', data: 'GBP'}, {column: 'strToCurrency', data: 'USD'}])
        .enterGridNewRow('CurrencyExchangeRateDetail', [{column: 'dblRate', data: '1.17797323'}, {column: 'strRateType', data: 'Spot'}, {column: 'dtmValidFromDate', data: 'new Date().toLocaleDateString();'}])
        .displayText('===== 2a. Add EUR > USD DONE =====')




        //Add Vendors
        .displayText('===== . Create Item Vendor MC1 =====')
        .clickMenuFolder('Purchasing (Accounts Payable)')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Vendors')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('emcreatenewentity',3000)
        .enterData('Text Field','Name','Item Vendor MC1')
        .enterData('Text Field','Contact','Item Vendor MC1-C1')
        .enterData('Text Field','Phone','1234567890')
        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
        .enterData('Text Field','Address','123 Wide Street')
        .enterData('Text Field','City','Richmond')
        .enterData('Text Field','State','IN')
        .enterData('Text Field','ZipCode','47374')
        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
        .clickButton('Match')
        .waitUntilLoaded('emduplicateentities',3000)
        .clickButton('Add')
        .enterData('Text Field','Location','Item Vendor MC1-Loc1')
        .clickTab('Vendor')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('VendorCurrency', 'USD', 'VendorCurrency',1)
        .selectGridComboBoxRowValue('VendorTerm',1,'colVendorTerms','Net 30','strTerm')
        .selectComboBoxRowValue('VendorTerms', 'Net 30', 'VendorTerms',5)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== 17. Create Item Vendor DONE =====')
        .clickMenuFolder('Purchasing (Accounts Payable)')

//        .displayText('===== 18. Create 3rd Party Vendor =====')
//        .clickMenuFolder('Purchasing (Accounts Payable)')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Vendors')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('emcreatenewentity',3000)
//        .enterData('Text Field','Name','3rd Party Vendor1')
//        .enterData('Text Field','Contact','3rd Party Vendor1-C1')
//        .enterData('Text Field','Phone','1234567890')
//        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
//        .enterData('Text Field','Address','789 Narrow Drive')
//        .enterData('Text Field','City','Richmond')
//        .enterData('Text Field','State','IN')
//        .enterData('Text Field','ZipCode','47374')
//        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
//        .clickButton('Match')
//        .waitUntilLoaded('emduplicateentities',3000)
//        .clickButton('Add')
//        .enterData('Text Field','Location','3rd Party Vendor1-Loc1')
//        .clickTab('Vendor')
//        .waitUntilLoaded('')
//        .selectGridComboBoxRowValue('VendorTerm',1,'colVendorTerms','Net 30','strTerm')
//        .selectComboBoxRowValue('VendorTerms', 'Net 30', 'VendorTerms',5)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== 18. Create 3rd Party Vendor DONE =====')
//        .clickMenuFolder('Purchasing (Accounts Payable)')


        .displayText('===== . Create Customer =====')
        .clickMenuFolder('Sales (Accounts Receivable)')
        .waitUntilLoaded('',3000)
        .clickMenuScreen('Customers')
        .waitUntilLoaded('',3000)
        .clickButton('New')
        .waitUntilLoaded('emcreatenewentity',3000)
        .enterData('Text Field','Name','Customer1')
        .enterData('Text Field','Contact','Customer1-C1')
        .enterData('Text Field','Phone','0123456789')
        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
        .enterData('Text Field','Address','456 Flower Drive')
        .enterData('Text Field','City','Richmond')
        .enterData('Text Field','State','IN')
        .enterData('Text Field','ZipCode','47374')
        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
        .clickButton('Match')
        .waitUntilLoaded('emduplicateentities',3000)
        .clickButton('Add')
        .enterData('Text Field','Location','Customer1-Loc1')
        .clickTab('Customer')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('CustomerTerms', 'Net 30', 'CustomerTerms',5)
        .selectComboBoxRowNumber('CustomerSalesperson',1,0)
        .clickTab('Locations')
        .selectGridRowNumber('Location',1)
        .clickButton('EditLoc')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('Country', 'United States', 'Country',0)
        .selectComboBoxRowValue('ShipVia', 'UPS', 'ShipVia',0)
        .selectComboBoxRowValue('TaxGroup', 'Test Group 1', 'TaxGroup',0)
        .selectComboBoxRowValue('Terms', 'Net 30', 'Terms',5)
        .selectComboBoxRowValue('Warehouse', '0001 - Fort Wayne', 'Warehouse',0)
        .selectComboBoxRowValue('FreightTerm', 'Deliver', 'FreightTerm',0)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .clickButton('Save')
        .waitUntilLoaded('',3000)
        .clickButton('Close')
        .waitUntilLoaded('',3000)
        .displayText('===== 19. Create Customer DONE =====')
        .clickMenuFolder('Sales (Accounts Receivable)')

//        .displayText('===== 3. Assign default AR account in the Company Configuration  =====')
//        .clickMenuFolder('System Manager','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Company Configuration','Screen')
//        .waitUntilLoaded('smcompanypreference',3000)
//        .waitUntilLoaded('smcompanypreference',3000)
//        .waitUntilLoaded('smcompanypreference',3000)
//        .waitUntilLoaded('smcompanypreference',3000)
//        .selectGridRowNumber('Settings',6)
//        .waitUntilLoaded('',3000)
//        .selectComboBoxRowValue('ARAccount', '12012-0001-001','ARAccount',1)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','ARAccount','12012-0001-001')
//        .clickButton('Ok')
//        .waitUntilLoaded('',3000)
//        .displayText('===== 3. Assign default AR account in the Company Configuration DONE  =====')
//        .clickMenuFolder('System Manager','Folder')
//        .waitUntilLoaded()
//
//
//        .displayText('======== 4. Setup account id for AP and AR in the Company Location ========')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Company Locations','Screen')
//        .doubleClickSearchRowValue('0001 - Fort Wayne', 1)
//        .waitUntilLoaded('smcompanylocation',3000)
//        .clickTab('GL Accounts')
//        .waitUntilLoaded('',3000)
//        .selectComboBoxRowValue('ARAccount', '12012-0001-001', 'ARAccount',0)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','ARAccount','12012-0001-001')
//        .selectComboBoxRowValue('APAccount', '20012-0001-001', 'APAccount',0)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','APAccount','20012-0001-001')
//        .clickButton('Save')
//        .clickButton('Close')
//
//        .doubleClickSearchRowValue('0002 - Indianapolis', 1)
//        .waitUntilLoaded('smcompanylocation',3000)
//        .clickTab('GL Accounts')
//        .waitUntilLoaded('',3000)
//        .selectComboBoxRowValue('ARAccount', '12012-0002-001', 'ARAccount',0)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','ARAccount','12012-0002-001')
//        .selectComboBoxRowValue('APAccount', '20012-0002-001', 'APAccount',0)
//        .waitUntilLoaded('',3000)
//        .verifyData('Combo Box','APAccount','20012-0002-001')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('======== 4. Setup account id for AP and AR in the Company Location DONE ========')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded()
//
//
//        .displayText('===== 5. Add Tax Class - Tax Class A =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Tax Class','Screen')
//        .waitUntilLoaded('smtaxclass',1000)
//        .clickButton('Insert')
//        .enterGridData('GridTemplate', 1, 'colTaxClass', 'Tax Class A')
//        .clickButton('Save')
//        .waitUntilLoaded()
//        .clickButton('Close')
//        .waitUntilLoaded()
//        .displayText('===== 5. Add Tax Class DONE =====')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded()
//
//        //6. Add Tax Codes
//        .displayText('===== 6. Add Tax Codes  =====')
//        .displayText('===== a. Add Tax Code - Tax 1 =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Tax Codes','Screen')
//        .clickButton('New')
//        .waitUntilLoaded('smtaxcode',1000)
//        .enterData('Text Field','TaxCode','Tax 1')
//        .selectComboBoxRowValue('TaxClass','Tax Class A', 'TaxClass', 1)
//        .enterData('Text Field','Description','Tax 1 desc')
//        .enterData('Text Field','Address','63 Overlook Drive')
//        .enterData('Text Field','ZipCode','47374')
//        .enterData('Text Field','City','Richmond')
//        .enterData('Text Field','State','IN')
//        .selectComboBoxRowValue('Country', 'United States', 'Country',1)
//        .selectComboBoxRowValue('SalesTaxAccount', '25012-0001-001','SalesTaxAccount',1)
//        .selectComboBoxRowValue('PurchaseTaxAccount', '72512-0001-001','PurchaseTaxAccount',1)
//        .addFunction (function (next){
//        var date = new Date().toLocaleDateString();
//        new iRely.FunctionalTest().start(t, next)
//            .selectGridComboBoxRowValue('TaxCodeRate',1,'colEffectiveDate',date,'dtmEffectiveDate', 0, 10)
//            .done();
//    })
//        .selectGridComboBoxRowValue('TaxCodeRate',1,'colCalculationMethod','Percentage','strCalculationMethod',1)
//        .enterGridData('TaxCodeRate', 1, 'colRate', '10.00')
//        .clickButton('Save')
//        .waitUntilLoaded()
//        .displayText('===== Add Tax Code - Tax 1 Done =====')
//
//
//        .displayText('===== b. Add Tax Code - Tax 2 =====')
//        .clickButton('New')
//        .waitUntilLoaded('smtaxcode',1000)
//        .enterData('Text Field','TaxCode','Tax 2')
//        .selectComboBoxRowValue('TaxClass','Tax Class A', 'TaxClass', 1)
//        .enterData('Text Field','Description','Tax 2 desc')
//        .enterData('Text Field','Address','63 Overlook Drive')
//        .enterData('Text Field','ZipCode','47374')
//        .enterData('Text Field','City','Richmond')
//        .enterData('Text Field','State','IN')
//        .selectComboBoxRowValue('Country', 'United States', 'Country',1)
//        .selectComboBoxRowValue('SalesTaxAccount', '25012-0001-001','SalesTaxAccount',1)
//        .selectComboBoxRowValue('PurchaseTaxAccount', '72512-0001-001','PurchaseTaxAccount',1)
//        .addFunction (function (next){
//        var date = new Date().toLocaleDateString();
//        new iRely.FunctionalTest().start(t, next)
//            .selectGridComboBoxRowValue('TaxCodeRate',1,'colEffectiveDate',date,'dtmEffectiveDate', 0, 10)
//            .done();
//    })
//        .selectGridComboBoxRowValue('TaxCodeRate',1,'colCalculationMethod','Unit','strCalculationMethod',1)
//        .enterGridData('TaxCodeRate', 1, 'colRate', '0.40')
//        .clickButton('Save')
//        .waitUntilLoaded()
//        .displayText('===== Add Tax Code - Tax 2 Done =====')
//
//
//        .displayText('===== c. Add Tax Code - Tax on Tax =====')
//        .clickButton('New')
//        .waitUntilLoaded('smtaxcode',1000)
//        .enterData('Text Field','TaxCode','Tax on Tax')
//        .selectComboBoxRowValue('TaxClass','Tax Class A', 'TaxClass', 1)
//        .enterData('Text Field','Description','Tax on Tax desc')
//        .enterData('Text Field','Address','63 Overlook Drive')
//        .enterData('Text Field','ZipCode','47374')
//        .enterData('Text Field','City','Richmond')
//        .enterData('Text Field','State','IN')
//        .selectComboBoxRowValue('Country', 'United States', 'Country',1)
//        .selectComboBoxRowValue('SalesTaxAccount', '25012-0001-001','SalesTaxAccount',1)
//        .selectComboBoxRowValue('PurchaseTaxAccount', '72512-0001-001','PurchaseTaxAccount',1)
//        .addFunction (function (next){
//        var date = new Date().toLocaleDateString();
//        new iRely.FunctionalTest().start(t, next)
//            .selectGridComboBoxRowValue('TaxCodeRate',1,'colEffectiveDate',date,'dtmEffectiveDate', 0, 10)
//            .done();
//    })
//        .selectGridComboBoxRowValue('TaxCodeRate',1,'colCalculationMethod','Percentage','strCalculationMethod',1)
//        .enterGridData('TaxCodeRate', 1, 'colRate', '2.5')
//        .clickButton('Save')
//        .waitUntilLoaded()
//        .clickButton('Close')
//        .waitUntilLoaded()
//        .displayText('===== Add Tax Code - Tax on Tax Done =====')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded()
//        .displayText('===== 6. Add Tax Codes DONE =====')
//
//        .displayText('===== 7. Add Tax Group - Test Group 1 =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Tax Groups','Screen')
//        .waitUntilLoaded('smtaxgroup',1000)
//        .clickButton('New')
//        .enterData('Text Field','TaxGroup','Test Group 1')
//        .enterData('Text Field','Description','Test Group 1')
//        .selectGridComboBoxRowValue('TaxGroup',1,'colTaxCode','Tax 2','strTaxCode',1)
//        .clickButton('Save')
//        .waitUntilLoaded()
//        .clickButton('Close')
//        .waitUntilLoaded()
//        .displayText('===== 7. Add Tax Group - Test Group 1 Done =====')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded()
//
//
//        .displayText('===== 8. Assign Tax to Company Location - 0001 - Fort Wayne   =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Company Locations','Screen')
//        .doubleClickSearchRowValue('0001 - Fort Wayne', 1)
//        .waitUntilLoaded('smcompanylocation',3000)
//        .clickTab('Setup')
//        .selectComboBoxRowValue('TaxGroup', 'Test Group 1', 'TaxGroup',1)
//        .clickButton('Save')
//        .waitUntilLoaded()
//        .clickButton('Close')
//        .waitUntilLoaded()
//        .displayText('===== 8. Assign Tax to Company Location - 0001 - Fort Wayne DONE   =====')
//        .clickMenuFolder('Common Info','Folder')
//        .waitUntilLoaded()
//
//
//        .displayText('===== 9: Add New Storage Location - Indy Storage =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Storage Locations','Screen')
//        .clickButton('New')
//        .waitUntilLoaded('icstorageunit')
//        .enterData('Text Field','Name','Indy Storage')
//        .enterData('Text Field','Description','Indy Storage')
//        .selectComboBoxRowNumber('UnitType',6,0)
//        .selectComboBoxRowNumber('Location',2,0)
//        .selectComboBoxRowNumber('SubLocation',1,0)
//        .selectComboBoxRowNumber('ParentUnit',1,0)
//        .enterData('Text Field','Aisle','Test Aisle - 01')
//        .clickCheckBox('AllowConsume', true)
//        .clickCheckBox('AllowMultipleItems', true)
//        .clickCheckBox('AllowMultipleLots', true)
//        .clickCheckBox('CycleCounted', true)
//        .verifyStatusMessage('Edited')
//        .clickButton('Save')
//        .waitUntilLoaded()
//        .verifyStatusMessage('Saved')
//        .clickButton('Close')
//        .displayText('===== 9: Add New Storage Location - Indy Storage DONE =====')
//        .clickMenuFolder('Inventory','Folder')
//        .waitUntilLoaded()
//
//        //Add UOM
//        .displayText('===== 10. Add Inventory UOM =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Inventory UOM','Screen')
//        .clickButton('New')
//        .waitUntilLoaded()
//        .waitUntilLoaded('icinventoryuom',3000)
//
//        //a. Add LB UOM
//        .displayText('a. Add lb1 UOM.')
//        .enterData('Text Field','UnitMeasure','lb1')
//        .enterData('Text Field','Symbol','lb')
//        .selectComboBoxRowNumber('UnitType',6,0)
//        .selectComboBoxRowNumber('Decimals',3,0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//
//        //b. Add 10-lb bag UOM
//        .displayText('b. Add 10-lb bag1 UOM.')
//        .clickButton('New')
//        .waitUntilLoaded('',3000)
//        .enterData('Text Field','UnitMeasure','10-lb bag1')
//        .enterData('Text Field','Symbol','10-lb bag')
//        .selectComboBoxRowNumber('UnitType',7,0)
//        .selectComboBoxRowNumber('Decimals',3,0)
//        .selectGridComboBoxRowValue('Conversion',1,'colOtherUOM','lb1','strUnitMeasure',1)
//        .enterGridData('Conversion', 1, 'dblConversionToStock', '10')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .displayText('======== 10-lb bag1 UOM added ========')
//
//        //c. Add kg UOM
//        .displayText('c. Add kg1 UOM.')
//        .clickButton('New')
//        .waitUntilLoaded('',3000)
//        .enterData('Text Field','UnitMeasure','kg1')
//        .enterData('Text Field','Symbol','kg')
//        .selectComboBoxRowNumber('UnitType',6,0)
//        .selectComboBoxRowNumber('Decimals',3,0)
//        .selectGridComboBoxRowValue('Conversion',1,'colOtherUOM','lb1','strUnitMeasure',1)
//        .enterGridData('Conversion', 1, 'dblConversionToStock', '2.20462')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .displayText('======== kg1 UOM added ========"')
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//
//        //d. Add LB UOM
//        .displayText('d. Add Other UOM to LB.')
//        .doubleClickSearchRowValue('lb1', 'strUnitMeasure', 1)
//        .waitUntilLoaded('icinventoryuom',3000)
//
//        .selectGridComboBoxRowValue('Conversion',1,'colOtherUOM','10-lb bag1','strUnitMeasure',1)
//        .enterGridData('Conversion', 1, 'dblConversionToStock', '10.000000')
//
//        .selectGridComboBoxRowValue('Conversion',2,'colOtherUOM','kg1','strUnitMeasure',1)
//        .enterGridData('Conversion', 2, 'dblConversionToStock', '0.453592')
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('======== Add UOM Done ========')
//        .clickMenuFolder('Inventory','Folder')
//        .waitUntilLoaded()
//        .displayText('===== 10. Add Inventory UOM DONE =====')
//
//        //Add Category - Inventory Type
//        .displayText('===== 11. Add New Category - Inventory Type =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Categories','Screen')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('iccategory',3000)
//        .enterData('Text Field','CategoryCode','Item Category1')
//        .enterData('Text Field','Description','Item Category1 desc')
//        .selectComboBoxRowNumber('InventoryType',2,0)
//        .selectComboBoxRowNumber('CostingMethod',2,0)
//        .selectGridComboBoxRowValue('Tax',1,'colTaxClass','Tax Class A','strTaxClass',1)
//
//        .displayText('===== Setup GL Accounts=====')
//        .clickTab('GL Accounts')
//        .waitUntilLoaded('',3000)
//        .clickButton('AddRequired')
//        .waitUntilLoaded('',3000)
//        .verifyGridData('GlAccounts', 1, 'colAccountCategory', 'AP Clearing')
//        .verifyGridData('GlAccounts', 2, 'colAccountCategory', 'Inventory')
//        .verifyGridData('GlAccounts', 3, 'colAccountCategory', 'Cost of Goods')
//        .verifyGridData('GlAccounts', 4, 'colAccountCategory', 'Sales Account')
//        .verifyGridData('GlAccounts', 5, 'colAccountCategory', 'Inventory In-Transit')
//        .verifyGridData('GlAccounts', 6, 'colAccountCategory', 'Inventory Adjustment')
////        .verifyGridData('GlAccounts', 7, 'colAccountCategory', 'Auto-Variance')
//        .selectGridComboBoxRowValue('GlAccounts', 1, 'colAccountId', '20022-0001-001', 'strAccountId',1)
//        .selectGridComboBoxRowValue('GlAccounts', 2, 'colAccountId', '15012-0001-001', 'strAccountId',1)
//        .selectGridComboBoxRowValue('GlAccounts', 3, 'colAccountId', '50012-0001-001', 'strAccountId',1)
//        .selectGridComboBoxRowValue('GlAccounts', 4, 'colAccountId', '40012-0001-001', 'strAccountId',1)
//        .selectGridComboBoxRowValue('GlAccounts', 5, 'colAccountId', '16012-0001-001', 'strAccountId',1)
//        .selectGridComboBoxRowValue('GlAccounts', 6, 'colAccountId', '50022-0001-001', 'strAccountId',1)
////        .selectGridComboBoxRowValue('GlAccounts', 7, 'colAccountId', '50032-0001-001', 'strAccountId',1)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .displayText('===== 11. Add New Category - Inventory Type DONE =====')
//
//
//        //Add Category - Inventory Type
//        .displayText('===== 12. Add New Category - Other Charge Type =====')
//        .clickButton('New')
//        .waitUntilLoaded('iccategory',3000)
//        .clickTab('Detail')
//        .enterData('Text Field','CategoryCode','OC Category1')
//        .enterData('Text Field','Description','OC Category1 desc')
//        .selectComboBoxRowNumber('InventoryType',6,0)
//        .selectComboBoxRowNumber('CostingMethod',2,0)
//        .selectGridComboBoxRowValue('Tax',1,'colTaxClass','Tax Class A','strTaxClass',1)
//
//        .displayText('===== Setup GL Accounts=====')
//        .clickTab('GL Accounts')
//        .waitUntilLoaded('',3000)
//        .clickButton('AddRequired')
//        .waitUntilLoaded('',3000)
//        .verifyGridData('GlAccounts', 1, 'colAccountCategory', 'AP Clearing')
//        .verifyGridData('GlAccounts', 2, 'colAccountCategory', 'Other Charge Income')
//        .verifyGridData('GlAccounts', 3, 'colAccountCategory', 'Other Charge Expense')
//        .selectGridComboBoxRowValue('GlAccounts', 1, 'colAccountId', '20022-0001-001', 'strAccountId',1)
//        .selectGridComboBoxRowValue('GlAccounts', 2, 'colAccountId', '49012-0001-001', 'strAccountId',1)
//        .selectGridComboBoxRowValue('GlAccounts', 3, 'colAccountId', '59012-0001-001', 'strAccountId',1)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Add Category - Other Charge Type Done =====')
//        .displayText('===== 12. Add New Category - Other Charge Type DONE =====')
//        .clickMenuFolder('Inventory','Folder')
//
//
//
//        //Add Commodity
//        .displayText('===== 13. Add Commodity - Item =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Commodities','Screen')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('iccommodity',3000)
//        .enterData('Text Field','CommodityCode','Commodity1')
//        .enterData('Text Field','Description','Commodity1 desc')
//        //.clickCheckBox('ExchangeTraded',true)
//        //.enterData('Text Field','DecimalsOnDpr','6.00')
//        //.enterData('Text Field','ConsolidateFactor','6.00')
//
//        .selectGridComboBoxRowValue('Uom',1,'colUOMCode','lb1','strUnitMeasure')
//        .clickGridCheckBox('Uom', 1,'colUOMStockUnit', 'lb1', 'ysnStockUnit', true)
//        .waitUntilLoaded('',3000)
//        .selectGridComboBoxRowValue('Uom',2,'colUOMCode','10-lb bag1','strUnitMeasure')
//        .waitUntilLoaded('',3000)
//        .selectGridComboBoxRowValue('Uom',3,'colUOMCode','kg1','strUnitMeasure')
//        .waitUntilLoaded('',3000)
//
//        .verifyGridData('Uom', 1, 'colUOMUnitQty', '1')
//        .verifyGridData('Uom', 2, 'colUOMUnitQty', '10')
//        .verifyGridData('Uom', 3, 'colUOMUnitQty', '2.20462')
//        .clickButton('Save')
//        .verifyStatusMessage('Saved')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== 13. Add Commodity - Item DONE =====')
//        .clickMenuFolder('Inventory','Folder')
//
//
//        //Add Item
//        .displayText('===== 14. Add Item =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Items','Screen')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('icitem',3000)
//        .enterData('Text Field','ItemNo','Item A1')
//        .enterData('Text Field','Description','Item A1 desc')
//        .selectComboBoxRowValue('Type', 'Inventory', 'Type',1)
//        .selectComboBoxRowValue('Category', 'Item Category1', 'Category',1)
//        .selectComboBoxRowValue('Commodity', 'Commodity1', 'Commodity',1)
//        .selectComboBoxRowNumber('LotTracking',4,0)
//        .verifyData('Combo Box','Tracking','Item Level')
//
//        .displayText('===== Setup Item UOM =====')
//        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '1.000000')
//        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '10.000000')
//        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '2.204620')
//
//
//        .displayText('===== Setup Item Location=====')
//        .clickTab('Setup')
//        .waitUntilLoaded('',3000)
//        .clickTab('Location')
//        .clickButton('AddLocation')
//        .waitUntilLoaded('icitemlocation',3000)
//        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
//        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
//        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
//        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Location - 0001 Done=====')
//
//        .clickButton('AddLocation')
//        .waitUntilLoaded('icitemlocation',3000)
//        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
//        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
//        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
//        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
//        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Location - 0002 Done=====')
//
//        .displayText('===== Setup Item Pricing=====')
//        .clickTab('Pricing')
//        .waitUntilLoaded('')
//
//        .verifyGridData('Pricing', 1, 'strLocationName', '0001 - Fort Wayne')
//        .enterGridData('Pricing', 1, 'dblLastCost', '10')
//        .enterGridData('Pricing', 1, 'dblStandardCost', '10')
//        .selectGridComboBoxRowNumber('Pricing', 1, 'strPricingMethod',3)
//        .enterGridData('Pricing', 1, 'dblAmountPercent', '40')
//        .verifyGridData('Pricing', 1, 'dblSalePrice', '14')
//
//        .verifyGridData('Pricing', 2, 'strLocationName', '0002 - Indianapolis')
//        .enterGridData('Pricing', 2, 'dblLastCost', '10')
//        .enterGridData('Pricing', 2, 'dblStandardCost', '10')
//        .selectGridComboBoxRowNumber('Pricing', 2, 'strPricingMethod',3)
//        .enterGridData('Pricing', 2, 'dblAmountPercent', '40')
//        .verifyGridData('Pricing', 2, 'dblSalePrice', '14')
//
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Pricing Done=====')
//        .displayText('===== 14. Add Item =====')
//
//        //Add Other Charge Item - Freight1
//        .displayText('===== 15. Add Other Charge Item - Freight1 =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Items','Screen')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('icitem',3000)
//        .enterData('Text Field','ItemNo','Freight1')
//        .enterData('Text Field','Description','Freight1 desc')
//        .selectComboBoxRowValue('Type', 'Other Charge', 'Type',1)
//        .selectComboBoxRowValue('Category', 'OC Category1', 'Category',1)
//        .selectComboBoxRowValue('Commodity', 'Commodity1', 'Commodity',1)
//        .verifyData('Combo Box','LotTracking','No',0)
//        .verifyData('Combo Box','Tracking','Item Level',0)
//
//        .displayText('===== Setup Item UOM =====')
//        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '1.000000')
//        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '10.000000')
//        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '2.204620')
//
//
//        .displayText('===== Setup Item Location=====')
//        .clickTab('Setup')
//        .waitUntilLoaded('',3000)
//        .clickTab('Location')
//        .clickButton('AddLocation')
//        .waitUntilLoaded('icitemlocation',3000)
//        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
//        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
//        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
//        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Location - 0001 Done=====')
//
//        .clickButton('AddLocation')
//        .waitUntilLoaded('icitemlocation',3000)
//        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
//        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
//        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
//        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
//        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Location - 0002 Done=====')
//
//        .displayText('===== Setup Item Pricing=====')
//        .clickTab('Setup')
//        .waitUntilLoaded('')
//        .clickTab('Cost')
//        .waitUntilLoaded('')
//        .clickCheckBox('InventoryCost',false)
//        .clickCheckBox('Accrue',true)
//        .selectComboBoxRowValue('M2M', 'No', 'M2M',0)
//        .clickCheckBox('Price',false)
//        .selectComboBoxRowNumber('CostType',1,0)
//        //.selectComboBoxRowValue('CostType', 'Discount', 'CostType',3,1)
//        .selectComboBoxRowNumber('CostMethod',1,0)
//        //.selectComboBoxRowValue('CostMethod', 'Per Unit', 'CostMethod',1,1)
//        .enterData('Text Field','Amount','1.50')
//        .selectComboBoxRowValue('CostUOM', 'lb1', 'CostUOM',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Pricing Done=====')
//        .displayText('===== 15. Add Other Charge Item - Freight1 DONE =====')
//        .clickMenuFolder('Inventory','Folder')
//        .waitUntilLoaded('')
//
//        //Add Other Charge Item - Discount1
//        .displayText('===== 16. Add Other Charge Item - Discount1 =====')
//        .clickMenuFolder('Inventory','Folder')
//        .clickMenuScreen('Items','Screen')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('icitem',3000)
//        .enterData('Text Field','ItemNo','Discount1')
//        .enterData('Text Field','Description','Discount1 desc')
//        .selectComboBoxRowValue('Type', 'Other Charge', 'Type',1)
//        .selectComboBoxRowValue('Category', 'OC Category1', 'Category',1)
//        .selectComboBoxRowValue('Commodity', 'Commodity1', 'Commodity',1)
//        .verifyData('Combo Box','LotTracking','No',0)
//        .verifyData('Combo Box','Tracking','Item Level',0)
//
//        .displayText('===== Setup Item UOM =====')
//        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '1.000000')
//        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '10.000000')
//        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '2.204620')
//
//
//        .displayText('===== Setup Item Location=====')
//        .clickTab('Setup')
//        .waitUntilLoaded('',3000)
//        .clickTab('Location')
//        .clickButton('AddLocation')
//        .waitUntilLoaded('icitemlocation',3000)
//        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
//        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
//        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
//        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Location - 0001 Done=====')
//
//        .clickButton('AddLocation')
//        .waitUntilLoaded('icitemlocation',3000)
//        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
//        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
//        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
//        .selectComboBoxRowValue('IssueUom', 'lb1', 'IssueUom',0)
//        .selectComboBoxRowValue('ReceiveUom', 'lb1', 'ReceiveUom',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Item Location - 0002 Done=====')
//
//        .displayText('===== Setup Other Charge Cost =====')
//        .clickTab('Setup')
//        .waitUntilLoaded('')
//        .clickTab('Cost')
//        .waitUntilLoaded('')
//        .clickCheckBox('InventoryCost',false)
//        .clickCheckBox('Accrue',false)
//        .selectComboBoxRowValue('M2M', 'No', 'M2M',0)
//        .clickCheckBox('Price',true)
//        .selectComboBoxRowNumber('CostType',3,0)
//        //.selectComboBoxRowValue('CostType', 'Discount', 'CostType',3,1)
//        .selectComboBoxRowNumber('CostMethod',1,0)
//        //.selectComboBoxRowValue('CostMethod', 'Per Unit', 'CostMethod',1,1)
//        .enterData('Text Field','Amount','1.20')
//        .selectComboBoxRowValue('CostUOM', 'lb1', 'CostUOM',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== Setup Other Charge Cost Done =====')
//        .displayText('===== 16. Add Other Charge Item - Discount1 DONE =====')
//        .clickMenuFolder('Inventory','Folder')
//        .waitUntilLoaded('')
//
//        //Add Vendors
//        .displayText('===== 17. Create Item Vendor =====')
//        .clickMenuFolder('Purchasing (Accounts Payable)')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Vendors')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('emcreatenewentity',3000)
//        .enterData('Text Field','Name','Item Vendor1')
//        .enterData('Text Field','Contact','Item Vendor1-C1')
//        .enterData('Text Field','Phone','1234567890')
//        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
//        .enterData('Text Field','Address','123 Wide Street')
//        .enterData('Text Field','City','Richmond')
//        .enterData('Text Field','State','IN')
//        .enterData('Text Field','ZipCode','47374')
//        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
//        .clickButton('Match')
//        .waitUntilLoaded('emduplicateentities',3000)
//        .clickButton('Add')
//        .enterData('Text Field','Location','Item Vendor1-Loc1')
//        .clickTab('Vendor')
//        .waitUntilLoaded('')
//        .selectGridComboBoxRowValue('VendorTerm',1,'colVendorTerms','Net 30','strTerm')
//        .selectComboBoxRowValue('VendorTerms', 'Net 30', 'VendorTerms',5)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== 17. Create Item Vendor DONE =====')
//        .clickMenuFolder('Purchasing (Accounts Payable)')
//
//        .displayText('===== 18. Create 3rd Party Vendor =====')
//        .clickMenuFolder('Purchasing (Accounts Payable)')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Vendors')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('emcreatenewentity',3000)
//        .enterData('Text Field','Name','3rd Party Vendor1')
//        .enterData('Text Field','Contact','3rd Party Vendor1-C1')
//        .enterData('Text Field','Phone','1234567890')
//        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
//        .enterData('Text Field','Address','789 Narrow Drive')
//        .enterData('Text Field','City','Richmond')
//        .enterData('Text Field','State','IN')
//        .enterData('Text Field','ZipCode','47374')
//        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
//        .clickButton('Match')
//        .waitUntilLoaded('emduplicateentities',3000)
//        .clickButton('Add')
//        .enterData('Text Field','Location','3rd Party Vendor1-Loc1')
//        .clickTab('Vendor')
//        .waitUntilLoaded('')
//        .selectGridComboBoxRowValue('VendorTerm',1,'colVendorTerms','Net 30','strTerm')
//        .selectComboBoxRowValue('VendorTerms', 'Net 30', 'VendorTerms',5)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== 18. Create 3rd Party Vendor DONE =====')
//        .clickMenuFolder('Purchasing (Accounts Payable)')
//
//
//        .displayText('===== 19. Create Customer =====')
//        .clickMenuFolder('Sales (Accounts Receivable)')
//        .waitUntilLoaded('',3000)
//        .clickMenuScreen('Customers')
//        .waitUntilLoaded('',3000)
//        .clickButton('New')
//        .waitUntilLoaded('emcreatenewentity',3000)
//        .enterData('Text Field','Name','Customer1')
//        .enterData('Text Field','Contact','Customer1-C1')
//        .enterData('Text Field','Phone','0123456789')
//        .enterData('Text Field','Email','rufil.cabangal@gmail.com')
//        .enterData('Text Field','Address','456 Flower Drive')
//        .enterData('Text Field','City','Richmond')
//        .enterData('Text Field','State','IN')
//        .enterData('Text Field','ZipCode','47374')
//        .selectComboBoxRowValue('Timezone', '(UTC-05:00) Indiana (East)', 'Timezone',0)
//        .clickButton('Match')
//        .waitUntilLoaded('emduplicateentities',3000)
//        .clickButton('Add')
//        .enterData('Text Field','Location','Customer1-Loc1')
//        .clickTab('Customer')
//        .waitUntilLoaded('')
//        .selectComboBoxRowValue('CustomerTerms', 'Net 30', 'CustomerTerms',5)
//        .selectComboBoxRowNumber('CustomerSalesperson',1,0)
//        .clickTab('Locations')
//        .selectGridRowNumber('Location',1)
//        .clickButton('EditLoc')
//        .waitUntilLoaded('')
//        .selectComboBoxRowValue('Country', 'United States', 'Country',0)
//        .selectComboBoxRowValue('ShipVia', 'UPS', 'ShipVia',0)
//        .selectComboBoxRowValue('TaxGroup', 'Test Group 1', 'TaxGroup',0)
//        .selectComboBoxRowValue('Terms', 'Net 30', 'Terms',5)
//        .selectComboBoxRowValue('Warehouse', '0001 - Fort Wayne', 'Warehouse',0)
//        .selectComboBoxRowValue('FreightTerm', 'Deliver', 'FreightTerm',0)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .clickButton('Save')
//        .waitUntilLoaded('',3000)
//        .clickButton('Close')
//        .waitUntilLoaded('',3000)
//        .displayText('===== 19. Create Customer DONE =====')
//        .clickMenuFolder('Sales (Accounts Receivable)')

        .done()
});