StartTest (function (t) {
    var commonIC = Ext.create('i21.test.Inventory.CommonIC');
    new iRely.FunctionalTest().start(t)

        //region 1. Add Another Company Location for Irelyadmin User and setup default decimals
        .displayText('===== 1. Add Another Company Location for irelyadmin User =====')
        .clickMenuFolder('System Manager','Folder')
        .clickMenuScreen('Users','Screen')
        .waitUntilLoaded()
        .doubleClickSearchRowValue('irelyadmin', 'strUsername', 1)
        .waitUntilLoaded('ementity')
        .selectComboBoxRowValue('Timezone', '(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi', 'Timezone',0)
        .clickTab('User')
        .waitUntilLoaded()
        .selectComboBoxRowValue('UserNumberFormat', '1,234,567.89', 'UserNumberFormat',1)
        .clickTab('User Roles')
        .waitUntilLoaded()
        .selectGridComboBoxRowValue('UserRoleCompanyLocationRolePermission', 3, 'strLocationName', '0002 - Indianapolis', 'strLocationName')
        .selectGridComboBoxRowValue('UserRoleCompanyLocationRolePermission', 3, 'strUserRole', 'ADMIN', 'strUserRole')
        .clickButton('Save')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()
        .clickMenuFolder('System Manager','Folder')
        //endregion

        //region Scenario 2: Add New Storage Location
        .displayText('===== Scenario 2: Add New Storage Location. =====')
        .clickMenuFolder('Inventory','Folder')
        .clickMenuScreen('Storage Locations','Screen')
        .clickButton('New')
        .waitUntilLoaded('icstorageunit')
        .enterData('Text Field','Name','Indy Storage')
        .enterData('Text Field','Description','Indy Storage')
        .selectComboBoxRowNumber('UnitType',6,0)
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('ParentUnit', 'RM Storage', 'ParentUnit',0)
        .enterData('Text Field','Aisle','Test Aisle - 01')
        .clickCheckBox('AllowConsume', true)
        .clickCheckBox('AllowMultipleItems', true)
        .clickCheckBox('AllowMultipleLots', true)
        .clickCheckBox('CycleCounted', true)
        .verifyStatusMessage('Edited')
        .clickButton('Save')
        .verifyStatusMessage('Saved')
        .clickButton('Close')
        //endregion


        //region Scenario 3: Add New Non Lotted Item
        .displayText('===== Scenario 3: Add Non Lotted Item Test Item for Non Lotted Inventory Adjustment=====')
        .clickMenuScreen('Items','Screen')
        .clickButton('New')
        .enterData('Text Field','ItemNo','003 - CNLTI')
        .enterData('Text Field','Description','001 - CRUD Non Lotted Item')
        .selectComboBoxRowValue('Category', 'Grains', 'Category',0)
        .selectComboBoxRowValue('Commodity', 'Corn', 'Commodity',0)
        .selectComboBoxRowNumber('LotTracking',3,0)
        .verifyData('Combo Box','Tracking','Item Level')

        .displayText('===== Setup Item UOM=====')
        .selectGridComboBoxRowValue('UnitOfMeasure',1,'strUnitMeasure','LB','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',2,'strUnitMeasure','50 lb bag','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',3,'strUnitMeasure','Bushels','strUnitMeasure')
        .selectGridComboBoxRowValue('UnitOfMeasure',4,'strUnitMeasure','25 kg bag','strUnitMeasure')
        .clickGridCheckBox('UnitOfMeasure',0, 'strUnitMeasure', 'LB', 'ysnStockUnit', true)
        .waitUntilLoaded('')
        .verifyGridData('UnitOfMeasure', 1, 'colDetailUnitQty', '1')
        .verifyGridData('UnitOfMeasure', 2, 'colDetailUnitQty', '50')
        .verifyGridData('UnitOfMeasure', 3, 'colDetailUnitQty', '56')
        .verifyGridData('UnitOfMeasure', 4, 'colDetailUnitQty', '55.1156')

        .displayText('===== Setup Item GL Accounts=====')
        .clickTab('Setup')
        .clickButton('AddRequiredAccounts')
        .verifyGridData('GlAccounts', 1, 'colGLAccountCategory', 'AP Clearing')
        .verifyGridData('GlAccounts', 2, 'colGLAccountCategory', 'Inventory')
        .verifyGridData('GlAccounts', 3, 'colGLAccountCategory', 'Cost of Goods')
        .verifyGridData('GlAccounts', 4, 'colGLAccountCategory', 'Sales Account')
        .verifyGridData('GlAccounts', 5, 'colGLAccountCategory', 'Inventory In-Transit')
        .verifyGridData('GlAccounts', 6, 'colGLAccountCategory', 'Inventory Adjustment')
        .verifyGridData('GlAccounts', 7, 'colGLAccountCategory', 'Auto-Variance')
        .selectGridComboBoxRowValue('GlAccounts', 1, 'strAccountId', '21000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 2, 'strAccountId', '16000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 3, 'strAccountId', '50000-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 4, 'strAccountId', '40010-0001-006', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 5, 'strAccountId', '16050-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 6, 'strAccountId', '16040-0000-000', 'strAccountId')
        .selectGridComboBoxRowValue('GlAccounts', 7, 'strAccountId', '16010-0000-000', 'strAccountId')

        .displayText('===== Setup Item Location=====')
        .clickTab('Location')
        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('SubLocation', 'Raw Station', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'RM Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')

        .clickButton('AddLocation')
        .waitUntilLoaded('')
        .selectComboBoxRowValue('Location', '0002 - Indianapolis', 'Location',0)
        .selectComboBoxRowValue('SubLocation', 'Indy', 'SubLocation',0)
        .selectComboBoxRowValue('StorageLocation', 'Indy Storage', 'StorageLocation',0)
        .selectComboBoxRowValue('IssueUom', 'LB', 'IssueUom',0)
        .selectComboBoxRowValue('ReceiveUom', 'LB', 'ReceiveUom',0)
        .clickButton('Save')
        .clickButton('Close')
        .waitUntilLoaded()
        .clickButton('Save')
        .waitUntilLoaded()
        .clickButton('Close')
        .waitUntilLoaded()
        .clickMenuFolder('Inventory','Folder')
        //endregion


        .done();

})