/*
 * File: app/view/ContractDocumentViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Inventory.view.EditCatalogViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.iceditcatalog',

    show : function(config) {
        "use strict";

        var me = this,
            win = this.getView();

        if (config) {

            switch(config.action){
                case 'add':

                    break;
                case 'addroot':

                    break;
                case 'edit':
                    var form = win.down('form');
                    form.loadRecord(config.record);
                    break;
            }

            win.show();
        }
    },

    onbtnSaveClick: function(button, e, eOpts) {
        var win = button.up('window');
        var form = win.down('form');

        var controller = win.getController();
        if (controller.isDirty){
            controller.catalog = form.getValues();
        }
        win.close();
    },

    onbtnUndoClick: function(button, e, eOpts) {
        var win = button.up('window');
        var form = win.down('form');
        form.reset();
    },

    onbtnCloseClick: function(button, e, eOpts) {
        var win = button.up('window');
        win.close();
    },

    onDirtyChange: function(component, isDirty, eOpts) {
        if (isDirty)
        {
            var controller = component.up('window').getController();
            controller.isDirty = true;
        }
    },

    init: function(application) {
        this.control({
            "#btnSave": {
                click: this.onbtnSaveClick
            },
            "#btnUndo": {
                click: this.onbtnUndoClick
            },
            "#btnClose": {
                click: this.onbtnCloseClick
            },
            "#txtCatalogName": {
                dirtychange: this.onDirtyChange
            },
            "#txtDescription": {
                dirtychange: this.onDirtyChange
            }
        });
    }
});
