/*
 * File: app/view/ImportLogMessageBox.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Inventory.view.ImportLogMessageBox', {
    extend: 'Ext.window.Window',
    alias: 'widget.icimportlogmessagebox',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.grid.feature.GroupingSummary',
        'Ext.XTemplate',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 375,
    minHeight: 375,
    minWidth: 672,
    width: 672,
    layout: 'fit',
    title: 'Log Messages',
    modal: true,

    items: [
        {
            xtype: 'panel',
            layout: 'fit',
            items: [
                {
                    xtype: 'gridpanel',
                    height: 150,
                    itemId: 'gridLogs',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            itemId: 'colType',
                            dataIndex: 'Type',
                            text: 'Type'
                        },
                        {
                            xtype: 'gridcolumn',
                            itemId: 'colMessage',
                            width: 250,
                            cellWrap: true,
                            dataIndex: 'Message',
                            text: 'Message'
                        },
                        {
                            xtype: 'gridcolumn',
                            itemId: 'colRow',
                            dataIndex: 'Row',
                            text: 'Row'
                        },
                        {
                            xtype: 'gridcolumn',
                            itemId: 'colColumn',
                            dataIndex: 'Column',
                            text: 'Field'
                        },
                        {
                            xtype: 'gridcolumn',
                            itemId: 'colStatus',
                            width: 200,
                            dataIndex: 'Status',
                            text: 'Status'
                        }
                    ],
                    features: [
                        {
                            ftype: 'groupingsummary',
                            groupHeaderTpl: [
                                '{columnName}: {name}'
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            ui: 'i21-toolbar',
            items: [
                {
                    xtype: 'button',
                    itemId: 'btnClose',
                    ui: 'i21-button-toolbar-small',
                    text: 'Close'
                }
            ]
        }
    ]

});