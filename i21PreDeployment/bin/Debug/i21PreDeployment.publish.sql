/*
Deployment script for Powell

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Powell"
:setvar DefaultFilePrefix "Powell"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.SQL2008R2DEV\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.SQL2008R2DEV\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/




-- CONSOLIDATED DELETE SCRIPTS


PRINT N' BEGIN CONSOLIDATED DELETE PATH: 13.4 to 14.1'


GO
	PRINT N'Dropping FK_dbo.Reports_dbo.CompanyInformations_intCompanyInformationId...';
GO
	ALTER TABLE [dbo].[tblRMReports] DROP CONSTRAINT [FK_dbo.Reports_dbo.CompanyInformations_intCompanyInformationId];
GO
	PRINT N'Dropping FK_dbo.CriteriaFieldSelections_dbo.Connections_intConnectionId...';
GO
	ALTER TABLE [dbo].[tblRMCriteriaFieldSelections] DROP CONSTRAINT [FK_dbo.CriteriaFieldSelections_dbo.Connections_intConnectionId];
GO
	PRINT N'Dropping FK_dbo.Datasources_dbo.Connections_intConnectionId...';
GO
	ALTER TABLE [dbo].[tblRMDatasources] DROP CONSTRAINT [FK_dbo.Datasources_dbo.Connections_intConnectionId];
GO
	PRINT N'Dropping FK_dbo.FieldSelectionFilters_dbo.CriteriaFields_intCriteriaFieldId...';
GO
	ALTER TABLE [dbo].[tblRMFieldSelectionFilters] DROP CONSTRAINT [FK_dbo.FieldSelectionFilters_dbo.CriteriaFields_intCriteriaFieldId];
GO
	PRINT N'Dropping FK_dbo.CriteriaFields_dbo.CriteriaFieldSelections_intCriteriaFieldSelectionId...';
GO
	ALTER TABLE [dbo].[tblRMCriteriaFields] DROP CONSTRAINT [FK_dbo.CriteriaFields_dbo.CriteriaFieldSelections_intCriteriaFieldSelectionId];
GO
	PRINT N'Dropping FK_dbo.Options_dbo.Reports_intReportId...';
GO
	ALTER TABLE [dbo].[tblRMOptions] DROP CONSTRAINT [FK_dbo.Options_dbo.Reports_intReportId];
GO
	PRINT N'Dropping FK_dbo.Sorts_dbo.Reports_intReportId...';
GO
	ALTER TABLE [dbo].[tblRMSorts] DROP CONSTRAINT [FK_dbo.Sorts_dbo.Reports_intReportId];
GO
	PRINT N'Dropping FK_dbo.SubreportSettings_dbo.Reports_intReportId...';
GO
	ALTER TABLE [dbo].[tblRMSubreportSettings] DROP CONSTRAINT [FK_dbo.SubreportSettings_dbo.Reports_intReportId];
GO
	PRINT N'Dropping FK_dbo.Configurations_dbo.Reports_intReportId...';
GO
	ALTER TABLE [dbo].[tblRMConfigurations] DROP CONSTRAINT [FK_dbo.Configurations_dbo.Reports_intReportId];
GO
	PRINT N'Dropping FK_dbo.CriteriaFields_dbo.Reports_intReportId...';
GO
	ALTER TABLE [dbo].[tblRMCriteriaFields] DROP CONSTRAINT [FK_dbo.CriteriaFields_dbo.Reports_intReportId];
GO
	PRINT N'Dropping FK_dbo.Datasources_dbo.Reports_intReportId...';
GO
	ALTER TABLE [dbo].[tblRMDatasources] DROP CONSTRAINT [FK_dbo.Datasources_dbo.Reports_intReportId];
GO
	PRINT N'Dropping FK_dbo.Filters_dbo.Reports_intReportId...';
GO
	ALTER TABLE [dbo].[tblRMFilters] DROP CONSTRAINT [FK_dbo.Filters_dbo.Reports_intReportId];
GO
	PRINT N'Dropping [dbo].[tblRMArchives]...';
GO
	DROP TABLE [dbo].[tblRMArchives];
GO
	PRINT N'Dropping [dbo].[tblRMCompanyInformations]...';
GO
	DROP TABLE [dbo].[tblRMCompanyInformations];
GO
	PRINT N'Dropping [dbo].[tblRMConfigurations]...';
GO
	DROP TABLE [dbo].[tblRMConfigurations];
GO
	PRINT N'Dropping [dbo].[tblRMFieldSelectionFilters]...';
GO
	DROP TABLE [dbo].[tblRMFieldSelectionFilters];
GO
	PRINT N'Dropping [dbo].[tblRMFilters]...';
GO
	DROP TABLE [dbo].[tblRMFilters];
GO
	PRINT N'Dropping [dbo].[tblRMOptions]...';
GO
	DROP TABLE [dbo].[tblRMOptions];
GO
	PRINT N'Dropping [dbo].[tblRMSorts]...';
GO
	DROP TABLE [dbo].[tblRMSorts];
GO
	PRINT N'Dropping [dbo].[tblRMSubreportSettings]...';
GO
	DROP TABLE [dbo].[tblRMSubreportSettings];
GO
	PRINT N'Dropping [dbo].[tblRMUsers]...';
GO
	DROP TABLE [dbo].[tblRMUsers];
GO
	PRINT N'Dropping [dbo].[vwapivcmst]...';
GO
	DROP VIEW [dbo].[vwapivcmst];
GO
	PRINT N'Dropping [dbo].[vwcoctlmst]...';
GO
	DROP VIEW [dbo].[vwcoctlmst];
GO
	PRINT N'Dropping [dbo].[vwticmst]...';
GO
	DROP VIEW [dbo].[vwticmst];
GO
	PRINT N'Dropping [dbo].[vyu_GLAccountView]...';
GO
	DROP VIEW [dbo].[vyu_GLAccountView];
GO
	PRINT N'Dropping [dbo].[vyu_GLDetailView]...';
GO
	DROP VIEW [dbo].[vyu_GLDetailView];
GO
	PRINT N'Dropping [dbo].[usp_BuildGLAccount]...';
GO
	DROP PROCEDURE [dbo].[usp_BuildGLAccount];
GO
	PRINT N'Dropping [dbo].[usp_BuildGLAccountTemporary]...';
GO
	DROP PROCEDURE [dbo].[usp_BuildGLAccountTemporary];
GO
	PRINT N'Dropping [dbo].[usp_RMInsertDynamicParameterFields]...';
GO
	DROP PROCEDURE [dbo].[usp_RMInsertDynamicParameterFields];
GO
	PRINT N'Dropping [dbo].[usp_SyncAccounts]...';
GO
	DROP PROCEDURE [dbo].[usp_SyncAccounts];
GO
	PRINT N'Dropping [dbo].[tblRMConnections]...';
GO
	DROP TABLE [dbo].[tblRMConnections];
GO
	PRINT N'Dropping [dbo].[tblRMCriteriaFields]...';
GO
	DROP TABLE [dbo].[tblRMCriteriaFields];
GO
	PRINT N'Dropping [dbo].[tblRMCriteriaFieldSelections]...';
GO
	DROP TABLE [dbo].[tblRMCriteriaFieldSelections];
GO
	PRINT N'Dropping [dbo].[tblRMDatasources]...';
GO
	DROP TABLE [dbo].[tblRMDatasources];
GO
	PRINT N'Dropping [dbo].[tblRMReports]...';
GO
	DROP TABLE [dbo].[tblRMReports];
GO
	PRINT N'Dropping [dbo].[usp_BuildGLTempCOASegment]...';
GO
	DROP PROCEDURE [dbo].[usp_BuildGLTempCOASegment];
GO



PRINT N' END CONSOLIDATED DELETE PATH: 13.4 to 14.1'

-- TM
--tblTMClock
IF EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblTMClock]') AND type in (N'U')) 
BEGIN
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblAccumulatedWinterClose' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblAccDDWinterClose' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblAccDDWinterClose', 'dblAccumulatedWinterClose' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblJanuaryDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD01' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD01', 'dblJanuaryDailyAverage' , 'COLUMN'
    END
         
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblFebruaryDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD02' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD02', 'dblFebruaryDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblMarchDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD03' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD03', 'dblMarchDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblAprilDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD04' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD04', 'dblAprilDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblMayDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD05' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD05', 'dblMayDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblJuneDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD06' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD06', 'dblJuneDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblJulyDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD07' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD07', 'dblJulyDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblAugustDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD08' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD08', 'dblAugustDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblSeptemberDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD09' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD09', 'dblSeptemberDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblOctoberDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD10' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD10', 'dblOctoberDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblNovemberDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDailyAverageDD11' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD11', 'dblNovemberDailyAverage' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDecemberDailyAverage' AND OBJECT_ID = OBJECT_ID(N'tblTMClock')) AND EXISTS (SELECT * FROM sys.columns WHERE NAME  = N'dblDailyAverageDD12' AND OBJECT_ID = OBJECT_ID(N'tblTMClock'))
    BEGIN
        EXEC sp_rename 'tblTMClock.dblDailyAverageDD12', 'dblDecemberDailyAverage' , 'COLUMN'
    END
     
END
GO
 
-- tblTMDegreeDay
IF NOT EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblTMDegreeDayReading]') AND type in (N'U')) AND EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblTMDDReading]') AND type in (N'U'))
BEGIN
    EXEC sp_rename 'tblTMDDReading', 'tblTMDegreeDayReading'
END
GO
IF EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblTMDegreeDayReading]') AND type in (N'U')) 
BEGIN
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intDegreeDayReadingID' AND OBJECT_ID = OBJECT_ID(N'tblTMDegreeDayReading')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intDDReadingID' AND OBJECT_ID = OBJECT_ID(N'tblTMDegreeDayReading'))
    BEGIN
        EXEC sp_rename 'tblTMDegreeDayReading.intDDReadingID', 'intDegreeDayReadingID' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intClockLocationID' AND OBJECT_ID = OBJECT_ID(N'tblTMDegreeDayReading')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intDDClockLocationID' AND OBJECT_ID = OBJECT_ID(N'tblTMDegreeDayReading'))
    BEGIN
        EXEC sp_rename 'tblTMDegreeDayReading.intDDClockLocationID', 'intClockLocationID' , 'COLUMN'
    END
     
    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblAccumulatedDegreeDay' AND OBJECT_ID = OBJECT_ID(N'tblTMDegreeDayReading')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblAccumulatedDD' AND OBJECT_ID = OBJECT_ID(N'tblTMDegreeDayReading'))
    BEGIN
        EXEC sp_rename 'tblTMDegreeDayReading.dblAccumulatedDD', 'dblAccumulatedDegreeDay' , 'COLUMN'
    END
END
GO
-- tblTMDeliveryHistoryDetail
--ALTER TABLE tblTMDeliveryHistoryDetail  
--ALTER COLUMN dblPercentAfterDelivery NUMERIC(18,6) NOT NULL
-- tblTMDispatch
IF EXISTS (SELECT TOP 1 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_tblTMDispatch_tblTMSite]') AND parent_object_id = OBJECT_ID(N'[dbo].[tblTMDispatch]')) 
BEGIN
    ALTER TABLE [dbo].[tblTMDispatch] 
    DROP CONSTRAINT [FK_tblTMDispatch_tblTMSite]
END
GO
IF NOT EXISTS (SELECT TOP 1 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_tblTMDispatch_tblTMSite1]') AND parent_object_id = OBJECT_ID(N'[dbo].[tblTMDispatch]'))
BEGIN
    ALTER TABLE [dbo].[tblTMDispatch] WITH CHECK ADD  CONSTRAINT [FK_tblTMDispatch_tblTMSite1] FOREIGN KEY([intSiteID])
    REFERENCES [dbo].[tblTMSite] ([intSiteID])
END
GO
IF EXISTS (SELECT TOP 1 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_tblTMDispatch_tblTMSite1]') AND parent_object_id = OBJECT_ID(N'[dbo].[tblTMDispatch]'))
BEGIN
    ALTER TABLE [dbo].[tblTMDispatch] CHECK CONSTRAINT [FK_tblTMDispatch_tblTMSite1]
END
GO
-- tblTMEvent
IF EXISTS (SELECT TOP 1 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_tblTMEvent_tblTMDevice]') AND parent_object_id = OBJECT_ID(N'[dbo].[tblTMEvent]')) 
BEGIN
    ALTER TABLE [dbo].[tblTMEvent]
    DROP CONSTRAINT [FK_tblTMEvent_tblTMDevice]
END
GO
 
-- tblTMEventType
IF EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'ysnDefault' AND OBJECT_ID = OBJECT_ID(N'tblTMEventType')) 
BEGIN
    ALTER TABLE [dbo].[tblTMEventType]
    ALTER COLUMN ysnDefault bit NOT NULL
END
GO
 
-- tblTMSite
IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intClockID' AND OBJECT_ID = OBJECT_ID(N'tblTMSite')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intClockLocno' AND OBJECT_ID = OBJECT_ID(N'tblTMSite'))
BEGIN
    EXEC sp_rename 'tblTMSite.intClockLocno', 'intClockID' , 'COLUMN'
END
GO
     
IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDegreeDayBetweenDelivery' AND OBJECT_ID = OBJECT_ID(N'tblTMSite')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'dblDDBetweenDlvry' AND OBJECT_ID = OBJECT_ID(N'tblTMSite'))
BEGIN
    EXEC sp_rename 'tblTMSite.dblDDBetweenDlvry', 'dblDegreeDayBetweenDelivery' , 'COLUMN'
END
GO
     
IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'ysnPrintDeliveryTicket' AND OBJECT_ID = OBJECT_ID(N'tblTMSite')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'ysnPrintDlvryTicket' AND OBJECT_ID = OBJECT_ID(N'tblTMSite'))
BEGIN
    EXEC sp_rename 'tblTMSite.ysnPrintDlvryTicket', 'ysnPrintDeliveryTicket' , 'COLUMN'
END
GO
-- tblTMSyncOutOfRange
IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intSyncOutOfRangeID' AND OBJECT_ID = OBJECT_ID(N'tblTMSyncOutOfRange')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intSyncOutOfRange' AND OBJECT_ID = OBJECT_ID(N'tblTMSyncOutOfRange'))
BEGIN
    EXEC sp_rename 'tblTMSyncOutOfRange.intSyncOutOfRange', 'intSyncOutOfRangeID', 'COLUMN'
END
GO
-- tblTMWork
IF NOT EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblTMWorkOrder]') AND type in (N'U')) AND EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblTMWork]') AND type in (N'U'))
BEGIN
    EXEC sp_rename 'tblTMWork', 'tblTMWorkOrder'
END
GO
IF NOT EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intWorkStatusTypeID' AND OBJECT_ID = OBJECT_ID(N'tblTMWorkOrder')) AND EXISTS (SELECT TOP 1 1 FROM sys.columns WHERE NAME  = N'intWorkStatusID' AND OBJECT_ID = OBJECT_ID(N'tblTMWorkOrder'))
BEGIN
    EXEC sp_rename 'tblTMWorkOrder.intWorkStatusID', 'intWorkStatusTypeID', 'COLUMN'
END
GO
 
---Update data in tblTMDispatch
    UPDATE tblTMDispatch
    SET intSiteID = intDispatchID
    WHERE isnull(intSiteID, '') = ''
GO
 
 
---Update data in tblTMApplianceType
UPDATE tblTMApplianceType
SET ysnDefault = 0
WHERE ysnDefault IS NULL 
 
GO
-- BEGIN DROP TRASH VIEWS
    /****** Object:  View [dbo].[vwCSSearch]     ******/
    IF OBJECT_ID(N'dbo.vwCSSearch', N'V') IS NOT NULL
    BEGIN
        DROP VIEW dbo.vwCSSearch
    END
    /****** Object:  View [dbo].[vyu_DeliveryFillReport]     ******/
    -- will be recreated on Reports create views 
    IF OBJECT_ID(N'dbo.vyu_DeliveryFillReport', N'V') IS NOT NULL
    BEGIN
        DROP VIEW dbo.vyu_DeliveryFillReport
    END
--END DROP TRASH VIEWS
GO


GO
	select * into #tmpU from INFORMATION_SCHEMA.TABLE_CONSTRAINTS where CONSTRAINT_TYPE='UNIQUE' and TABLE_NAME like 'tblTM%'
	while exists (select top 1 1 from #tmpU)
	begin
		declare @consName nvarchar(max)
		declare @tableName nvarchar(max)
		declare @command  nvarchar(max)
     
		select top 1 
			@consName = CONSTRAINT_NAME, @tableName = TABLE_NAME
			, @command = 'ALTER TABLE ' + TABLE_NAME + ' DROP CONSTRAINT ' + CONSTRAINT_NAME  
		from
			#tmpU
     
		exec (@command) -- executes the alter
		delete from #tmpU where CONSTRAINT_NAME = @consName and TABLE_NAME = @tableName
	end
	drop table #tmpU
GO

-- CM
IF EXISTS(select 1  from INFORMATION_SCHEMA.TABLES where TABLE_NAME = N'apcbkmst' and TABLE_TYPE = N'BASE TABLE')
BEGIN
	EXEC sp_rename 'apcbkmst', 'apcbkmst_origin'
END

GO

IF EXISTS(select 1  from INFORMATION_SCHEMA.TABLES where TABLE_NAME = N'apchkmst' and TABLE_TYPE = N'BASE TABLE')
BEGIN
	EXEC sp_rename 'apchkmst', 'apchkmst_origin'
END
GO



-- DB
--tblDBPanel
IF EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblDBPanel]') AND type in (N'U')) 
BEGIN
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanel')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanel'))
	BEGIN
	 EXEC sp_rename 'tblDBPanel.intPanelID', 'intPanelId', 'COLUMN'
	END
	  
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanel')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanel'))
	BEGIN
	 EXEC sp_rename 'tblDBPanel.intUserID', 'intUserId', 'COLUMN'
	END
	
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intSourcePanelId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanel')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intSourcePanelID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanel'))
	BEGIN
	 EXEC sp_rename 'tblDBPanel.intSourcePanelID', 'intSourcePanelId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intConnectionId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanel')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intConnectionID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanel'))
	BEGIN
	 EXEC sp_rename 'tblDBPanel.intConnectionID', 'intConnectionId', 'COLUMN'
	END
	     
END
GO



 --tblDBPanelAccess
IF EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblDBPanelAccess]') AND type in (N'U')) 
BEGIN
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelUserId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelAccess')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelUserID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelAccess'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelAccess.intPanelUserID', 'intPanelUserId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelAccess')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelAccess'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelAccess.intUserID', 'intUserId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelAccess')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelAccess'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelAccess.intPanelID', 'intPanelId', 'COLUMN'
	END
	     
END
GO



 --tblDBPanelColumn
IF EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblDBPanelColumn]') AND type in (N'U')) 
BEGIN
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelColumnId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelColumn')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelColumnID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelColumn'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelColumn.intPanelColumnID', 'intPanelColumnId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelColumn')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelColumn'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelColumn.intUserID', 'intUserId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelColumn')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelColumn'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelColumn.intPanelID', 'intPanelId', 'COLUMN'
	END
	     
END
GO



--tblDBPanelFormat
IF EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblDBPanelFormat]') AND type in (N'U')) 
BEGIN
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelFormatId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelFormat')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelFormatID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelFormat'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelFormat.intPanelFormatID', 'intPanelFormatId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelFormat')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelFormat'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelFormat.intUserID', 'intUserId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelFormat')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelFormat'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelFormat.intPanelID', 'intPanelId', 'COLUMN'
	END	
	  	     
END
GO



--tblDBPanelTab
IF EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblDBPanelTab]') AND type in (N'U')) 
BEGIN
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelTabId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelTab')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelTabID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelTab'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelTab.intPanelTabID', 'intPanelTabId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelTab')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelTab'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelTab.intUserID', 'intUserId', 'COLUMN'
	END
	  		     
END
GO



--tblDBPanelUser
IF EXISTS (SELECT TOP 1 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[tblDBPanelUser]') AND type in (N'U')) 
BEGIN
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelUserId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelUser')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelUserID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelUser'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelUser.intPanelUserID', 'intPanelUserId', 'COLUMN'
	END

	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelUser')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelUser'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelUser.intPanelID', 'intPanelId', 'COLUMN'
	END
	
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelTabId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelUser')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intPanelTabID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelUser'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelUser.intPanelTabID', 'intPanelTabId', 'COLUMN'
	END
	
	IF NOT EXISTS(SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserId' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelUser')) AND EXISTS (SELECT top 1 1 FROM sys.columns WHERE NAME  = N'intUserID' AND OBJECT_ID = OBJECT_ID(N'tblDBPanelUser'))
	BEGIN
	 EXEC sp_rename 'tblDBPanelUser.intUserID', 'intUserId', 'COLUMN'
	END  
	     
END
GO

-- SM
GO
	PRINT N'BEGIN CLEAN UP PREFERENCES - update null intUserID to 0'
GO
	UPDATE tblSMPreferences
	SET intUserID = 0 
	WHERE intUserID is null
GO
	PRINT N'END CLEAN UP PREFERENCES - update null intUserID to 0'
GO

GO
PRINT N'Update complete.';


GO
